# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  BuildConfiguration: Release

pool:
  vmImage: 'ubuntu-latest'
steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: 'sdk'
    useGlobalJson: true

- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'user-secrets'
    arguments: 'set ApiKeyBasic $(ApiKeyBasic)'
    workingDirectory: '$(System.DefaultWorkingDirectory)/GW2SDK.Tests'
  displayName: 'Configure ApiKeyBasic'

- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'user-secrets'
    arguments: 'set ApiKeyFull $(ApiKeyFull)'
    workingDirectory: '$(System.DefaultWorkingDirectory)/GW2SDK.Tests'
  displayName: 'Configure ApiKeyFull'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(BuildConfiguration)'
  displayName: 'Build All Projects'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) --no-build --settings $(System.DefaultWorkingDirectory)/coverletArgs.runsettings'
  displayName: 'Test All Projects'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    searchPatternPack: 'GW2SDK'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
    nobuild: true
    verbosityPack: Normal
  displayName: 'Package Artifacts'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'nupkg'
    targetPath: $(Build.ArtifactStagingDirectory)
  displayName: 'Publish Artifacts'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.5.1'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'GitHub Packages'
