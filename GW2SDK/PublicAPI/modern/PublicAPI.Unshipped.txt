#nullable enable
*REMOVED*GuildWars2.Extensible<TEnum>.Extensible(string! Name) -> void
*REMOVED*GuildWars2.Markup.MarkupHtmlConverter.Convert(GuildWars2.Markup.RootNode! root) -> string!
*REMOVED*GuildWars2.Markup.MarkupHtmlConverter.Convert(GuildWars2.Markup.RootNode! root, System.Collections.Generic.IReadOnlyDictionary<string!, string!>? colorMap) -> string!
*REMOVED*GuildWars2.Markup.MarkupLexer.Tokenize(string! input) -> System.Collections.Generic.IEnumerable<GuildWars2.Markup.MarkupToken!>!
*REMOVED*GuildWars2.Markup.MarkupParser.Parse(System.Collections.Generic.IEnumerable<GuildWars2.Markup.MarkupToken!>! input) -> GuildWars2.Markup.RootNode!
*REMOVED*GuildWars2.Markup.MarkupTextConverter.Convert(GuildWars2.Markup.RootNode! root) -> string!
*REMOVED*static GuildWars2.Extensible<TEnum>.operator !=(GuildWars2.Extensible<TEnum> left, GuildWars2.Extensible<TEnum> right) -> bool
*REMOVED*static GuildWars2.Extensible<TEnum>.operator !=(GuildWars2.Extensible<TEnum> left, string! right) -> bool
*REMOVED*static GuildWars2.Extensible<TEnum>.operator !=(GuildWars2.Extensible<TEnum> left, TEnum right) -> bool
*REMOVED*static GuildWars2.Extensible<TEnum>.operator ==(GuildWars2.Extensible<TEnum> left, GuildWars2.Extensible<TEnum> right) -> bool
*REMOVED*static GuildWars2.Extensible<TEnum>.operator ==(GuildWars2.Extensible<TEnum> left, string! right) -> bool
*REMOVED*static GuildWars2.Extensible<TEnum>.operator ==(GuildWars2.Extensible<TEnum> left, TEnum right) -> bool
*REMOVED*static GuildWars2.Hero.Equipment.Mounts.MountNameFormatter.FormatMountName(GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName> mountName) -> string!
GuildWars2.Authorization.Permission.None = 0 -> GuildWars2.Authorization.Permission
GuildWars2.Coin.Add(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Decrement() -> GuildWars2.Coin
GuildWars2.Coin.Divide(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Increment() -> GuildWars2.Coin
GuildWars2.Coin.Multiply(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Negate() -> GuildWars2.Coin
GuildWars2.Coin.Plus() -> GuildWars2.Coin
GuildWars2.Coin.Remainder(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Subtract(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.ToInt32() -> int
GuildWars2.Extensible<TEnum>.Extensible(string! name) -> void
GuildWars2.Guilds.Logs.GuildBankOperationKind.None = 0 -> GuildWars2.Guilds.Logs.GuildBankOperationKind
GuildWars2.Guilds.Logs.GuildMissionState.None = 0 -> GuildWars2.Guilds.Logs.GuildMissionState
GuildWars2.Guilds.Logs.GuildUpgradeAction.None = 0 -> GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.InfluenceActivityKind.None = 0 -> GuildWars2.Guilds.Logs.InfluenceActivityKind
GuildWars2.Guilds.Teams.GuildTeamRole.None = 0 -> GuildWars2.Guilds.Teams.GuildTeamRole
GuildWars2.Guilds.Teams.GuildTeamState.None = 0 -> GuildWars2.Guilds.Teams.GuildTeamState
GuildWars2.Hero.Attunement.None = 0 -> GuildWars2.Hero.Attunement
GuildWars2.Hero.BodyType.None = 0 -> GuildWars2.Hero.BodyType
GuildWars2.Hero.Builds.Facts.ComboFieldName.None = 0 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFinisherName.None = 0 -> GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.SkillCategoryName.None = 0 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillSlot.None = 0 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.TraitSlot.None = 0 -> GuildWars2.Hero.Builds.TraitSlot
GuildWars2.Hero.Builds.Transformation.None = 0 -> GuildWars2.Hero.Builds.Transformation
GuildWars2.Hero.Builds.WeaponType.Unknown = 0 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.None = 0 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Equipment.Material.None = 0 -> GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Mounts.MountName.None = 0 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.None = 0 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Templates.EquipmentLocation.None = 0 -> GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.None = 0 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.ProfessionName.None = 0 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.RaceName.None = 0 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.Training.TrainingCategory.None = 0 -> GuildWars2.Hero.Training.TrainingCategory
GuildWars2.Hero.WeightClass.None = 0 -> GuildWars2.Hero.WeightClass
GuildWars2.Http.QueryBuilder.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string!, string!>>!
GuildWars2.Items.GameType.None = 0 -> GuildWars2.Items.GameType
GuildWars2.Items.InfusionSlotUpgradeKind.None = 0 -> GuildWars2.Items.InfusionSlotUpgradeKind
GuildWars2.Items.Rarity.None = 0 -> GuildWars2.Items.Rarity
GuildWars2.Mumble.MapType.AutoRedirect = 0 -> GuildWars2.Mumble.MapType
GuildWars2.Pve.Dungeons.DungeonKind.None = 0 -> GuildWars2.Pve.Dungeons.DungeonKind
GuildWars2.Pve.Home.CollectionBox.None = 0 -> GuildWars2.Pve.Home.CollectionBox
GuildWars2.Pve.Raids.EncounterKind.None = 0 -> GuildWars2.Pve.Raids.EncounterKind
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode.None = 0 -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode
GuildWars2.Pvp.Games.PvpResult.None = 0 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpTeamColor.None = 0 -> GuildWars2.Pvp.Games.PvpTeamColor
GuildWars2.WizardsVault.ObjectiveTrack.None = 0 -> GuildWars2.WizardsVault.ObjectiveTrack
GuildWars2.WizardsVault.RewardKind.None = 0 -> GuildWars2.WizardsVault.RewardKind
GuildWars2.Worlds.WorldPopulation.None = 0 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Wvw.Matches.BonusKind.None = 0 -> GuildWars2.Wvw.Matches.BonusKind
static GuildWars2.Coin.FromInt32(int quantity) -> GuildWars2.Coin
static GuildWars2.Extensible<TEnum>.FromString(string! name) -> GuildWars2.Extensible<TEnum>
static GuildWars2.Extensible<TEnum>.operator !=(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator !=(in GuildWars2.Extensible<TEnum> left, string! right) -> bool
static GuildWars2.Extensible<TEnum>.operator !=(in GuildWars2.Extensible<TEnum> left, TEnum right) -> bool
static GuildWars2.Extensible<TEnum>.operator <(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator <=(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator ==(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator ==(in GuildWars2.Extensible<TEnum> left, string! right) -> bool
static GuildWars2.Extensible<TEnum>.operator ==(in GuildWars2.Extensible<TEnum> left, TEnum right) -> bool
static GuildWars2.Extensible<TEnum>.operator >(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator >=(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.ToExtensible(TEnum value) -> GuildWars2.Extensible<TEnum>
static GuildWars2.Hero.Equipment.Mounts.MountNameFormatter.FormatMountName(in GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName> mountName) -> string!
static GuildWars2.Markup.MarkupHtmlConverter.Convert(GuildWars2.Markup.RootNode! root) -> string!
static GuildWars2.Markup.MarkupHtmlConverter.Convert(GuildWars2.Markup.RootNode! root, System.Collections.Generic.IReadOnlyDictionary<string!, string!>? colorMap) -> string!
static GuildWars2.Markup.MarkupLexer.Tokenize(string! input) -> System.Collections.Generic.IEnumerable<GuildWars2.Markup.MarkupToken!>!
static GuildWars2.Markup.MarkupParser.Parse(System.Collections.Generic.IEnumerable<GuildWars2.Markup.MarkupToken!>! input) -> GuildWars2.Markup.RootNode!
static GuildWars2.Markup.MarkupTextConverter.Convert(GuildWars2.Markup.RootNode! root) -> string!
