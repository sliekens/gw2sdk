#nullable enable
abstract GuildWars2.Chat.Link.<Clone>$() -> GuildWars2.Chat.Link!
abstract GuildWars2.Flags.<Clone>$() -> GuildWars2.Flags!
abstract GuildWars2.Markup.MarkupNode.Type.get -> GuildWars2.Markup.MarkupNodeType
const GuildWars2.BaseAddress.Default = "https://api.guildwars2.com" -> string!
const GuildWars2.BulkQuery.DefaultChunkSize = 200 -> int
const GuildWars2.BulkQuery.DefaultDegreeOfParallelism = 20 -> int
const GuildWars2.Hero.Accounts.ProgressionKind.FractalAgonyImpedance = "fractal_agony_impedance" -> string!
const GuildWars2.Hero.Accounts.ProgressionKind.FractalEmpowerment = "fractal_empowerment" -> string!
const GuildWars2.Hero.Accounts.ProgressionKind.FractalKarmicRetribution = "fractal_karmic_retribution" -> string!
const GuildWars2.Hero.Accounts.ProgressionKind.FractalMistAttunement = "fractal_mist_attunement" -> string!
const GuildWars2.Hero.Accounts.ProgressionKind.Luck = "luck" -> string!
const GuildWars2.Hero.Equipment.Dyes.DyeColor.DyeRemoverId = 1 -> int
const GuildWars2.Http.HttpStatusCodeEx.TooManyRequests = (System.Net.HttpStatusCode)429 -> System.Net.HttpStatusCode
GuildWars2.Authorization.ApiKeyInfo
GuildWars2.Authorization.ApiKeyInfo.ApiKeyInfo() -> void
GuildWars2.Authorization.ApiKeyInfo.Equals(GuildWars2.Authorization.ApiKeyInfo? other) -> bool
GuildWars2.Authorization.CreatedSubtoken
GuildWars2.Authorization.CreatedSubtoken.<Clone>$() -> GuildWars2.Authorization.CreatedSubtoken!
GuildWars2.Authorization.CreatedSubtoken.CreatedSubtoken() -> void
GuildWars2.Authorization.CreatedSubtoken.Equals(GuildWars2.Authorization.CreatedSubtoken? other) -> bool
GuildWars2.Authorization.CreatedSubtoken.Subtoken.get -> string!
GuildWars2.Authorization.CreatedSubtoken.Subtoken.init -> void
GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Account = 1 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Builds = 2 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Characters = 3 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Guilds = 4 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Inventories = 5 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Progression = 6 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.PvP = 7 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.TradingPost = 10 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Unlocks = 8 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Wallet = 9 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.Permission.Wvw = 11 -> GuildWars2.Authorization.Permission
GuildWars2.Authorization.SubtokenInfo
GuildWars2.Authorization.SubtokenInfo.Equals(GuildWars2.Authorization.SubtokenInfo? other) -> bool
GuildWars2.Authorization.SubtokenInfo.ExpiresAt.get -> System.DateTimeOffset
GuildWars2.Authorization.SubtokenInfo.ExpiresAt.init -> void
GuildWars2.Authorization.SubtokenInfo.IssuedAt.get -> System.DateTimeOffset
GuildWars2.Authorization.SubtokenInfo.IssuedAt.init -> void
GuildWars2.Authorization.SubtokenInfo.SubtokenInfo() -> void
GuildWars2.Authorization.SubtokenInfo.Urls.get -> System.Collections.Generic.IReadOnlyCollection<System.Uri!>?
GuildWars2.Authorization.SubtokenInfo.Urls.init -> void
GuildWars2.Authorization.TokenClient
GuildWars2.Authorization.TokenClient.CreateSubtoken(string! accessToken, System.Collections.Generic.IEnumerable<GuildWars2.Authorization.Permission>? permissions = null, System.DateTimeOffset? absoluteExpirationDate = null, System.Collections.Generic.IEnumerable<string!>? allowedUrls = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Authorization.CreatedSubtoken! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Authorization.TokenClient.CreateSubtoken(string! accessToken, System.Collections.Generic.IEnumerable<GuildWars2.Authorization.Permission>? permissions = null, System.DateTimeOffset? absoluteExpirationDate = null, System.Collections.Generic.IEnumerable<System.Uri!>? allowedUrls = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Authorization.CreatedSubtoken! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Authorization.TokenClient.GetTokenInfo(string! accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Authorization.TokenInfo! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Authorization.TokenClient.TokenClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Authorization.TokenInfo
GuildWars2.Authorization.TokenInfo.Id.get -> string!
GuildWars2.Authorization.TokenInfo.Id.init -> void
GuildWars2.Authorization.TokenInfo.Name.get -> string!
GuildWars2.Authorization.TokenInfo.Name.init -> void
GuildWars2.Authorization.TokenInfo.Permissions.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Authorization.Permission>>!
GuildWars2.Authorization.TokenInfo.Permissions.init -> void
GuildWars2.Authorization.TokenInfo.TokenInfo() -> void
GuildWars2.Authorization.TokenInfo.TokenInfo(GuildWars2.Authorization.TokenInfo! original) -> void
GuildWars2.BaseAddress
GuildWars2.BulkProgress
GuildWars2.BulkProgress.<Clone>$() -> GuildWars2.BulkProgress!
GuildWars2.BulkProgress.BulkProgress(int ResultTotal, int ResultCount) -> void
GuildWars2.BulkProgress.Deconstruct(out int ResultTotal, out int ResultCount) -> void
GuildWars2.BulkProgress.Equals(GuildWars2.BulkProgress? other) -> bool
GuildWars2.BulkProgress.ResultCount.get -> int
GuildWars2.BulkProgress.ResultCount.init -> void
GuildWars2.BulkProgress.ResultTotal.get -> int
GuildWars2.BulkProgress.ResultTotal.init -> void
GuildWars2.BulkQuery
GuildWars2.BulkRequest<TKey, TValue>
GuildWars2.Chat.AchievementLink
GuildWars2.Chat.AchievementLink.AchievementId.get -> int
GuildWars2.Chat.AchievementLink.AchievementId.init -> void
GuildWars2.Chat.AchievementLink.AchievementLink() -> void
GuildWars2.Chat.AchievementLink.Equals(GuildWars2.Chat.AchievementLink? other) -> bool
GuildWars2.Chat.BuildTemplateLink
GuildWars2.Chat.BuildTemplateLink.AquaticSkills.get -> GuildWars2.Chat.SkillPalette
GuildWars2.Chat.BuildTemplateLink.AquaticSkills.init -> void
GuildWars2.Chat.BuildTemplateLink.BuildTemplateLink() -> void
GuildWars2.Chat.BuildTemplateLink.Equals(GuildWars2.Chat.BuildTemplateLink? other) -> bool
GuildWars2.Chat.BuildTemplateLink.GetBuild(GuildWars2.Gw2Client! gw2Client, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<GuildWars2.Hero.Builds.Build!>!
GuildWars2.Chat.BuildTemplateLink.Legends.get -> GuildWars2.Chat.Legends?
GuildWars2.Chat.BuildTemplateLink.Legends.init -> void
GuildWars2.Chat.BuildTemplateLink.Pets.get -> GuildWars2.Hero.Builds.SelectedPets?
GuildWars2.Chat.BuildTemplateLink.Pets.init -> void
GuildWars2.Chat.BuildTemplateLink.Profession.get -> GuildWars2.Hero.ProfessionName
GuildWars2.Chat.BuildTemplateLink.Profession.init -> void
GuildWars2.Chat.BuildTemplateLink.SkillOverrides.get -> int[]!
GuildWars2.Chat.BuildTemplateLink.SkillOverrides.init -> void
GuildWars2.Chat.BuildTemplateLink.Skills.get -> GuildWars2.Chat.SkillPalette
GuildWars2.Chat.BuildTemplateLink.Skills.init -> void
GuildWars2.Chat.BuildTemplateLink.Specialization1.get -> GuildWars2.Chat.Specialization?
GuildWars2.Chat.BuildTemplateLink.Specialization1.init -> void
GuildWars2.Chat.BuildTemplateLink.Specialization2.get -> GuildWars2.Chat.Specialization?
GuildWars2.Chat.BuildTemplateLink.Specialization2.init -> void
GuildWars2.Chat.BuildTemplateLink.Specialization3.get -> GuildWars2.Chat.Specialization?
GuildWars2.Chat.BuildTemplateLink.Specialization3.init -> void
GuildWars2.Chat.BuildTemplateLink.Weapon1.get -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Chat.BuildTemplateLink.Weapon1.init -> void
GuildWars2.Chat.BuildTemplateLink.Weapon2.get -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Chat.BuildTemplateLink.Weapon2.init -> void
GuildWars2.Chat.BuildTemplateLink.Weapon3.get -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Chat.BuildTemplateLink.Weapon3.init -> void
GuildWars2.Chat.CoinLink
GuildWars2.Chat.CoinLink.CoinLink() -> void
GuildWars2.Chat.CoinLink.Coins.get -> GuildWars2.Coin
GuildWars2.Chat.CoinLink.Coins.init -> void
GuildWars2.Chat.CoinLink.Equals(GuildWars2.Chat.CoinLink? other) -> bool
GuildWars2.Chat.ItemLink
GuildWars2.Chat.ItemLink.Count.get -> int
GuildWars2.Chat.ItemLink.Count.init -> void
GuildWars2.Chat.ItemLink.Equals(GuildWars2.Chat.ItemLink? other) -> bool
GuildWars2.Chat.ItemLink.GetSecondarySuffixItemLink() -> GuildWars2.Chat.ItemLink?
GuildWars2.Chat.ItemLink.GetSkinLink() -> GuildWars2.Chat.SkinLink?
GuildWars2.Chat.ItemLink.GetSuffixItemLink() -> GuildWars2.Chat.ItemLink?
GuildWars2.Chat.ItemLink.ItemId.get -> int
GuildWars2.Chat.ItemLink.ItemId.init -> void
GuildWars2.Chat.ItemLink.ItemLink() -> void
GuildWars2.Chat.ItemLink.SecondarySuffixItemId.get -> int?
GuildWars2.Chat.ItemLink.SecondarySuffixItemId.init -> void
GuildWars2.Chat.ItemLink.SkinId.get -> int?
GuildWars2.Chat.ItemLink.SkinId.init -> void
GuildWars2.Chat.ItemLink.SuffixItemId.get -> int?
GuildWars2.Chat.ItemLink.SuffixItemId.init -> void
GuildWars2.Chat.Legends
GuildWars2.Chat.Legends.<Clone>$() -> GuildWars2.Chat.Legends!
GuildWars2.Chat.Legends.ActiveAquaticLegend.get -> int?
GuildWars2.Chat.Legends.ActiveAquaticLegend.init -> void
GuildWars2.Chat.Legends.ActiveTerrestrialLegend.get -> int?
GuildWars2.Chat.Legends.ActiveTerrestrialLegend.init -> void
GuildWars2.Chat.Legends.Equals(GuildWars2.Chat.Legends? other) -> bool
GuildWars2.Chat.Legends.InactiveAquaticLegend.get -> int?
GuildWars2.Chat.Legends.InactiveAquaticLegend.init -> void
GuildWars2.Chat.Legends.InactiveAquaticSkills.get -> GuildWars2.Chat.SkillPalette
GuildWars2.Chat.Legends.InactiveAquaticSkills.init -> void
GuildWars2.Chat.Legends.InactiveTerrestrialLegend.get -> int?
GuildWars2.Chat.Legends.InactiveTerrestrialLegend.init -> void
GuildWars2.Chat.Legends.InactiveTerrestrialSkills.get -> GuildWars2.Chat.SkillPalette
GuildWars2.Chat.Legends.InactiveTerrestrialSkills.init -> void
GuildWars2.Chat.Legends.Legends() -> void
GuildWars2.Chat.Link
GuildWars2.Chat.Link.Link() -> void
GuildWars2.Chat.Link.Link(GuildWars2.Chat.Link! original) -> void
GuildWars2.Chat.ObjectiveLink
GuildWars2.Chat.ObjectiveLink.Equals(GuildWars2.Chat.ObjectiveLink? other) -> bool
GuildWars2.Chat.ObjectiveLink.MapId.get -> int
GuildWars2.Chat.ObjectiveLink.MapId.init -> void
GuildWars2.Chat.ObjectiveLink.ObjectiveId.get -> int
GuildWars2.Chat.ObjectiveLink.ObjectiveId.init -> void
GuildWars2.Chat.ObjectiveLink.ObjectiveLink() -> void
GuildWars2.Chat.OutfitLink
GuildWars2.Chat.OutfitLink.Equals(GuildWars2.Chat.OutfitLink? other) -> bool
GuildWars2.Chat.OutfitLink.OutfitId.get -> int
GuildWars2.Chat.OutfitLink.OutfitId.init -> void
GuildWars2.Chat.OutfitLink.OutfitLink() -> void
GuildWars2.Chat.PointOfInterestLink
GuildWars2.Chat.PointOfInterestLink.Equals(GuildWars2.Chat.PointOfInterestLink? other) -> bool
GuildWars2.Chat.PointOfInterestLink.PointOfInterestId.get -> int
GuildWars2.Chat.PointOfInterestLink.PointOfInterestId.init -> void
GuildWars2.Chat.PointOfInterestLink.PointOfInterestLink() -> void
GuildWars2.Chat.RecipeLink
GuildWars2.Chat.RecipeLink.Equals(GuildWars2.Chat.RecipeLink? other) -> bool
GuildWars2.Chat.RecipeLink.RecipeId.get -> int
GuildWars2.Chat.RecipeLink.RecipeId.init -> void
GuildWars2.Chat.RecipeLink.RecipeLink() -> void
GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.SelectedTrait.Bottom = 3 -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.SelectedTrait.Middle = 2 -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.SelectedTrait.None = 0 -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.SelectedTrait.Top = 1 -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.SkillLink
GuildWars2.Chat.SkillLink.Equals(GuildWars2.Chat.SkillLink? other) -> bool
GuildWars2.Chat.SkillLink.SkillId.get -> int
GuildWars2.Chat.SkillLink.SkillId.init -> void
GuildWars2.Chat.SkillLink.SkillLink() -> void
GuildWars2.Chat.SkillPalette
GuildWars2.Chat.SkillPalette.Deconstruct(out int? Heal, out int? Utility1, out int? Utility2, out int? Utility3, out int? Elite) -> void
GuildWars2.Chat.SkillPalette.Elite.get -> int?
GuildWars2.Chat.SkillPalette.Elite.set -> void
GuildWars2.Chat.SkillPalette.Equals(GuildWars2.Chat.SkillPalette other) -> bool
GuildWars2.Chat.SkillPalette.Heal.get -> int?
GuildWars2.Chat.SkillPalette.Heal.set -> void
GuildWars2.Chat.SkillPalette.SkillPalette() -> void
GuildWars2.Chat.SkillPalette.SkillPalette(int? Heal, int? Utility1, int? Utility2, int? Utility3, int? Elite) -> void
GuildWars2.Chat.SkillPalette.Utility1.get -> int?
GuildWars2.Chat.SkillPalette.Utility1.set -> void
GuildWars2.Chat.SkillPalette.Utility2.get -> int?
GuildWars2.Chat.SkillPalette.Utility2.set -> void
GuildWars2.Chat.SkillPalette.Utility3.get -> int?
GuildWars2.Chat.SkillPalette.Utility3.set -> void
GuildWars2.Chat.SkinLink
GuildWars2.Chat.SkinLink.Equals(GuildWars2.Chat.SkinLink? other) -> bool
GuildWars2.Chat.SkinLink.SkinId.get -> int
GuildWars2.Chat.SkinLink.SkinId.init -> void
GuildWars2.Chat.SkinLink.SkinLink() -> void
GuildWars2.Chat.Specialization
GuildWars2.Chat.Specialization.AdeptTrait.get -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.Specialization.AdeptTrait.set -> void
GuildWars2.Chat.Specialization.Deconstruct(out int Id, out GuildWars2.Chat.SelectedTrait AdeptTrait, out GuildWars2.Chat.SelectedTrait MasterTrait, out GuildWars2.Chat.SelectedTrait GrandmasterTrait) -> void
GuildWars2.Chat.Specialization.Equals(GuildWars2.Chat.Specialization other) -> bool
GuildWars2.Chat.Specialization.GrandmasterTrait.get -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.Specialization.GrandmasterTrait.set -> void
GuildWars2.Chat.Specialization.Id.get -> int
GuildWars2.Chat.Specialization.Id.set -> void
GuildWars2.Chat.Specialization.MasterTrait.get -> GuildWars2.Chat.SelectedTrait
GuildWars2.Chat.Specialization.MasterTrait.set -> void
GuildWars2.Chat.Specialization.Specialization() -> void
GuildWars2.Chat.Specialization.Specialization(int Id, GuildWars2.Chat.SelectedTrait AdeptTrait, GuildWars2.Chat.SelectedTrait MasterTrait, GuildWars2.Chat.SelectedTrait GrandmasterTrait) -> void
GuildWars2.Chat.TranslationLink
GuildWars2.Chat.TranslationLink.Equals(GuildWars2.Chat.TranslationLink? other) -> bool
GuildWars2.Chat.TranslationLink.TranslationId.get -> int
GuildWars2.Chat.TranslationLink.TranslationId.init -> void
GuildWars2.Chat.TranslationLink.TranslationLink() -> void
GuildWars2.Coin
GuildWars2.Coin.Amount.get -> int
GuildWars2.Coin.Coin() -> void
GuildWars2.Coin.Coin(int amount) -> void
GuildWars2.Coin.Coin(int gold, int silver, int copper) -> void
GuildWars2.Coin.Coin(int silver, int copper) -> void
GuildWars2.Coin.CompareTo(GuildWars2.Coin other) -> int
GuildWars2.Coin.CompareTo(object? obj) -> int
GuildWars2.Coin.Copper.get -> int
GuildWars2.Coin.Equals(GuildWars2.Coin other) -> bool
GuildWars2.Coin.GetChatLink() -> GuildWars2.Chat.CoinLink!
GuildWars2.Coin.Gold.get -> int
GuildWars2.Coin.Silver.get -> int
GuildWars2.Collections.ValueDictionary<TKey, TValue>
GuildWars2.Collections.ValueDictionary<TKey, TValue>.Equals(GuildWars2.Collections.ValueDictionary<TKey, TValue>? other) -> bool
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary() -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(int capacity) -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(int capacity, System.Collections.Generic.IEqualityComparer<TKey>? comparer) -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(System.Collections.Generic.IDictionary<TKey, TValue>! dictionary) -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(System.Collections.Generic.IDictionary<TKey, TValue>! dictionary, System.Collections.Generic.IEqualityComparer<TKey>? comparer) -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>! collection) -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>! collection, System.Collections.Generic.IEqualityComparer<TKey>? comparer) -> void
GuildWars2.Collections.ValueDictionary<TKey, TValue>.ValueDictionary(System.Collections.Generic.IEqualityComparer<TKey>? comparer) -> void
GuildWars2.Collections.ValueHashSet<T>
GuildWars2.Collections.ValueHashSet<T>.Equals(GuildWars2.Collections.ValueHashSet<T>? other) -> bool
GuildWars2.Collections.ValueHashSet<T>.ValueHashSet() -> void
GuildWars2.Collections.ValueHashSet<T>.ValueHashSet(System.Collections.Generic.IEnumerable<T>! collection) -> void
GuildWars2.Collections.ValueList<T>
GuildWars2.Collections.ValueList<T>.Equals(GuildWars2.Collections.ValueList<T>? other) -> bool
GuildWars2.Collections.ValueList<T>.ValueList() -> void
GuildWars2.Collections.ValueList<T>.ValueList(int capacity) -> void
GuildWars2.Collections.ValueList<T>.ValueList(System.Collections.Generic.IEnumerable<T>! collection) -> void
GuildWars2.Commerce.CommerceClient
GuildWars2.Commerce.CommerceClient.CommerceClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Commerce.CommerceClient.ExchangeGemsToGold(int gems, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Commerce.Exchange.GemsToGold! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.ExchangeGoldToGems(GuildWars2.Coin gold, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Commerce.Exchange.GoldToGems! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetBuyOrders(int pageIndex, int? pageSize, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Commerce.Transactions.Order!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetDeliveryBox(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Commerce.Delivery.DeliveryBox! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetItemPriceById(int itemId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Commerce.Prices.ItemPrice! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetItemPricesBulk(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Commerce.Prices.ItemPrice! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetItemPricesBulk(System.Collections.Generic.IEnumerable<int>! itemIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Commerce.Prices.ItemPrice! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetItemPricesByIds(System.Collections.Generic.IEnumerable<int>! itemIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Commerce.Prices.ItemPrice!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetItemPricesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetOrderBookById(int itemId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Commerce.Listings.OrderBook! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetOrderBooksBulk(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Commerce.Listings.OrderBook! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetOrderBooksBulk(System.Collections.Generic.IEnumerable<int>! itemIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Commerce.Listings.OrderBook! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetOrderBooksByIds(System.Collections.Generic.IEnumerable<int>! itemIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Commerce.Listings.OrderBook!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetOrderBooksIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetPurchases(int pageIndex, int? pageSize, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Commerce.Transactions.Transaction!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetSales(int pageIndex, int? pageSize, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Commerce.Transactions.Transaction!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.CommerceClient.GetSellOrders(int pageIndex, int? pageSize, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Commerce.Transactions.Order!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Commerce.Delivery.DeliveredItem
GuildWars2.Commerce.Delivery.DeliveredItem.<Clone>$() -> GuildWars2.Commerce.Delivery.DeliveredItem!
GuildWars2.Commerce.Delivery.DeliveredItem.Count.get -> int
GuildWars2.Commerce.Delivery.DeliveredItem.Count.init -> void
GuildWars2.Commerce.Delivery.DeliveredItem.DeliveredItem() -> void
GuildWars2.Commerce.Delivery.DeliveredItem.Equals(GuildWars2.Commerce.Delivery.DeliveredItem? other) -> bool
GuildWars2.Commerce.Delivery.DeliveredItem.Id.get -> int
GuildWars2.Commerce.Delivery.DeliveredItem.Id.init -> void
GuildWars2.Commerce.Delivery.DeliveryBox
GuildWars2.Commerce.Delivery.DeliveryBox.<Clone>$() -> GuildWars2.Commerce.Delivery.DeliveryBox!
GuildWars2.Commerce.Delivery.DeliveryBox.Coins.get -> GuildWars2.Coin
GuildWars2.Commerce.Delivery.DeliveryBox.Coins.init -> void
GuildWars2.Commerce.Delivery.DeliveryBox.DeliveryBox() -> void
GuildWars2.Commerce.Delivery.DeliveryBox.Equals(GuildWars2.Commerce.Delivery.DeliveryBox? other) -> bool
GuildWars2.Commerce.Delivery.DeliveryBox.Items.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Commerce.Delivery.DeliveredItem!>!
GuildWars2.Commerce.Delivery.DeliveryBox.Items.init -> void
GuildWars2.Commerce.Exchange.GemsToGold
GuildWars2.Commerce.Exchange.GemsToGold.<Clone>$() -> GuildWars2.Commerce.Exchange.GemsToGold!
GuildWars2.Commerce.Exchange.GemsToGold.Equals(GuildWars2.Commerce.Exchange.GemsToGold? other) -> bool
GuildWars2.Commerce.Exchange.GemsToGold.ExchangeRate.get -> GuildWars2.Coin
GuildWars2.Commerce.Exchange.GemsToGold.ExchangeRate.init -> void
GuildWars2.Commerce.Exchange.GemsToGold.GemsToGold() -> void
GuildWars2.Commerce.Exchange.GemsToGold.Gold.get -> GuildWars2.Coin
GuildWars2.Commerce.Exchange.GemsToGold.Gold.init -> void
GuildWars2.Commerce.Exchange.GoldToGems
GuildWars2.Commerce.Exchange.GoldToGems.<Clone>$() -> GuildWars2.Commerce.Exchange.GoldToGems!
GuildWars2.Commerce.Exchange.GoldToGems.Equals(GuildWars2.Commerce.Exchange.GoldToGems? other) -> bool
GuildWars2.Commerce.Exchange.GoldToGems.ExchangeRate.get -> GuildWars2.Coin
GuildWars2.Commerce.Exchange.GoldToGems.ExchangeRate.init -> void
GuildWars2.Commerce.Exchange.GoldToGems.Gems.get -> int
GuildWars2.Commerce.Exchange.GoldToGems.Gems.init -> void
GuildWars2.Commerce.Exchange.GoldToGems.GoldToGems() -> void
GuildWars2.Commerce.Listings.OrderBook
GuildWars2.Commerce.Listings.OrderBook.<Clone>$() -> GuildWars2.Commerce.Listings.OrderBook!
GuildWars2.Commerce.Listings.OrderBook.BestAsk.get -> GuildWars2.Coin?
GuildWars2.Commerce.Listings.OrderBook.BestBid.get -> GuildWars2.Coin?
GuildWars2.Commerce.Listings.OrderBook.BidAskSpread.get -> GuildWars2.Coin
GuildWars2.Commerce.Listings.OrderBook.Demand.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Commerce.Listings.OrderBookLine!>!
GuildWars2.Commerce.Listings.OrderBook.Demand.init -> void
GuildWars2.Commerce.Listings.OrderBook.Equals(GuildWars2.Commerce.Listings.OrderBook? other) -> bool
GuildWars2.Commerce.Listings.OrderBook.Id.get -> int
GuildWars2.Commerce.Listings.OrderBook.Id.init -> void
GuildWars2.Commerce.Listings.OrderBook.OrderBook() -> void
GuildWars2.Commerce.Listings.OrderBook.Supply.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Commerce.Listings.OrderBookLine!>!
GuildWars2.Commerce.Listings.OrderBook.Supply.init -> void
GuildWars2.Commerce.Listings.OrderBook.TotalDemand.get -> int
GuildWars2.Commerce.Listings.OrderBook.TotalSupply.get -> int
GuildWars2.Commerce.Listings.OrderBookLine
GuildWars2.Commerce.Listings.OrderBookLine.<Clone>$() -> GuildWars2.Commerce.Listings.OrderBookLine!
GuildWars2.Commerce.Listings.OrderBookLine.Equals(GuildWars2.Commerce.Listings.OrderBookLine? other) -> bool
GuildWars2.Commerce.Listings.OrderBookLine.Listings.get -> int
GuildWars2.Commerce.Listings.OrderBookLine.Listings.init -> void
GuildWars2.Commerce.Listings.OrderBookLine.OrderBookLine() -> void
GuildWars2.Commerce.Listings.OrderBookLine.Quantity.get -> int
GuildWars2.Commerce.Listings.OrderBookLine.Quantity.init -> void
GuildWars2.Commerce.Listings.OrderBookLine.UnitPrice.get -> GuildWars2.Coin
GuildWars2.Commerce.Listings.OrderBookLine.UnitPrice.init -> void
GuildWars2.Commerce.Prices.ItemPrice
GuildWars2.Commerce.Prices.ItemPrice.<Clone>$() -> GuildWars2.Commerce.Prices.ItemPrice!
GuildWars2.Commerce.Prices.ItemPrice.BestAsk.get -> GuildWars2.Coin
GuildWars2.Commerce.Prices.ItemPrice.BestAsk.init -> void
GuildWars2.Commerce.Prices.ItemPrice.BestBid.get -> GuildWars2.Coin
GuildWars2.Commerce.Prices.ItemPrice.BestBid.init -> void
GuildWars2.Commerce.Prices.ItemPrice.BidAskSpread.get -> GuildWars2.Coin
GuildWars2.Commerce.Prices.ItemPrice.Equals(GuildWars2.Commerce.Prices.ItemPrice? other) -> bool
GuildWars2.Commerce.Prices.ItemPrice.Id.get -> int
GuildWars2.Commerce.Prices.ItemPrice.Id.init -> void
GuildWars2.Commerce.Prices.ItemPrice.ItemPrice() -> void
GuildWars2.Commerce.Prices.ItemPrice.TotalDemand.get -> int
GuildWars2.Commerce.Prices.ItemPrice.TotalDemand.init -> void
GuildWars2.Commerce.Prices.ItemPrice.TotalSupply.get -> int
GuildWars2.Commerce.Prices.ItemPrice.TotalSupply.init -> void
GuildWars2.Commerce.Prices.ItemPrice.Whitelisted.get -> bool
GuildWars2.Commerce.Prices.ItemPrice.Whitelisted.init -> void
GuildWars2.Commerce.Transactions.Order
GuildWars2.Commerce.Transactions.Order.<Clone>$() -> GuildWars2.Commerce.Transactions.Order!
GuildWars2.Commerce.Transactions.Order.Created.get -> System.DateTimeOffset
GuildWars2.Commerce.Transactions.Order.Created.init -> void
GuildWars2.Commerce.Transactions.Order.Equals(GuildWars2.Commerce.Transactions.Order? other) -> bool
GuildWars2.Commerce.Transactions.Order.Id.get -> long
GuildWars2.Commerce.Transactions.Order.Id.init -> void
GuildWars2.Commerce.Transactions.Order.ItemId.get -> int
GuildWars2.Commerce.Transactions.Order.ItemId.init -> void
GuildWars2.Commerce.Transactions.Order.Order() -> void
GuildWars2.Commerce.Transactions.Order.Quantity.get -> int
GuildWars2.Commerce.Transactions.Order.Quantity.init -> void
GuildWars2.Commerce.Transactions.Order.UnitPrice.get -> GuildWars2.Coin
GuildWars2.Commerce.Transactions.Order.UnitPrice.init -> void
GuildWars2.Commerce.Transactions.Transaction
GuildWars2.Commerce.Transactions.Transaction.<Clone>$() -> GuildWars2.Commerce.Transactions.Transaction!
GuildWars2.Commerce.Transactions.Transaction.Created.get -> System.DateTimeOffset
GuildWars2.Commerce.Transactions.Transaction.Created.init -> void
GuildWars2.Commerce.Transactions.Transaction.Equals(GuildWars2.Commerce.Transactions.Transaction? other) -> bool
GuildWars2.Commerce.Transactions.Transaction.Executed.get -> System.DateTimeOffset
GuildWars2.Commerce.Transactions.Transaction.Executed.init -> void
GuildWars2.Commerce.Transactions.Transaction.Id.get -> long
GuildWars2.Commerce.Transactions.Transaction.Id.init -> void
GuildWars2.Commerce.Transactions.Transaction.ItemId.get -> int
GuildWars2.Commerce.Transactions.Transaction.ItemId.init -> void
GuildWars2.Commerce.Transactions.Transaction.Quantity.get -> int
GuildWars2.Commerce.Transactions.Transaction.Quantity.init -> void
GuildWars2.Commerce.Transactions.Transaction.Transaction() -> void
GuildWars2.Commerce.Transactions.Transaction.UnitPrice.get -> GuildWars2.Coin
GuildWars2.Commerce.Transactions.Transaction.UnitPrice.init -> void
GuildWars2.Exploration.Adventures.Adventure
GuildWars2.Exploration.Adventures.Adventure.<Clone>$() -> GuildWars2.Exploration.Adventures.Adventure!
GuildWars2.Exploration.Adventures.Adventure.Adventure() -> void
GuildWars2.Exploration.Adventures.Adventure.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.Adventures.Adventure.Coordinates.init -> void
GuildWars2.Exploration.Adventures.Adventure.Description.get -> string!
GuildWars2.Exploration.Adventures.Adventure.Description.init -> void
GuildWars2.Exploration.Adventures.Adventure.Equals(GuildWars2.Exploration.Adventures.Adventure? other) -> bool
GuildWars2.Exploration.Adventures.Adventure.Id.get -> string!
GuildWars2.Exploration.Adventures.Adventure.Id.init -> void
GuildWars2.Exploration.Adventures.Adventure.Name.get -> string!
GuildWars2.Exploration.Adventures.Adventure.Name.init -> void
GuildWars2.Exploration.Continents.Continent
GuildWars2.Exploration.Continents.Continent.<Clone>$() -> GuildWars2.Exploration.Continents.Continent!
GuildWars2.Exploration.Continents.Continent.Continent() -> void
GuildWars2.Exploration.Continents.Continent.ContinentDimensions.get -> System.Drawing.Size
GuildWars2.Exploration.Continents.Continent.ContinentDimensions.init -> void
GuildWars2.Exploration.Continents.Continent.Equals(GuildWars2.Exploration.Continents.Continent? other) -> bool
GuildWars2.Exploration.Continents.Continent.Floors.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Exploration.Continents.Continent.Floors.init -> void
GuildWars2.Exploration.Continents.Continent.Id.get -> int
GuildWars2.Exploration.Continents.Continent.Id.init -> void
GuildWars2.Exploration.Continents.Continent.MaxZoom.get -> int
GuildWars2.Exploration.Continents.Continent.MaxZoom.init -> void
GuildWars2.Exploration.Continents.Continent.MinZoom.get -> int
GuildWars2.Exploration.Continents.Continent.MinZoom.init -> void
GuildWars2.Exploration.Continents.Continent.Name.get -> string!
GuildWars2.Exploration.Continents.Continent.Name.init -> void
GuildWars2.Exploration.ExplorationClient
GuildWars2.Exploration.ExplorationClient.ExplorationClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Exploration.ExplorationClient.GetCompletedHeroChallenges(string! characterName, string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetContinentById(int continentId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Continents.Continent! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetContinents(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Continents.Continent!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetContinentsByIds(System.Collections.Generic.IEnumerable<int>! continentIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Continents.Continent!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetContinentsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Continents.Continent!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetContinentsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetFloorById(int continentId, int floorId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Floors.Floor! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetFloors(int continentId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Floors.Floor!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetFloorsByIds(int continentId, System.Collections.Generic.IEnumerable<int>! floorIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Floors.Floor!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetFloorsByPage(int continentId, int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Floors.Floor!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetFloorsIndex(int continentId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetHeartById(int continentId, int floorId, int regionId, int mapId, int heartId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Hearts.Heart! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetHearts(int continentId, int floorId, int regionId, int mapId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Hearts.Heart!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetHeartsByIds(int continentId, int floorId, int regionId, int mapId, System.Collections.Generic.IEnumerable<int>! heartIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Hearts.Heart!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetHeartsByPage(int continentId, int floorId, int regionId, int mapId, int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Hearts.Heart!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetHeartsIndex(int continentId, int floorId, int regionId, int mapId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapById(int continentId, int floorId, int regionId, int mapId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Maps.Map! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMaps(int continentId, int floorId, int regionId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Maps.Map!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapsByIds(int continentId, int floorId, int regionId, System.Collections.Generic.IEnumerable<int>! mapIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Maps.Map!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapsByPage(int continentId, int floorId, int regionId, int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Maps.Map!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapsIndex(int continentId, int floorId, int regionId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapSummaries(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Maps.MapSummary!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapSummariesByIds(System.Collections.Generic.IEnumerable<int>! mapIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Maps.MapSummary!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapSummariesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Maps.MapSummary!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetMapSummaryById(int mapId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Maps.MapSummary! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetPointOfInterestById(int continentId, int floorId, int regionId, int mapId, int pointOfInterestId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.PointsOfInterest.PointOfInterest! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetPointsOfInterest(int continentId, int floorId, int regionId, int mapId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.PointsOfInterest.PointOfInterest!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetPointsOfInterestByIds(int continentId, int floorId, int regionId, int mapId, System.Collections.Generic.IEnumerable<int>! pointOfInterestIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.PointsOfInterest.PointOfInterest!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetPointsOfInterestByPage(int continentId, int floorId, int regionId, int mapId, int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.PointsOfInterest.PointOfInterest!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetPointsOfInterestIndex(int continentId, int floorId, int regionId, int mapId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetRegionById(int continentId, int floorId, int regionId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Regions.Region! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetRegions(int continentId, int floorId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Regions.Region!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetRegionsByIds(int continentId, int floorId, System.Collections.Generic.IEnumerable<int>! regionIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Regions.Region!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetRegionsByPage(int continentId, int floorId, int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Regions.Region!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetRegionsIndex(int continentId, int floorId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetSectorById(int continentId, int floorId, int regionId, int mapId, int sectorId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Exploration.Sectors.Sector! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetSectors(int continentId, int floorId, int regionId, int mapId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Sectors.Sector!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetSectorsByIds(int continentId, int floorId, int regionId, int mapId, System.Collections.Generic.IEnumerable<int>! sectorIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Sectors.Sector!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetSectorsByPage(int continentId, int floorId, int regionId, int mapId, int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Exploration.Sectors.Sector!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.ExplorationClient.GetSectorsIndex(int continentId, int floorId, int regionId, int mapId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Exploration.Floors.Floor
GuildWars2.Exploration.Floors.Floor.<Clone>$() -> GuildWars2.Exploration.Floors.Floor!
GuildWars2.Exploration.Floors.Floor.ClampedView.get -> System.Drawing.Rectangle?
GuildWars2.Exploration.Floors.Floor.ClampedView.init -> void
GuildWars2.Exploration.Floors.Floor.Equals(GuildWars2.Exploration.Floors.Floor? other) -> bool
GuildWars2.Exploration.Floors.Floor.Floor() -> void
GuildWars2.Exploration.Floors.Floor.Id.get -> int
GuildWars2.Exploration.Floors.Floor.Id.init -> void
GuildWars2.Exploration.Floors.Floor.Regions.get -> System.Collections.Generic.Dictionary<int, GuildWars2.Exploration.Regions.Region!>!
GuildWars2.Exploration.Floors.Floor.Regions.init -> void
GuildWars2.Exploration.Floors.Floor.TextureDimensions.get -> System.Drawing.Size
GuildWars2.Exploration.Floors.Floor.TextureDimensions.init -> void
GuildWars2.Exploration.GodShrines.GodShrine
GuildWars2.Exploration.GodShrines.GodShrine.<Clone>$() -> GuildWars2.Exploration.GodShrines.GodShrine!
GuildWars2.Exploration.GodShrines.GodShrine.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.GodShrines.GodShrine.Coordinates.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.Equals(GuildWars2.Exploration.GodShrines.GodShrine? other) -> bool
GuildWars2.Exploration.GodShrines.GodShrine.GetChatLink() -> GuildWars2.Chat.PointOfInterestLink!
GuildWars2.Exploration.GodShrines.GodShrine.GodShrine() -> void
GuildWars2.Exploration.GodShrines.GodShrine.IconContestedHref.get -> string!
GuildWars2.Exploration.GodShrines.GodShrine.IconContestedHref.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.IconContestedUrl.get -> System.Uri!
GuildWars2.Exploration.GodShrines.GodShrine.IconContestedUrl.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.IconHref.get -> string!
GuildWars2.Exploration.GodShrines.GodShrine.IconHref.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.IconUrl.get -> System.Uri!
GuildWars2.Exploration.GodShrines.GodShrine.IconUrl.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.Id.get -> int
GuildWars2.Exploration.GodShrines.GodShrine.Id.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.Name.get -> string!
GuildWars2.Exploration.GodShrines.GodShrine.Name.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.NameContested.get -> string!
GuildWars2.Exploration.GodShrines.GodShrine.NameContested.init -> void
GuildWars2.Exploration.GodShrines.GodShrine.PointOfInterestId.get -> int
GuildWars2.Exploration.GodShrines.GodShrine.PointOfInterestId.init -> void
GuildWars2.Exploration.Hearts.Heart
GuildWars2.Exploration.Hearts.Heart.<Clone>$() -> GuildWars2.Exploration.Hearts.Heart!
GuildWars2.Exploration.Hearts.Heart.Boundaries.get -> System.Collections.Generic.IReadOnlyCollection<System.Drawing.PointF>!
GuildWars2.Exploration.Hearts.Heart.Boundaries.init -> void
GuildWars2.Exploration.Hearts.Heart.ChatLink.get -> string!
GuildWars2.Exploration.Hearts.Heart.ChatLink.init -> void
GuildWars2.Exploration.Hearts.Heart.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.Hearts.Heart.Coordinates.init -> void
GuildWars2.Exploration.Hearts.Heart.Equals(GuildWars2.Exploration.Hearts.Heart? other) -> bool
GuildWars2.Exploration.Hearts.Heart.Heart() -> void
GuildWars2.Exploration.Hearts.Heart.Id.get -> int
GuildWars2.Exploration.Hearts.Heart.Id.init -> void
GuildWars2.Exploration.Hearts.Heart.Level.get -> int
GuildWars2.Exploration.Hearts.Heart.Level.init -> void
GuildWars2.Exploration.Hearts.Heart.Objective.get -> string!
GuildWars2.Exploration.Hearts.Heart.Objective.init -> void
GuildWars2.Exploration.HeroChallenges.HeroChallenge
GuildWars2.Exploration.HeroChallenges.HeroChallenge.<Clone>$() -> GuildWars2.Exploration.HeroChallenges.HeroChallenge!
GuildWars2.Exploration.HeroChallenges.HeroChallenge.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.HeroChallenges.HeroChallenge.Coordinates.init -> void
GuildWars2.Exploration.HeroChallenges.HeroChallenge.Equals(GuildWars2.Exploration.HeroChallenges.HeroChallenge? other) -> bool
GuildWars2.Exploration.HeroChallenges.HeroChallenge.HeroChallenge() -> void
GuildWars2.Exploration.HeroChallenges.HeroChallenge.Id.get -> string!
GuildWars2.Exploration.HeroChallenges.HeroChallenge.Id.init -> void
GuildWars2.Exploration.Maps.Map
GuildWars2.Exploration.Maps.Map.<Clone>$() -> GuildWars2.Exploration.Maps.Map!
GuildWars2.Exploration.Maps.Map.Adventures.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Exploration.Adventures.Adventure!>!
GuildWars2.Exploration.Maps.Map.Adventures.init -> void
GuildWars2.Exploration.Maps.Map.ContinentRectangle.get -> System.Drawing.Rectangle
GuildWars2.Exploration.Maps.Map.ContinentRectangle.init -> void
GuildWars2.Exploration.Maps.Map.DefaultFloor.get -> int
GuildWars2.Exploration.Maps.Map.DefaultFloor.init -> void
GuildWars2.Exploration.Maps.Map.Equals(GuildWars2.Exploration.Maps.Map? other) -> bool
GuildWars2.Exploration.Maps.Map.GodShrines.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Exploration.GodShrines.GodShrine!>?
GuildWars2.Exploration.Maps.Map.GodShrines.init -> void
GuildWars2.Exploration.Maps.Map.Hearts.get -> System.Collections.Generic.Dictionary<int, GuildWars2.Exploration.Hearts.Heart!>!
GuildWars2.Exploration.Maps.Map.Hearts.init -> void
GuildWars2.Exploration.Maps.Map.HeroChallenges.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Exploration.HeroChallenges.HeroChallenge!>!
GuildWars2.Exploration.Maps.Map.HeroChallenges.init -> void
GuildWars2.Exploration.Maps.Map.Id.get -> int
GuildWars2.Exploration.Maps.Map.Id.init -> void
GuildWars2.Exploration.Maps.Map.LabelCoordinates.get -> System.Drawing.Point?
GuildWars2.Exploration.Maps.Map.LabelCoordinates.init -> void
GuildWars2.Exploration.Maps.Map.Map() -> void
GuildWars2.Exploration.Maps.Map.MapRectangle.get -> System.Drawing.Rectangle
GuildWars2.Exploration.Maps.Map.MapRectangle.init -> void
GuildWars2.Exploration.Maps.Map.MasteryInsights.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Exploration.MasteryInsights.MasteryInsight!>!
GuildWars2.Exploration.Maps.Map.MasteryInsights.init -> void
GuildWars2.Exploration.Maps.Map.MaxLevel.get -> int
GuildWars2.Exploration.Maps.Map.MaxLevel.init -> void
GuildWars2.Exploration.Maps.Map.MinLevel.get -> int
GuildWars2.Exploration.Maps.Map.MinLevel.init -> void
GuildWars2.Exploration.Maps.Map.Name.get -> string!
GuildWars2.Exploration.Maps.Map.Name.init -> void
GuildWars2.Exploration.Maps.Map.PointsOfInterest.get -> System.Collections.Generic.Dictionary<int, GuildWars2.Exploration.PointsOfInterest.PointOfInterest!>!
GuildWars2.Exploration.Maps.Map.PointsOfInterest.init -> void
GuildWars2.Exploration.Maps.Map.Sectors.get -> System.Collections.Generic.Dictionary<int, GuildWars2.Exploration.Sectors.Sector!>!
GuildWars2.Exploration.Maps.Map.Sectors.init -> void
GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.BlueHome = 8 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.Center = 6 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.EdgeOfTheMists = 10 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.GreenHome = 9 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.Instance = 2 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.JumpPuzzle = 3 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.Public = 1 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.Pvp = 5 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.RedHome = 7 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.Tutorial = 4 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapKind.Unknown = 0 -> GuildWars2.Exploration.Maps.MapKind
GuildWars2.Exploration.Maps.MapSummary
GuildWars2.Exploration.Maps.MapSummary.<Clone>$() -> GuildWars2.Exploration.Maps.MapSummary!
GuildWars2.Exploration.Maps.MapSummary.ContinentId.get -> int?
GuildWars2.Exploration.Maps.MapSummary.ContinentId.init -> void
GuildWars2.Exploration.Maps.MapSummary.ContinentName.get -> string!
GuildWars2.Exploration.Maps.MapSummary.ContinentName.init -> void
GuildWars2.Exploration.Maps.MapSummary.ContinentRectangle.get -> System.Drawing.Rectangle
GuildWars2.Exploration.Maps.MapSummary.ContinentRectangle.init -> void
GuildWars2.Exploration.Maps.MapSummary.DefaultFloor.get -> int
GuildWars2.Exploration.Maps.MapSummary.DefaultFloor.init -> void
GuildWars2.Exploration.Maps.MapSummary.Equals(GuildWars2.Exploration.Maps.MapSummary? other) -> bool
GuildWars2.Exploration.Maps.MapSummary.Floors.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Exploration.Maps.MapSummary.Floors.init -> void
GuildWars2.Exploration.Maps.MapSummary.Id.get -> int
GuildWars2.Exploration.Maps.MapSummary.Id.init -> void
GuildWars2.Exploration.Maps.MapSummary.Kind.get -> GuildWars2.Extensible<GuildWars2.Exploration.Maps.MapKind>
GuildWars2.Exploration.Maps.MapSummary.Kind.init -> void
GuildWars2.Exploration.Maps.MapSummary.MapRectangle.get -> System.Drawing.Rectangle
GuildWars2.Exploration.Maps.MapSummary.MapRectangle.init -> void
GuildWars2.Exploration.Maps.MapSummary.MapSummary() -> void
GuildWars2.Exploration.Maps.MapSummary.MaxLevel.get -> int
GuildWars2.Exploration.Maps.MapSummary.MaxLevel.init -> void
GuildWars2.Exploration.Maps.MapSummary.MinLevel.get -> int
GuildWars2.Exploration.Maps.MapSummary.MinLevel.init -> void
GuildWars2.Exploration.Maps.MapSummary.Name.get -> string!
GuildWars2.Exploration.Maps.MapSummary.Name.init -> void
GuildWars2.Exploration.Maps.MapSummary.RegionId.get -> int?
GuildWars2.Exploration.Maps.MapSummary.RegionId.init -> void
GuildWars2.Exploration.Maps.MapSummary.RegionName.get -> string!
GuildWars2.Exploration.Maps.MapSummary.RegionName.init -> void
GuildWars2.Exploration.MasteryInsights.MasteryInsight
GuildWars2.Exploration.MasteryInsights.MasteryInsight.<Clone>$() -> GuildWars2.Exploration.MasteryInsights.MasteryInsight!
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Coordinates.init -> void
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Equals(GuildWars2.Exploration.MasteryInsights.MasteryInsight? other) -> bool
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Id.get -> int
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Id.init -> void
GuildWars2.Exploration.MasteryInsights.MasteryInsight.MasteryInsight() -> void
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Region.get -> GuildWars2.Extensible<GuildWars2.Hero.Masteries.MasteryRegionName>
GuildWars2.Exploration.MasteryInsights.MasteryInsight.Region.init -> void
GuildWars2.Exploration.PointsOfInterest.Landmark
GuildWars2.Exploration.PointsOfInterest.Landmark.Equals(GuildWars2.Exploration.PointsOfInterest.Landmark? other) -> bool
GuildWars2.Exploration.PointsOfInterest.Landmark.Landmark() -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.ChatLink.get -> string!
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.ChatLink.init -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Coordinates.init -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Floor.get -> int
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Floor.init -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.GetChatLink() -> GuildWars2.Chat.PointOfInterestLink!
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Id.get -> int
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Id.init -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Name.get -> string!
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Name.init -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.PointOfInterest() -> void
GuildWars2.Exploration.PointsOfInterest.PointOfInterest.PointOfInterest(GuildWars2.Exploration.PointsOfInterest.PointOfInterest! original) -> void
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.Equals(GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest? other) -> bool
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.IconHref.get -> string!
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.IconHref.init -> void
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.IconUrl.get -> System.Uri!
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.IconUrl.init -> void
GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.RequiresUnlockPointOfInterest() -> void
GuildWars2.Exploration.PointsOfInterest.Vista
GuildWars2.Exploration.PointsOfInterest.Vista.Equals(GuildWars2.Exploration.PointsOfInterest.Vista? other) -> bool
GuildWars2.Exploration.PointsOfInterest.Vista.Vista() -> void
GuildWars2.Exploration.PointsOfInterest.Waypoint
GuildWars2.Exploration.PointsOfInterest.Waypoint.Equals(GuildWars2.Exploration.PointsOfInterest.Waypoint? other) -> bool
GuildWars2.Exploration.PointsOfInterest.Waypoint.Waypoint() -> void
GuildWars2.Exploration.Regions.Region
GuildWars2.Exploration.Regions.Region.<Clone>$() -> GuildWars2.Exploration.Regions.Region!
GuildWars2.Exploration.Regions.Region.ContinentRectangle.get -> System.Drawing.Rectangle
GuildWars2.Exploration.Regions.Region.ContinentRectangle.init -> void
GuildWars2.Exploration.Regions.Region.Equals(GuildWars2.Exploration.Regions.Region? other) -> bool
GuildWars2.Exploration.Regions.Region.Id.get -> int
GuildWars2.Exploration.Regions.Region.Id.init -> void
GuildWars2.Exploration.Regions.Region.LabelCoordinates.get -> System.Drawing.Point
GuildWars2.Exploration.Regions.Region.LabelCoordinates.init -> void
GuildWars2.Exploration.Regions.Region.Maps.get -> System.Collections.Generic.Dictionary<int, GuildWars2.Exploration.Maps.Map!>!
GuildWars2.Exploration.Regions.Region.Maps.init -> void
GuildWars2.Exploration.Regions.Region.Name.get -> string!
GuildWars2.Exploration.Regions.Region.Name.init -> void
GuildWars2.Exploration.Regions.Region.Region() -> void
GuildWars2.Exploration.Sectors.Sector
GuildWars2.Exploration.Sectors.Sector.<Clone>$() -> GuildWars2.Exploration.Sectors.Sector!
GuildWars2.Exploration.Sectors.Sector.Boundaries.get -> System.Collections.Generic.IReadOnlyList<System.Drawing.PointF>!
GuildWars2.Exploration.Sectors.Sector.Boundaries.init -> void
GuildWars2.Exploration.Sectors.Sector.ChatLink.get -> string!
GuildWars2.Exploration.Sectors.Sector.ChatLink.init -> void
GuildWars2.Exploration.Sectors.Sector.Coordinates.get -> System.Drawing.PointF
GuildWars2.Exploration.Sectors.Sector.Coordinates.init -> void
GuildWars2.Exploration.Sectors.Sector.Equals(GuildWars2.Exploration.Sectors.Sector? other) -> bool
GuildWars2.Exploration.Sectors.Sector.Id.get -> int
GuildWars2.Exploration.Sectors.Sector.Id.init -> void
GuildWars2.Exploration.Sectors.Sector.Level.get -> int
GuildWars2.Exploration.Sectors.Sector.Level.init -> void
GuildWars2.Exploration.Sectors.Sector.Name.get -> string!
GuildWars2.Exploration.Sectors.Sector.Name.init -> void
GuildWars2.Exploration.Sectors.Sector.Sector() -> void
GuildWars2.Extensible<TEnum>
GuildWars2.Extensible<TEnum>.CompareTo(GuildWars2.Extensible<TEnum> other) -> int
GuildWars2.Extensible<TEnum>.CompareTo(object? obj) -> int
GuildWars2.Extensible<TEnum>.Equals(GuildWars2.Extensible<TEnum> other) -> bool
GuildWars2.Extensible<TEnum>.Extensible() -> void
GuildWars2.Extensible<TEnum>.IsDefined() -> bool
GuildWars2.Extensible<TEnum>.ToEnum() -> TEnum?
GuildWars2.Extensions
GuildWars2.Files.Asset
GuildWars2.Files.Asset.<Clone>$() -> GuildWars2.Files.Asset!
GuildWars2.Files.Asset.Asset() -> void
GuildWars2.Files.Asset.Equals(GuildWars2.Files.Asset? other) -> bool
GuildWars2.Files.Asset.IconHref.get -> string!
GuildWars2.Files.Asset.IconHref.init -> void
GuildWars2.Files.Asset.IconUrl.get -> System.Uri!
GuildWars2.Files.Asset.IconUrl.init -> void
GuildWars2.Files.Asset.Id.get -> string!
GuildWars2.Files.Asset.Id.init -> void
GuildWars2.Files.FilesClient
GuildWars2.Files.FilesClient.FilesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Files.FilesClient.GetFileById(string! fileId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Files.Asset! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Files.FilesClient.GetFiles(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Files.Asset!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Files.FilesClient.GetFilesByIds(System.Collections.Generic.IEnumerable<string!>! fileIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Files.Asset!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Files.FilesClient.GetFilesByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Files.Asset!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Files.FilesClient.GetFilesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Flags
GuildWars2.Flags.Flags() -> void
GuildWars2.Flags.Flags(GuildWars2.Flags! original) -> void
GuildWars2.Flags.Other.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Flags.Other.init -> void
GuildWars2.GameLink
GuildWars2.GameLink.Dispose() -> void
GuildWars2.GameLink.DisposeAsync() -> System.Threading.Tasks.ValueTask
GuildWars2.GameLink.GetSnapshot() -> GuildWars2.Mumble.GameTick
GuildWars2.GameLink.Subscribe(System.IObserver<GuildWars2.Mumble.GameTick>! observer) -> System.IDisposable!
GuildWars2.Guilds.Bank.GuildBankSlot
GuildWars2.Guilds.Bank.GuildBankSlot.<Clone>$() -> GuildWars2.Guilds.Bank.GuildBankSlot!
GuildWars2.Guilds.Bank.GuildBankSlot.Count.get -> int
GuildWars2.Guilds.Bank.GuildBankSlot.Count.init -> void
GuildWars2.Guilds.Bank.GuildBankSlot.Equals(GuildWars2.Guilds.Bank.GuildBankSlot? other) -> bool
GuildWars2.Guilds.Bank.GuildBankSlot.GuildBankSlot() -> void
GuildWars2.Guilds.Bank.GuildBankSlot.ItemId.get -> int
GuildWars2.Guilds.Bank.GuildBankSlot.ItemId.init -> void
GuildWars2.Guilds.Bank.GuildBankTab
GuildWars2.Guilds.Bank.GuildBankTab.<Clone>$() -> GuildWars2.Guilds.Bank.GuildBankTab!
GuildWars2.Guilds.Bank.GuildBankTab.Coins.get -> GuildWars2.Coin
GuildWars2.Guilds.Bank.GuildBankTab.Coins.init -> void
GuildWars2.Guilds.Bank.GuildBankTab.Equals(GuildWars2.Guilds.Bank.GuildBankTab? other) -> bool
GuildWars2.Guilds.Bank.GuildBankTab.GuildBankTab() -> void
GuildWars2.Guilds.Bank.GuildBankTab.Inventory.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Guilds.Bank.GuildBankSlot?>!
GuildWars2.Guilds.Bank.GuildBankTab.Inventory.init -> void
GuildWars2.Guilds.Bank.GuildBankTab.Note.get -> string!
GuildWars2.Guilds.Bank.GuildBankTab.Note.init -> void
GuildWars2.Guilds.Bank.GuildBankTab.Size.get -> int
GuildWars2.Guilds.Bank.GuildBankTab.Size.init -> void
GuildWars2.Guilds.Bank.GuildBankTab.UpgradeId.get -> int
GuildWars2.Guilds.Bank.GuildBankTab.UpgradeId.init -> void
GuildWars2.Guilds.Emblems.EmblemBackground
GuildWars2.Guilds.Emblems.EmblemBackground.<Clone>$() -> GuildWars2.Guilds.Emblems.EmblemBackground!
GuildWars2.Guilds.Emblems.EmblemBackground.EmblemBackground() -> void
GuildWars2.Guilds.Emblems.EmblemBackground.Equals(GuildWars2.Guilds.Emblems.EmblemBackground? other) -> bool
GuildWars2.Guilds.Emblems.EmblemBackground.Id.get -> int
GuildWars2.Guilds.Emblems.EmblemBackground.Id.init -> void
GuildWars2.Guilds.Emblems.EmblemBackground.Layers.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Guilds.Emblems.EmblemBackground.Layers.init -> void
GuildWars2.Guilds.Emblems.EmblemBackground.LayerUrls.get -> System.Collections.Generic.IReadOnlyList<System.Uri!>!
GuildWars2.Guilds.Emblems.EmblemBackground.LayerUrls.init -> void
GuildWars2.Guilds.Emblems.EmblemForeground
GuildWars2.Guilds.Emblems.EmblemForeground.<Clone>$() -> GuildWars2.Guilds.Emblems.EmblemForeground!
GuildWars2.Guilds.Emblems.EmblemForeground.EmblemForeground() -> void
GuildWars2.Guilds.Emblems.EmblemForeground.Equals(GuildWars2.Guilds.Emblems.EmblemForeground? other) -> bool
GuildWars2.Guilds.Emblems.EmblemForeground.Id.get -> int
GuildWars2.Guilds.Emblems.EmblemForeground.Id.init -> void
GuildWars2.Guilds.Emblems.EmblemForeground.Layers.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Guilds.Emblems.EmblemForeground.Layers.init -> void
GuildWars2.Guilds.Emblems.EmblemForeground.LayerUrls.get -> System.Collections.Generic.IReadOnlyList<System.Uri!>!
GuildWars2.Guilds.Emblems.EmblemForeground.LayerUrls.init -> void
GuildWars2.Guilds.Emblems.GuildEmblem
GuildWars2.Guilds.Emblems.GuildEmblem.<Clone>$() -> GuildWars2.Guilds.Emblems.GuildEmblem!
GuildWars2.Guilds.Emblems.GuildEmblem.Background.get -> GuildWars2.Guilds.Emblems.GuildEmblemBackground!
GuildWars2.Guilds.Emblems.GuildEmblem.Background.init -> void
GuildWars2.Guilds.Emblems.GuildEmblem.Equals(GuildWars2.Guilds.Emblems.GuildEmblem? other) -> bool
GuildWars2.Guilds.Emblems.GuildEmblem.Flags.get -> GuildWars2.Guilds.Emblems.GuildEmblemFlags!
GuildWars2.Guilds.Emblems.GuildEmblem.Flags.init -> void
GuildWars2.Guilds.Emblems.GuildEmblem.Foreground.get -> GuildWars2.Guilds.Emblems.GuildEmblemForeground!
GuildWars2.Guilds.Emblems.GuildEmblem.Foreground.init -> void
GuildWars2.Guilds.Emblems.GuildEmblem.GuildEmblem() -> void
GuildWars2.Guilds.Emblems.GuildEmblemBackground
GuildWars2.Guilds.Emblems.GuildEmblemBackground.<Clone>$() -> GuildWars2.Guilds.Emblems.GuildEmblemBackground!
GuildWars2.Guilds.Emblems.GuildEmblemBackground.ColorIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Guilds.Emblems.GuildEmblemBackground.ColorIds.init -> void
GuildWars2.Guilds.Emblems.GuildEmblemBackground.Equals(GuildWars2.Guilds.Emblems.GuildEmblemBackground? other) -> bool
GuildWars2.Guilds.Emblems.GuildEmblemBackground.GuildEmblemBackground() -> void
GuildWars2.Guilds.Emblems.GuildEmblemBackground.Id.get -> int
GuildWars2.Guilds.Emblems.GuildEmblemBackground.Id.init -> void
GuildWars2.Guilds.Emblems.GuildEmblemFlags
GuildWars2.Guilds.Emblems.GuildEmblemFlags.Equals(GuildWars2.Guilds.Emblems.GuildEmblemFlags? other) -> bool
GuildWars2.Guilds.Emblems.GuildEmblemFlags.FlipBackgroundHorizontal.get -> bool
GuildWars2.Guilds.Emblems.GuildEmblemFlags.FlipBackgroundHorizontal.init -> void
GuildWars2.Guilds.Emblems.GuildEmblemFlags.FlipBackgroundVertical.get -> bool
GuildWars2.Guilds.Emblems.GuildEmblemFlags.FlipBackgroundVertical.init -> void
GuildWars2.Guilds.Emblems.GuildEmblemFlags.GuildEmblemFlags() -> void
GuildWars2.Guilds.Emblems.GuildEmblemForeground
GuildWars2.Guilds.Emblems.GuildEmblemForeground.<Clone>$() -> GuildWars2.Guilds.Emblems.GuildEmblemForeground!
GuildWars2.Guilds.Emblems.GuildEmblemForeground.ColorIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Guilds.Emblems.GuildEmblemForeground.ColorIds.init -> void
GuildWars2.Guilds.Emblems.GuildEmblemForeground.Equals(GuildWars2.Guilds.Emblems.GuildEmblemForeground? other) -> bool
GuildWars2.Guilds.Emblems.GuildEmblemForeground.GuildEmblemForeground() -> void
GuildWars2.Guilds.Emblems.GuildEmblemForeground.Id.get -> int
GuildWars2.Guilds.Emblems.GuildEmblemForeground.Id.init -> void
GuildWars2.Guilds.Guild
GuildWars2.Guilds.Guild.<Clone>$() -> GuildWars2.Guilds.Guild!
GuildWars2.Guilds.Guild.Aetherium.get -> int?
GuildWars2.Guilds.Guild.Aetherium.init -> void
GuildWars2.Guilds.Guild.Emblem.get -> GuildWars2.Guilds.Emblems.GuildEmblem!
GuildWars2.Guilds.Guild.Emblem.init -> void
GuildWars2.Guilds.Guild.Equals(GuildWars2.Guilds.Guild? other) -> bool
GuildWars2.Guilds.Guild.Favor.get -> int?
GuildWars2.Guilds.Guild.Favor.init -> void
GuildWars2.Guilds.Guild.Guild() -> void
GuildWars2.Guilds.Guild.Id.get -> string!
GuildWars2.Guilds.Guild.Id.init -> void
GuildWars2.Guilds.Guild.Influence.get -> int?
GuildWars2.Guilds.Guild.Influence.init -> void
GuildWars2.Guilds.Guild.Level.get -> int?
GuildWars2.Guilds.Guild.Level.init -> void
GuildWars2.Guilds.Guild.MemberCapacity.get -> int?
GuildWars2.Guilds.Guild.MemberCapacity.init -> void
GuildWars2.Guilds.Guild.MemberCount.get -> int?
GuildWars2.Guilds.Guild.MemberCount.init -> void
GuildWars2.Guilds.Guild.MessageOfTheDay.get -> string?
GuildWars2.Guilds.Guild.MessageOfTheDay.init -> void
GuildWars2.Guilds.Guild.Name.get -> string!
GuildWars2.Guilds.Guild.Name.init -> void
GuildWars2.Guilds.Guild.Resonance.get -> int?
GuildWars2.Guilds.Guild.Resonance.init -> void
GuildWars2.Guilds.Guild.Tag.get -> string!
GuildWars2.Guilds.Guild.Tag.init -> void
GuildWars2.Guilds.GuildsClient
GuildWars2.Guilds.GuildsClient.GetCompletedGuildUpgrades(string! guildId, string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemBackgroundById(int backgroundEmblemId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Guilds.Emblems.EmblemBackground! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemBackgrounds(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Emblems.EmblemBackground!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemBackgroundsByIds(System.Collections.Generic.IEnumerable<int>! backgroundEmblemIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Emblems.EmblemBackground!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemBackgroundsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Emblems.EmblemBackground!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemBackgroundsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemForegroundById(int emblemForegroundId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Guilds.Emblems.EmblemForeground! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemForegrounds(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Emblems.EmblemForeground!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemForegroundsByIds(System.Collections.Generic.IEnumerable<int>! emblemForegroundIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Emblems.EmblemForeground!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemForegroundsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Emblems.EmblemForeground!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetEmblemForegroundsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildBank(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Bank.GuildBankTab!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildById(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Guilds.Guild! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildLog(string! guildId, int? sinceLogId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Logs.GuildLogEntry!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildLog(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Logs.GuildLogEntry!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildMembers(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Members.GuildMember!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildPermissionById(string! guildPermissionId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Guilds.Permissions.GuildPermissionSummary! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildPermissions(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Permissions.GuildPermissionSummary!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildPermissionsByIds(System.Collections.Generic.IEnumerable<string!>! guildPermissionIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Permissions.GuildPermissionSummary!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildPermissionsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Permissions.GuildPermissionSummary!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildPermissionsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildRanks(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Ranks.GuildRank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildsByName(string! name, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildStorage(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Storage.GuildStorageSlot!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildTeams(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Teams.GuildTeam!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildTreasury(string! guildId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.List<GuildWars2.Guilds.Treasury.GuildTreasurySlot!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildUpgradeById(int guildUpgradeId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Guilds.Upgrades.GuildUpgrade! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildUpgrades(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Upgrades.GuildUpgrade!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildUpgradesByIds(System.Collections.Generic.IEnumerable<int>! guildUpgradeIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Upgrades.GuildUpgrade!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildUpgradesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Guilds.Upgrades.GuildUpgrade!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GetGuildUpgradesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Guilds.GuildsClient.GuildsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Guilds.Logs.GuildBankActivity
GuildWars2.Guilds.Logs.GuildBankActivity.Coins.get -> GuildWars2.Coin
GuildWars2.Guilds.Logs.GuildBankActivity.Coins.init -> void
GuildWars2.Guilds.Logs.GuildBankActivity.Count.get -> int
GuildWars2.Guilds.Logs.GuildBankActivity.Count.init -> void
GuildWars2.Guilds.Logs.GuildBankActivity.Equals(GuildWars2.Guilds.Logs.GuildBankActivity? other) -> bool
GuildWars2.Guilds.Logs.GuildBankActivity.GuildBankActivity() -> void
GuildWars2.Guilds.Logs.GuildBankActivity.ItemId.get -> int
GuildWars2.Guilds.Logs.GuildBankActivity.ItemId.init -> void
GuildWars2.Guilds.Logs.GuildBankActivity.Operation.get -> GuildWars2.Extensible<GuildWars2.Guilds.Logs.GuildBankOperationKind>
GuildWars2.Guilds.Logs.GuildBankActivity.Operation.init -> void
GuildWars2.Guilds.Logs.GuildBankActivity.User.get -> string!
GuildWars2.Guilds.Logs.GuildBankActivity.User.init -> void
GuildWars2.Guilds.Logs.GuildBankOperationKind
GuildWars2.Guilds.Logs.GuildBankOperationKind.Deposit = 1 -> GuildWars2.Guilds.Logs.GuildBankOperationKind
GuildWars2.Guilds.Logs.GuildBankOperationKind.Move = 3 -> GuildWars2.Guilds.Logs.GuildBankOperationKind
GuildWars2.Guilds.Logs.GuildBankOperationKind.Withdraw = 2 -> GuildWars2.Guilds.Logs.GuildBankOperationKind
GuildWars2.Guilds.Logs.GuildLogEntry
GuildWars2.Guilds.Logs.GuildLogEntry.GuildLogEntry() -> void
GuildWars2.Guilds.Logs.GuildLogEntry.GuildLogEntry(GuildWars2.Guilds.Logs.GuildLogEntry! original) -> void
GuildWars2.Guilds.Logs.GuildLogEntry.Id.get -> int
GuildWars2.Guilds.Logs.GuildLogEntry.Id.init -> void
GuildWars2.Guilds.Logs.GuildLogEntry.Time.get -> System.DateTimeOffset
GuildWars2.Guilds.Logs.GuildLogEntry.Time.init -> void
GuildWars2.Guilds.Logs.GuildMission
GuildWars2.Guilds.Logs.GuildMission.Equals(GuildWars2.Guilds.Logs.GuildMission? other) -> bool
GuildWars2.Guilds.Logs.GuildMission.GuildMission() -> void
GuildWars2.Guilds.Logs.GuildMission.Influence.get -> int
GuildWars2.Guilds.Logs.GuildMission.Influence.init -> void
GuildWars2.Guilds.Logs.GuildMission.State.get -> GuildWars2.Extensible<GuildWars2.Guilds.Logs.GuildMissionState>
GuildWars2.Guilds.Logs.GuildMission.State.init -> void
GuildWars2.Guilds.Logs.GuildMission.User.get -> string!
GuildWars2.Guilds.Logs.GuildMission.User.init -> void
GuildWars2.Guilds.Logs.GuildMissionState
GuildWars2.Guilds.Logs.GuildMissionState.Fail = 3 -> GuildWars2.Guilds.Logs.GuildMissionState
GuildWars2.Guilds.Logs.GuildMissionState.Start = 1 -> GuildWars2.Guilds.Logs.GuildMissionState
GuildWars2.Guilds.Logs.GuildMissionState.Success = 2 -> GuildWars2.Guilds.Logs.GuildMissionState
GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.GuildUpgradeAction.Cancelled = 2 -> GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.GuildUpgradeAction.Completed = 3 -> GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.GuildUpgradeAction.Queued = 1 -> GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.GuildUpgradeAction.SpedUp = 4 -> GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.GuildUpgradeActivity
GuildWars2.Guilds.Logs.GuildUpgradeActivity.Action.get -> GuildWars2.Extensible<GuildWars2.Guilds.Logs.GuildUpgradeAction>
GuildWars2.Guilds.Logs.GuildUpgradeActivity.Action.init -> void
GuildWars2.Guilds.Logs.GuildUpgradeActivity.Count.get -> int?
GuildWars2.Guilds.Logs.GuildUpgradeActivity.Count.init -> void
GuildWars2.Guilds.Logs.GuildUpgradeActivity.Equals(GuildWars2.Guilds.Logs.GuildUpgradeActivity? other) -> bool
GuildWars2.Guilds.Logs.GuildUpgradeActivity.GuildUpgradeActivity() -> void
GuildWars2.Guilds.Logs.GuildUpgradeActivity.ItemId.get -> int?
GuildWars2.Guilds.Logs.GuildUpgradeActivity.ItemId.init -> void
GuildWars2.Guilds.Logs.GuildUpgradeActivity.RecipeId.get -> int?
GuildWars2.Guilds.Logs.GuildUpgradeActivity.RecipeId.init -> void
GuildWars2.Guilds.Logs.GuildUpgradeActivity.UpgradeId.get -> int
GuildWars2.Guilds.Logs.GuildUpgradeActivity.UpgradeId.init -> void
GuildWars2.Guilds.Logs.GuildUpgradeActivity.User.get -> string!
GuildWars2.Guilds.Logs.GuildUpgradeActivity.User.init -> void
GuildWars2.Guilds.Logs.InfluenceActivity
GuildWars2.Guilds.Logs.InfluenceActivity.Activity.get -> GuildWars2.Extensible<GuildWars2.Guilds.Logs.InfluenceActivityKind>
GuildWars2.Guilds.Logs.InfluenceActivity.Activity.init -> void
GuildWars2.Guilds.Logs.InfluenceActivity.Equals(GuildWars2.Guilds.Logs.InfluenceActivity? other) -> bool
GuildWars2.Guilds.Logs.InfluenceActivity.InfluenceActivity() -> void
GuildWars2.Guilds.Logs.InfluenceActivity.Participants.get -> System.Collections.Generic.IReadOnlyCollection<string!>!
GuildWars2.Guilds.Logs.InfluenceActivity.Participants.init -> void
GuildWars2.Guilds.Logs.InfluenceActivity.TotalParticipants.get -> int
GuildWars2.Guilds.Logs.InfluenceActivity.TotalParticipants.init -> void
GuildWars2.Guilds.Logs.InfluenceActivityKind
GuildWars2.Guilds.Logs.InfluenceActivityKind.DailyLogin = 2 -> GuildWars2.Guilds.Logs.InfluenceActivityKind
GuildWars2.Guilds.Logs.InfluenceActivityKind.Gifted = 1 -> GuildWars2.Guilds.Logs.InfluenceActivityKind
GuildWars2.Guilds.Logs.InviteDeclined
GuildWars2.Guilds.Logs.InviteDeclined.DeclinedBy.get -> string!
GuildWars2.Guilds.Logs.InviteDeclined.DeclinedBy.init -> void
GuildWars2.Guilds.Logs.InviteDeclined.Equals(GuildWars2.Guilds.Logs.InviteDeclined? other) -> bool
GuildWars2.Guilds.Logs.InviteDeclined.InviteDeclined() -> void
GuildWars2.Guilds.Logs.InviteDeclined.User.get -> string!
GuildWars2.Guilds.Logs.InviteDeclined.User.init -> void
GuildWars2.Guilds.Logs.MemberInvited
GuildWars2.Guilds.Logs.MemberInvited.Equals(GuildWars2.Guilds.Logs.MemberInvited? other) -> bool
GuildWars2.Guilds.Logs.MemberInvited.InvitedBy.get -> string!
GuildWars2.Guilds.Logs.MemberInvited.InvitedBy.init -> void
GuildWars2.Guilds.Logs.MemberInvited.MemberInvited() -> void
GuildWars2.Guilds.Logs.MemberInvited.User.get -> string!
GuildWars2.Guilds.Logs.MemberInvited.User.init -> void
GuildWars2.Guilds.Logs.MemberJoined
GuildWars2.Guilds.Logs.MemberJoined.Equals(GuildWars2.Guilds.Logs.MemberJoined? other) -> bool
GuildWars2.Guilds.Logs.MemberJoined.MemberJoined() -> void
GuildWars2.Guilds.Logs.MemberJoined.User.get -> string!
GuildWars2.Guilds.Logs.MemberJoined.User.init -> void
GuildWars2.Guilds.Logs.MemberKicked
GuildWars2.Guilds.Logs.MemberKicked.Equals(GuildWars2.Guilds.Logs.MemberKicked? other) -> bool
GuildWars2.Guilds.Logs.MemberKicked.KickedBy.get -> string!
GuildWars2.Guilds.Logs.MemberKicked.KickedBy.init -> void
GuildWars2.Guilds.Logs.MemberKicked.MemberKicked() -> void
GuildWars2.Guilds.Logs.MemberKicked.User.get -> string!
GuildWars2.Guilds.Logs.MemberKicked.User.init -> void
GuildWars2.Guilds.Logs.NewMessageOfTheDay
GuildWars2.Guilds.Logs.NewMessageOfTheDay.Equals(GuildWars2.Guilds.Logs.NewMessageOfTheDay? other) -> bool
GuildWars2.Guilds.Logs.NewMessageOfTheDay.MessageOfTheDay.get -> string!
GuildWars2.Guilds.Logs.NewMessageOfTheDay.MessageOfTheDay.init -> void
GuildWars2.Guilds.Logs.NewMessageOfTheDay.NewMessageOfTheDay() -> void
GuildWars2.Guilds.Logs.NewMessageOfTheDay.User.get -> string!
GuildWars2.Guilds.Logs.NewMessageOfTheDay.User.init -> void
GuildWars2.Guilds.Logs.RankChange
GuildWars2.Guilds.Logs.RankChange.ChangedBy.get -> string!
GuildWars2.Guilds.Logs.RankChange.ChangedBy.init -> void
GuildWars2.Guilds.Logs.RankChange.Equals(GuildWars2.Guilds.Logs.RankChange? other) -> bool
GuildWars2.Guilds.Logs.RankChange.NewRank.get -> string!
GuildWars2.Guilds.Logs.RankChange.NewRank.init -> void
GuildWars2.Guilds.Logs.RankChange.OldRank.get -> string!
GuildWars2.Guilds.Logs.RankChange.OldRank.init -> void
GuildWars2.Guilds.Logs.RankChange.RankChange() -> void
GuildWars2.Guilds.Logs.RankChange.User.get -> string!
GuildWars2.Guilds.Logs.RankChange.User.init -> void
GuildWars2.Guilds.Logs.TreasuryDeposit
GuildWars2.Guilds.Logs.TreasuryDeposit.Count.get -> int
GuildWars2.Guilds.Logs.TreasuryDeposit.Count.init -> void
GuildWars2.Guilds.Logs.TreasuryDeposit.Equals(GuildWars2.Guilds.Logs.TreasuryDeposit? other) -> bool
GuildWars2.Guilds.Logs.TreasuryDeposit.ItemId.get -> int
GuildWars2.Guilds.Logs.TreasuryDeposit.ItemId.init -> void
GuildWars2.Guilds.Logs.TreasuryDeposit.TreasuryDeposit() -> void
GuildWars2.Guilds.Logs.TreasuryDeposit.User.get -> string!
GuildWars2.Guilds.Logs.TreasuryDeposit.User.init -> void
GuildWars2.Guilds.Members.GuildMember
GuildWars2.Guilds.Members.GuildMember.<Clone>$() -> GuildWars2.Guilds.Members.GuildMember!
GuildWars2.Guilds.Members.GuildMember.Equals(GuildWars2.Guilds.Members.GuildMember? other) -> bool
GuildWars2.Guilds.Members.GuildMember.GuildMember() -> void
GuildWars2.Guilds.Members.GuildMember.Joined.get -> System.DateTimeOffset?
GuildWars2.Guilds.Members.GuildMember.Joined.init -> void
GuildWars2.Guilds.Members.GuildMember.Name.get -> string!
GuildWars2.Guilds.Members.GuildMember.Name.init -> void
GuildWars2.Guilds.Members.GuildMember.Rank.get -> string!
GuildWars2.Guilds.Members.GuildMember.Rank.init -> void
GuildWars2.Guilds.Members.GuildMember.WvwMember.get -> bool
GuildWars2.Guilds.Members.GuildMember.WvwMember.init -> void
GuildWars2.Guilds.Permissions.GuildPermissionSummary
GuildWars2.Guilds.Permissions.GuildPermissionSummary.<Clone>$() -> GuildWars2.Guilds.Permissions.GuildPermissionSummary!
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Description.get -> string!
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Description.init -> void
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Equals(GuildWars2.Guilds.Permissions.GuildPermissionSummary? other) -> bool
GuildWars2.Guilds.Permissions.GuildPermissionSummary.GuildPermissionSummary() -> void
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Id.get -> string!
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Id.init -> void
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Name.get -> string!
GuildWars2.Guilds.Permissions.GuildPermissionSummary.Name.init -> void
GuildWars2.Guilds.Ranks.GuildRank
GuildWars2.Guilds.Ranks.GuildRank.<Clone>$() -> GuildWars2.Guilds.Ranks.GuildRank!
GuildWars2.Guilds.Ranks.GuildRank.Equals(GuildWars2.Guilds.Ranks.GuildRank? other) -> bool
GuildWars2.Guilds.Ranks.GuildRank.GuildRank() -> void
GuildWars2.Guilds.Ranks.GuildRank.IconHref.get -> string!
GuildWars2.Guilds.Ranks.GuildRank.IconHref.init -> void
GuildWars2.Guilds.Ranks.GuildRank.IconUrl.get -> System.Uri!
GuildWars2.Guilds.Ranks.GuildRank.IconUrl.init -> void
GuildWars2.Guilds.Ranks.GuildRank.Id.get -> string!
GuildWars2.Guilds.Ranks.GuildRank.Id.init -> void
GuildWars2.Guilds.Ranks.GuildRank.Order.get -> int
GuildWars2.Guilds.Ranks.GuildRank.Order.init -> void
GuildWars2.Guilds.Ranks.GuildRank.Permissions.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Guilds.Ranks.GuildRank.Permissions.init -> void
GuildWars2.Guilds.Storage.GuildStorageSlot
GuildWars2.Guilds.Storage.GuildStorageSlot.<Clone>$() -> GuildWars2.Guilds.Storage.GuildStorageSlot!
GuildWars2.Guilds.Storage.GuildStorageSlot.Count.get -> int
GuildWars2.Guilds.Storage.GuildStorageSlot.Count.init -> void
GuildWars2.Guilds.Storage.GuildStorageSlot.Equals(GuildWars2.Guilds.Storage.GuildStorageSlot? other) -> bool
GuildWars2.Guilds.Storage.GuildStorageSlot.GuildStorageSlot() -> void
GuildWars2.Guilds.Storage.GuildStorageSlot.ItemId.get -> int
GuildWars2.Guilds.Storage.GuildStorageSlot.ItemId.init -> void
GuildWars2.Guilds.Teams.Game
GuildWars2.Guilds.Teams.Game.<Clone>$() -> GuildWars2.Guilds.Teams.Game!
GuildWars2.Guilds.Teams.Game.Ended.get -> System.DateTimeOffset
GuildWars2.Guilds.Teams.Game.Ended.init -> void
GuildWars2.Guilds.Teams.Game.Equals(GuildWars2.Guilds.Teams.Game? other) -> bool
GuildWars2.Guilds.Teams.Game.Game() -> void
GuildWars2.Guilds.Teams.Game.Id.get -> string!
GuildWars2.Guilds.Teams.Game.Id.init -> void
GuildWars2.Guilds.Teams.Game.MapId.get -> int
GuildWars2.Guilds.Teams.Game.MapId.init -> void
GuildWars2.Guilds.Teams.Game.RatingChange.get -> int
GuildWars2.Guilds.Teams.Game.RatingChange.init -> void
GuildWars2.Guilds.Teams.Game.RatingType.get -> GuildWars2.Extensible<GuildWars2.Pvp.Games.PvpRatingType>
GuildWars2.Guilds.Teams.Game.RatingType.init -> void
GuildWars2.Guilds.Teams.Game.Result.get -> GuildWars2.Extensible<GuildWars2.Pvp.Games.PvpResult>
GuildWars2.Guilds.Teams.Game.Result.init -> void
GuildWars2.Guilds.Teams.Game.Score.get -> GuildWars2.Guilds.Teams.Score!
GuildWars2.Guilds.Teams.Game.Score.init -> void
GuildWars2.Guilds.Teams.Game.SeasonId.get -> string?
GuildWars2.Guilds.Teams.Game.SeasonId.init -> void
GuildWars2.Guilds.Teams.Game.Started.get -> System.DateTimeOffset
GuildWars2.Guilds.Teams.Game.Started.init -> void
GuildWars2.Guilds.Teams.Game.Team.get -> GuildWars2.Extensible<GuildWars2.Pvp.Games.PvpTeamColor>
GuildWars2.Guilds.Teams.Game.Team.init -> void
GuildWars2.Guilds.Teams.GuildTeam
GuildWars2.Guilds.Teams.GuildTeam.<Clone>$() -> GuildWars2.Guilds.Teams.GuildTeam!
GuildWars2.Guilds.Teams.GuildTeam.Aggregate.get -> GuildWars2.Guilds.Teams.Results!
GuildWars2.Guilds.Teams.GuildTeam.Aggregate.init -> void
GuildWars2.Guilds.Teams.GuildTeam.Equals(GuildWars2.Guilds.Teams.GuildTeam? other) -> bool
GuildWars2.Guilds.Teams.GuildTeam.Games.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Guilds.Teams.Game!>!
GuildWars2.Guilds.Teams.GuildTeam.Games.init -> void
GuildWars2.Guilds.Teams.GuildTeam.GuildTeam() -> void
GuildWars2.Guilds.Teams.GuildTeam.Id.get -> int
GuildWars2.Guilds.Teams.GuildTeam.Id.init -> void
GuildWars2.Guilds.Teams.GuildTeam.Ladders.get -> GuildWars2.Guilds.Teams.Ladders!
GuildWars2.Guilds.Teams.GuildTeam.Ladders.init -> void
GuildWars2.Guilds.Teams.GuildTeam.Members.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Guilds.Teams.GuildTeamMember!>!
GuildWars2.Guilds.Teams.GuildTeam.Members.init -> void
GuildWars2.Guilds.Teams.GuildTeam.Name.get -> string!
GuildWars2.Guilds.Teams.GuildTeam.Name.init -> void
GuildWars2.Guilds.Teams.GuildTeam.Seasons.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Guilds.Teams.Season!>!
GuildWars2.Guilds.Teams.GuildTeam.Seasons.init -> void
GuildWars2.Guilds.Teams.GuildTeam.State.get -> GuildWars2.Extensible<GuildWars2.Guilds.Teams.GuildTeamState>
GuildWars2.Guilds.Teams.GuildTeam.State.init -> void
GuildWars2.Guilds.Teams.GuildTeamMember
GuildWars2.Guilds.Teams.GuildTeamMember.<Clone>$() -> GuildWars2.Guilds.Teams.GuildTeamMember!
GuildWars2.Guilds.Teams.GuildTeamMember.Equals(GuildWars2.Guilds.Teams.GuildTeamMember? other) -> bool
GuildWars2.Guilds.Teams.GuildTeamMember.GuildTeamMember() -> void
GuildWars2.Guilds.Teams.GuildTeamMember.Name.get -> string!
GuildWars2.Guilds.Teams.GuildTeamMember.Name.init -> void
GuildWars2.Guilds.Teams.GuildTeamMember.Role.get -> GuildWars2.Extensible<GuildWars2.Guilds.Teams.GuildTeamRole>
GuildWars2.Guilds.Teams.GuildTeamMember.Role.init -> void
GuildWars2.Guilds.Teams.GuildTeamRole
GuildWars2.Guilds.Teams.GuildTeamRole.Captain = 1 -> GuildWars2.Guilds.Teams.GuildTeamRole
GuildWars2.Guilds.Teams.GuildTeamRole.Member = 2 -> GuildWars2.Guilds.Teams.GuildTeamRole
GuildWars2.Guilds.Teams.GuildTeamState
GuildWars2.Guilds.Teams.GuildTeamState.Active = 1 -> GuildWars2.Guilds.Teams.GuildTeamState
GuildWars2.Guilds.Teams.Ladders
GuildWars2.Guilds.Teams.Ladders.<Clone>$() -> GuildWars2.Guilds.Teams.Ladders!
GuildWars2.Guilds.Teams.Ladders.Equals(GuildWars2.Guilds.Teams.Ladders? other) -> bool
GuildWars2.Guilds.Teams.Ladders.Ladders() -> void
GuildWars2.Guilds.Teams.Ladders.None.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.None.init -> void
GuildWars2.Guilds.Teams.Ladders.Ranked.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.Ranked.init -> void
GuildWars2.Guilds.Teams.Ladders.Ranked2v2.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.Ranked2v2.init -> void
GuildWars2.Guilds.Teams.Ladders.Ranked3v3.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.Ranked3v3.init -> void
GuildWars2.Guilds.Teams.Ladders.SoloArenaRated.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.SoloArenaRated.init -> void
GuildWars2.Guilds.Teams.Ladders.TeamArenaRated.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.TeamArenaRated.init -> void
GuildWars2.Guilds.Teams.Ladders.Unranked.get -> GuildWars2.Guilds.Teams.Results?
GuildWars2.Guilds.Teams.Ladders.Unranked.init -> void
GuildWars2.Guilds.Teams.Results
GuildWars2.Guilds.Teams.Results.<Clone>$() -> GuildWars2.Guilds.Teams.Results!
GuildWars2.Guilds.Teams.Results.Byes.get -> int
GuildWars2.Guilds.Teams.Results.Byes.init -> void
GuildWars2.Guilds.Teams.Results.Desertions.get -> int
GuildWars2.Guilds.Teams.Results.Desertions.init -> void
GuildWars2.Guilds.Teams.Results.Equals(GuildWars2.Guilds.Teams.Results? other) -> bool
GuildWars2.Guilds.Teams.Results.Forfeits.get -> int
GuildWars2.Guilds.Teams.Results.Forfeits.init -> void
GuildWars2.Guilds.Teams.Results.Losses.get -> int
GuildWars2.Guilds.Teams.Results.Losses.init -> void
GuildWars2.Guilds.Teams.Results.Results() -> void
GuildWars2.Guilds.Teams.Results.Wins.get -> int
GuildWars2.Guilds.Teams.Results.Wins.init -> void
GuildWars2.Guilds.Teams.Score
GuildWars2.Guilds.Teams.Score.<Clone>$() -> GuildWars2.Guilds.Teams.Score!
GuildWars2.Guilds.Teams.Score.Blue.get -> int
GuildWars2.Guilds.Teams.Score.Blue.init -> void
GuildWars2.Guilds.Teams.Score.Equals(GuildWars2.Guilds.Teams.Score? other) -> bool
GuildWars2.Guilds.Teams.Score.Red.get -> int
GuildWars2.Guilds.Teams.Score.Red.init -> void
GuildWars2.Guilds.Teams.Score.Score() -> void
GuildWars2.Guilds.Teams.Season
GuildWars2.Guilds.Teams.Season.<Clone>$() -> GuildWars2.Guilds.Teams.Season!
GuildWars2.Guilds.Teams.Season.Equals(GuildWars2.Guilds.Teams.Season? other) -> bool
GuildWars2.Guilds.Teams.Season.Id.get -> string!
GuildWars2.Guilds.Teams.Season.Id.init -> void
GuildWars2.Guilds.Teams.Season.Losses.get -> int
GuildWars2.Guilds.Teams.Season.Losses.init -> void
GuildWars2.Guilds.Teams.Season.Rating.get -> int
GuildWars2.Guilds.Teams.Season.Rating.init -> void
GuildWars2.Guilds.Teams.Season.Season() -> void
GuildWars2.Guilds.Teams.Season.Wins.get -> int
GuildWars2.Guilds.Teams.Season.Wins.init -> void
GuildWars2.Guilds.Treasury.CountNeededForUpgrade
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.<Clone>$() -> GuildWars2.Guilds.Treasury.CountNeededForUpgrade!
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.Count.get -> int
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.Count.init -> void
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.CountNeededForUpgrade() -> void
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.Equals(GuildWars2.Guilds.Treasury.CountNeededForUpgrade? other) -> bool
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.UpgradeId.get -> int
GuildWars2.Guilds.Treasury.CountNeededForUpgrade.UpgradeId.init -> void
GuildWars2.Guilds.Treasury.GuildTreasurySlot
GuildWars2.Guilds.Treasury.GuildTreasurySlot.<Clone>$() -> GuildWars2.Guilds.Treasury.GuildTreasurySlot!
GuildWars2.Guilds.Treasury.GuildTreasurySlot.Count.get -> int
GuildWars2.Guilds.Treasury.GuildTreasurySlot.Count.init -> void
GuildWars2.Guilds.Treasury.GuildTreasurySlot.CountNeededForUpgrades.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Guilds.Treasury.CountNeededForUpgrade!>!
GuildWars2.Guilds.Treasury.GuildTreasurySlot.CountNeededForUpgrades.init -> void
GuildWars2.Guilds.Treasury.GuildTreasurySlot.Equals(GuildWars2.Guilds.Treasury.GuildTreasurySlot? other) -> bool
GuildWars2.Guilds.Treasury.GuildTreasurySlot.GuildTreasurySlot() -> void
GuildWars2.Guilds.Treasury.GuildTreasurySlot.ItemId.get -> int
GuildWars2.Guilds.Treasury.GuildTreasurySlot.ItemId.init -> void
GuildWars2.Guilds.Upgrades.AccumulatingCurrency
GuildWars2.Guilds.Upgrades.AccumulatingCurrency.AccumulatingCurrency() -> void
GuildWars2.Guilds.Upgrades.AccumulatingCurrency.Equals(GuildWars2.Guilds.Upgrades.AccumulatingCurrency? other) -> bool
GuildWars2.Guilds.Upgrades.BankBag
GuildWars2.Guilds.Upgrades.BankBag.BankBag() -> void
GuildWars2.Guilds.Upgrades.BankBag.Equals(GuildWars2.Guilds.Upgrades.BankBag? other) -> bool
GuildWars2.Guilds.Upgrades.BankBag.MaxCoins.get -> GuildWars2.Coin
GuildWars2.Guilds.Upgrades.BankBag.MaxCoins.init -> void
GuildWars2.Guilds.Upgrades.BankBag.MaxItems.get -> int
GuildWars2.Guilds.Upgrades.BankBag.MaxItems.init -> void
GuildWars2.Guilds.Upgrades.Boost
GuildWars2.Guilds.Upgrades.Boost.Boost() -> void
GuildWars2.Guilds.Upgrades.Boost.Equals(GuildWars2.Guilds.Upgrades.Boost? other) -> bool
GuildWars2.Guilds.Upgrades.Claimable
GuildWars2.Guilds.Upgrades.Claimable.Claimable() -> void
GuildWars2.Guilds.Upgrades.Claimable.Equals(GuildWars2.Guilds.Upgrades.Claimable? other) -> bool
GuildWars2.Guilds.Upgrades.Consumable
GuildWars2.Guilds.Upgrades.Consumable.Consumable() -> void
GuildWars2.Guilds.Upgrades.Consumable.Equals(GuildWars2.Guilds.Upgrades.Consumable? other) -> bool
GuildWars2.Guilds.Upgrades.Decoration
GuildWars2.Guilds.Upgrades.Decoration.Decoration() -> void
GuildWars2.Guilds.Upgrades.Decoration.Equals(GuildWars2.Guilds.Upgrades.Decoration? other) -> bool
GuildWars2.Guilds.Upgrades.GuildHall
GuildWars2.Guilds.Upgrades.GuildHall.Equals(GuildWars2.Guilds.Upgrades.GuildHall? other) -> bool
GuildWars2.Guilds.Upgrades.GuildHall.GuildHall() -> void
GuildWars2.Guilds.Upgrades.GuildHallExpedition
GuildWars2.Guilds.Upgrades.GuildHallExpedition.Equals(GuildWars2.Guilds.Upgrades.GuildHallExpedition? other) -> bool
GuildWars2.Guilds.Upgrades.GuildHallExpedition.GuildHallExpedition() -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade
GuildWars2.Guilds.Upgrades.GuildUpgrade.BuildTime.get -> System.TimeSpan
GuildWars2.Guilds.Upgrades.GuildUpgrade.BuildTime.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.Costs.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Guilds.Upgrades.GuildUpgradeCost!>!
GuildWars2.Guilds.Upgrades.GuildUpgrade.Costs.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.Description.get -> string!
GuildWars2.Guilds.Upgrades.GuildUpgrade.Description.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.Experience.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgrade.Experience.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.GuildUpgrade() -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.GuildUpgrade(GuildWars2.Guilds.Upgrades.GuildUpgrade! original) -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.IconHref.get -> string!
GuildWars2.Guilds.Upgrades.GuildUpgrade.IconHref.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.IconUrl.get -> System.Uri!
GuildWars2.Guilds.Upgrades.GuildUpgrade.IconUrl.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.Id.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgrade.Id.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.Name.get -> string!
GuildWars2.Guilds.Upgrades.GuildUpgrade.Name.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.Prerequisites.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Guilds.Upgrades.GuildUpgrade.Prerequisites.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgrade.RequiredLevel.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgrade.RequiredLevel.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost
GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.Coins.get -> GuildWars2.Coin
GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.Coins.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost? other) -> bool
GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.GuildUpgradeCoinsCost() -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Count.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Count.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost? other) -> bool
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.GuildUpgradeCollectibleCost() -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.ItemId.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.ItemId.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Name.get -> string!
GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Name.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCost
GuildWars2.Guilds.Upgrades.GuildUpgradeCost.GuildUpgradeCost() -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCost.GuildUpgradeCost(GuildWars2.Guilds.Upgrades.GuildUpgradeCost! original) -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Count.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Count.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost? other) -> bool
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.GuildUpgradeCurrencyCost() -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Name.get -> string!
GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Name.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Count.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Count.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost? other) -> bool
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.GuildUpgradeItemCost() -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.ItemId.get -> int
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.ItemId.init -> void
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Name.get -> string!
GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Name.init -> void
GuildWars2.Guilds.Upgrades.Hub
GuildWars2.Guilds.Upgrades.Hub.Equals(GuildWars2.Guilds.Upgrades.Hub? other) -> bool
GuildWars2.Guilds.Upgrades.Hub.Hub() -> void
GuildWars2.Guilds.Upgrades.Queue
GuildWars2.Guilds.Upgrades.Queue.Equals(GuildWars2.Guilds.Upgrades.Queue? other) -> bool
GuildWars2.Guilds.Upgrades.Queue.Queue() -> void
GuildWars2.Guilds.Upgrades.Unlock
GuildWars2.Guilds.Upgrades.Unlock.Equals(GuildWars2.Guilds.Upgrades.Unlock? other) -> bool
GuildWars2.Guilds.Upgrades.Unlock.Unlock() -> void
GuildWars2.Gw2Client
GuildWars2.Gw2Client.Commerce.get -> GuildWars2.Commerce.CommerceClient!
GuildWars2.Gw2Client.Exploration.get -> GuildWars2.Exploration.ExplorationClient!
GuildWars2.Gw2Client.Files.get -> GuildWars2.Files.FilesClient!
GuildWars2.Gw2Client.Guilds.get -> GuildWars2.Guilds.GuildsClient!
GuildWars2.Gw2Client.Gw2Client(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Gw2Client.Hero.get -> GuildWars2.Hero.HeroClient!
GuildWars2.Gw2Client.Items.get -> GuildWars2.Items.ItemsClient!
GuildWars2.Gw2Client.Logos.get -> GuildWars2.Logos.LogosClient!
GuildWars2.Gw2Client.Metadata.get -> GuildWars2.Metadata.MetadataClient!
GuildWars2.Gw2Client.Pve.get -> GuildWars2.Pve.PveClient!
GuildWars2.Gw2Client.Pvp.get -> GuildWars2.Pvp.PvpClient!
GuildWars2.Gw2Client.Quaggans.get -> GuildWars2.Quaggans.QuaggansClient!
GuildWars2.Gw2Client.Tokens.get -> GuildWars2.Authorization.TokenClient!
GuildWars2.Gw2Client.WizardsVault.get -> GuildWars2.WizardsVault.WizardsVaultClient!
GuildWars2.Gw2Client.Worlds.get -> GuildWars2.Worlds.WorldsClient!
GuildWars2.Gw2Client.Wvw.get -> GuildWars2.Wvw.WvwClient!
GuildWars2.Hero.Accounts.AccountClient
GuildWars2.Hero.Accounts.AccountClient.AccountClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Accounts.AccountClient.GetCharacterByName(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Accounts.Character! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetCharacters(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Accounts.Character!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetCharactersByNames(System.Collections.Generic.IEnumerable<string!>! characterNames, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Accounts.Character!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetCharactersIndex(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetCharacterSummary(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Accounts.CharacterSummary! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetLuck(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Accounts.AccountLuck! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetProgression(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Accounts.Progression!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountClient.GetSummary(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Accounts.AccountSummary! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Accounts.AccountLuck
GuildWars2.Hero.Accounts.AccountLuck.<Clone>$() -> GuildWars2.Hero.Accounts.AccountLuck!
GuildWars2.Hero.Accounts.AccountLuck.AccountLuck() -> void
GuildWars2.Hero.Accounts.AccountLuck.Equals(GuildWars2.Hero.Accounts.AccountLuck? other) -> bool
GuildWars2.Hero.Accounts.AccountLuck.Luck.get -> int
GuildWars2.Hero.Accounts.AccountLuck.Luck.init -> void
GuildWars2.Hero.Accounts.AccountLuck.MagicFind.get -> int
GuildWars2.Hero.Accounts.AccountLuck.MagicFindWithoutLevelCap.get -> int
GuildWars2.Hero.Accounts.AccountSummary
GuildWars2.Hero.Accounts.AccountSummary.<Clone>$() -> GuildWars2.Hero.Accounts.AccountSummary!
GuildWars2.Hero.Accounts.AccountSummary.Access.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.Accounts.ProductName>>!
GuildWars2.Hero.Accounts.AccountSummary.Access.init -> void
GuildWars2.Hero.Accounts.AccountSummary.AccountSummary() -> void
GuildWars2.Hero.Accounts.AccountSummary.Age.get -> System.TimeSpan
GuildWars2.Hero.Accounts.AccountSummary.Age.init -> void
GuildWars2.Hero.Accounts.AccountSummary.BuildStorageSlots.get -> int?
GuildWars2.Hero.Accounts.AccountSummary.BuildStorageSlots.init -> void
GuildWars2.Hero.Accounts.AccountSummary.Commander.get -> bool
GuildWars2.Hero.Accounts.AccountSummary.Commander.init -> void
GuildWars2.Hero.Accounts.AccountSummary.Created.get -> System.DateTimeOffset
GuildWars2.Hero.Accounts.AccountSummary.Created.init -> void
GuildWars2.Hero.Accounts.AccountSummary.DailyAchievementPoints.get -> int?
GuildWars2.Hero.Accounts.AccountSummary.DailyAchievementPoints.init -> void
GuildWars2.Hero.Accounts.AccountSummary.DisplayName.get -> string!
GuildWars2.Hero.Accounts.AccountSummary.DisplayName.init -> void
GuildWars2.Hero.Accounts.AccountSummary.Equals(GuildWars2.Hero.Accounts.AccountSummary? other) -> bool
GuildWars2.Hero.Accounts.AccountSummary.FractalLevel.get -> int?
GuildWars2.Hero.Accounts.AccountSummary.FractalLevel.init -> void
GuildWars2.Hero.Accounts.AccountSummary.GuildIds.get -> System.Collections.Generic.IReadOnlyCollection<string!>!
GuildWars2.Hero.Accounts.AccountSummary.GuildIds.init -> void
GuildWars2.Hero.Accounts.AccountSummary.Id.get -> string!
GuildWars2.Hero.Accounts.AccountSummary.Id.init -> void
GuildWars2.Hero.Accounts.AccountSummary.LastModified.get -> System.DateTimeOffset
GuildWars2.Hero.Accounts.AccountSummary.LastModified.init -> void
GuildWars2.Hero.Accounts.AccountSummary.LeaderOfGuildIds.get -> System.Collections.Generic.IReadOnlyCollection<string!>?
GuildWars2.Hero.Accounts.AccountSummary.LeaderOfGuildIds.init -> void
GuildWars2.Hero.Accounts.AccountSummary.MonthlyAchievementPoints.get -> int?
GuildWars2.Hero.Accounts.AccountSummary.MonthlyAchievementPoints.init -> void
GuildWars2.Hero.Accounts.AccountSummary.WorldId.get -> int
GuildWars2.Hero.Accounts.AccountSummary.WorldId.init -> void
GuildWars2.Hero.Accounts.AccountSummary.Wvw.get -> GuildWars2.Hero.Accounts.AccountWvwSummary!
GuildWars2.Hero.Accounts.AccountSummary.Wvw.init -> void
GuildWars2.Hero.Accounts.AccountSummary.WvwRank.get -> int?
GuildWars2.Hero.Accounts.AccountSummary.WvwRank.init -> void
GuildWars2.Hero.Accounts.AccountWvwSummary
GuildWars2.Hero.Accounts.AccountWvwSummary.<Clone>$() -> GuildWars2.Hero.Accounts.AccountWvwSummary!
GuildWars2.Hero.Accounts.AccountWvwSummary.AccountWvwSummary() -> void
GuildWars2.Hero.Accounts.AccountWvwSummary.Equals(GuildWars2.Hero.Accounts.AccountWvwSummary? other) -> bool
GuildWars2.Hero.Accounts.AccountWvwSummary.Rank.get -> int?
GuildWars2.Hero.Accounts.AccountWvwSummary.Rank.init -> void
GuildWars2.Hero.Accounts.AccountWvwSummary.TeamId.get -> int?
GuildWars2.Hero.Accounts.AccountWvwSummary.TeamId.init -> void
GuildWars2.Hero.Accounts.Character
GuildWars2.Hero.Accounts.Character.<Clone>$() -> GuildWars2.Hero.Accounts.Character!
GuildWars2.Hero.Accounts.Character.ActiveBuildTemplateNumber.get -> int?
GuildWars2.Hero.Accounts.Character.ActiveBuildTemplateNumber.init -> void
GuildWars2.Hero.Accounts.Character.ActiveEquipmentTemplateNumber.get -> int?
GuildWars2.Hero.Accounts.Character.ActiveEquipmentTemplateNumber.init -> void
GuildWars2.Hero.Accounts.Character.Age.get -> System.TimeSpan
GuildWars2.Hero.Accounts.Character.Age.init -> void
GuildWars2.Hero.Accounts.Character.Backstory.get -> System.Collections.Generic.IReadOnlyCollection<string!>!
GuildWars2.Hero.Accounts.Character.Backstory.init -> void
GuildWars2.Hero.Accounts.Character.Bags.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Hero.Inventories.Bag?>?
GuildWars2.Hero.Accounts.Character.Bags.init -> void
GuildWars2.Hero.Accounts.Character.BodyType.get -> GuildWars2.Extensible<GuildWars2.Hero.BodyType>
GuildWars2.Hero.Accounts.Character.BodyType.init -> void
GuildWars2.Hero.Accounts.Character.BuildTemplates.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.BuildTemplate!>?
GuildWars2.Hero.Accounts.Character.BuildTemplates.init -> void
GuildWars2.Hero.Accounts.Character.BuildTemplatesCount.get -> int?
GuildWars2.Hero.Accounts.Character.BuildTemplatesCount.init -> void
GuildWars2.Hero.Accounts.Character.Character() -> void
GuildWars2.Hero.Accounts.Character.CraftingDisciplines.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline!>!
GuildWars2.Hero.Accounts.Character.CraftingDisciplines.init -> void
GuildWars2.Hero.Accounts.Character.Created.get -> System.DateTimeOffset
GuildWars2.Hero.Accounts.Character.Created.init -> void
GuildWars2.Hero.Accounts.Character.Deaths.get -> int
GuildWars2.Hero.Accounts.Character.Deaths.init -> void
GuildWars2.Hero.Accounts.Character.Equals(GuildWars2.Hero.Accounts.Character? other) -> bool
GuildWars2.Hero.Accounts.Character.EquipmentTemplates.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.Templates.EquipmentTemplate!>?
GuildWars2.Hero.Accounts.Character.EquipmentTemplates.init -> void
GuildWars2.Hero.Accounts.Character.EquipmentTemplatesCount.get -> int?
GuildWars2.Hero.Accounts.Character.EquipmentTemplatesCount.init -> void
GuildWars2.Hero.Accounts.Character.EquippedItems.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.Templates.EquipmentItem!>?
GuildWars2.Hero.Accounts.Character.EquippedItems.init -> void
GuildWars2.Hero.Accounts.Character.Flags.get -> GuildWars2.Hero.Accounts.CharacterFlags!
GuildWars2.Hero.Accounts.Character.Flags.init -> void
GuildWars2.Hero.Accounts.Character.GuildId.get -> string!
GuildWars2.Hero.Accounts.Character.GuildId.init -> void
GuildWars2.Hero.Accounts.Character.LastModified.get -> System.DateTimeOffset
GuildWars2.Hero.Accounts.Character.LastModified.init -> void
GuildWars2.Hero.Accounts.Character.Level.get -> int
GuildWars2.Hero.Accounts.Character.Level.init -> void
GuildWars2.Hero.Accounts.Character.Name.get -> string!
GuildWars2.Hero.Accounts.Character.Name.init -> void
GuildWars2.Hero.Accounts.Character.Profession.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>
GuildWars2.Hero.Accounts.Character.Profession.init -> void
GuildWars2.Hero.Accounts.Character.Race.get -> GuildWars2.Extensible<GuildWars2.Hero.RaceName>
GuildWars2.Hero.Accounts.Character.Race.init -> void
GuildWars2.Hero.Accounts.Character.Recipes.get -> System.Collections.Generic.IReadOnlyCollection<int>?
GuildWars2.Hero.Accounts.Character.Recipes.init -> void
GuildWars2.Hero.Accounts.Character.TitleId.get -> int?
GuildWars2.Hero.Accounts.Character.TitleId.init -> void
GuildWars2.Hero.Accounts.Character.Training.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Hero.Training.TrainingProgress!>?
GuildWars2.Hero.Accounts.Character.Training.init -> void
GuildWars2.Hero.Accounts.Character.WvwAbilities.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Hero.Accounts.WvwAbility!>?
GuildWars2.Hero.Accounts.Character.WvwAbilities.init -> void
GuildWars2.Hero.Accounts.CharacterFlags
GuildWars2.Hero.Accounts.CharacterFlags.Beta.get -> bool
GuildWars2.Hero.Accounts.CharacterFlags.Beta.init -> void
GuildWars2.Hero.Accounts.CharacterFlags.CharacterFlags() -> void
GuildWars2.Hero.Accounts.CharacterFlags.Equals(GuildWars2.Hero.Accounts.CharacterFlags? other) -> bool
GuildWars2.Hero.Accounts.CharacterSummary
GuildWars2.Hero.Accounts.CharacterSummary.<Clone>$() -> GuildWars2.Hero.Accounts.CharacterSummary!
GuildWars2.Hero.Accounts.CharacterSummary.Age.get -> System.TimeSpan
GuildWars2.Hero.Accounts.CharacterSummary.Age.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.BodyType.get -> GuildWars2.Extensible<GuildWars2.Hero.BodyType>
GuildWars2.Hero.Accounts.CharacterSummary.BodyType.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.CharacterSummary() -> void
GuildWars2.Hero.Accounts.CharacterSummary.Created.get -> System.DateTimeOffset
GuildWars2.Hero.Accounts.CharacterSummary.Created.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.Deaths.get -> int
GuildWars2.Hero.Accounts.CharacterSummary.Deaths.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.Equals(GuildWars2.Hero.Accounts.CharacterSummary? other) -> bool
GuildWars2.Hero.Accounts.CharacterSummary.GuildId.get -> string!
GuildWars2.Hero.Accounts.CharacterSummary.GuildId.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.LastModified.get -> System.DateTimeOffset
GuildWars2.Hero.Accounts.CharacterSummary.LastModified.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.Level.get -> int
GuildWars2.Hero.Accounts.CharacterSummary.Level.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.Name.get -> string!
GuildWars2.Hero.Accounts.CharacterSummary.Name.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.Profession.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>
GuildWars2.Hero.Accounts.CharacterSummary.Profession.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.Race.get -> GuildWars2.Extensible<GuildWars2.Hero.RaceName>
GuildWars2.Hero.Accounts.CharacterSummary.Race.init -> void
GuildWars2.Hero.Accounts.CharacterSummary.TitleId.get -> int?
GuildWars2.Hero.Accounts.CharacterSummary.TitleId.init -> void
GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.EndOfDragons = 5 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.GuildWars2 = 2 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.HeartOfThorns = 3 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.JanthirWilds = 7 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.None = 0 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.PathOfFire = 4 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.PlayForFree = 1 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.ProductName.SecretsOfTheObscure = 6 -> GuildWars2.Hero.Accounts.ProductName
GuildWars2.Hero.Accounts.Progression
GuildWars2.Hero.Accounts.Progression.<Clone>$() -> GuildWars2.Hero.Accounts.Progression!
GuildWars2.Hero.Accounts.Progression.Equals(GuildWars2.Hero.Accounts.Progression? other) -> bool
GuildWars2.Hero.Accounts.Progression.Id.get -> string!
GuildWars2.Hero.Accounts.Progression.Id.init -> void
GuildWars2.Hero.Accounts.Progression.Progression() -> void
GuildWars2.Hero.Accounts.Progression.Value.get -> int
GuildWars2.Hero.Accounts.Progression.Value.init -> void
GuildWars2.Hero.Accounts.ProgressionKind
GuildWars2.Hero.Accounts.WvwAbility
GuildWars2.Hero.Accounts.WvwAbility.<Clone>$() -> GuildWars2.Hero.Accounts.WvwAbility!
GuildWars2.Hero.Accounts.WvwAbility.Equals(GuildWars2.Hero.Accounts.WvwAbility? other) -> bool
GuildWars2.Hero.Accounts.WvwAbility.Id.get -> int
GuildWars2.Hero.Accounts.WvwAbility.Id.init -> void
GuildWars2.Hero.Accounts.WvwAbility.Rank.get -> int
GuildWars2.Hero.Accounts.WvwAbility.Rank.init -> void
GuildWars2.Hero.Accounts.WvwAbility.WvwAbility() -> void
GuildWars2.Hero.Achievements.AccountAchievement
GuildWars2.Hero.Achievements.AccountAchievement.<Clone>$() -> GuildWars2.Hero.Achievements.AccountAchievement!
GuildWars2.Hero.Achievements.AccountAchievement.AccountAchievement() -> void
GuildWars2.Hero.Achievements.AccountAchievement.Bits.get -> System.Collections.Generic.IReadOnlyList<int>?
GuildWars2.Hero.Achievements.AccountAchievement.Bits.init -> void
GuildWars2.Hero.Achievements.AccountAchievement.Current.get -> int
GuildWars2.Hero.Achievements.AccountAchievement.Current.init -> void
GuildWars2.Hero.Achievements.AccountAchievement.Done.get -> bool
GuildWars2.Hero.Achievements.AccountAchievement.Done.init -> void
GuildWars2.Hero.Achievements.AccountAchievement.Equals(GuildWars2.Hero.Achievements.AccountAchievement? other) -> bool
GuildWars2.Hero.Achievements.AccountAchievement.Id.get -> int
GuildWars2.Hero.Achievements.AccountAchievement.Id.init -> void
GuildWars2.Hero.Achievements.AccountAchievement.Max.get -> int
GuildWars2.Hero.Achievements.AccountAchievement.Max.init -> void
GuildWars2.Hero.Achievements.AccountAchievement.Repeated.get -> int
GuildWars2.Hero.Achievements.AccountAchievement.Repeated.init -> void
GuildWars2.Hero.Achievements.AccountAchievement.Unlocked.get -> bool
GuildWars2.Hero.Achievements.AccountAchievement.Unlocked.init -> void
GuildWars2.Hero.Achievements.Achievement
GuildWars2.Hero.Achievements.Achievement.Achievement() -> void
GuildWars2.Hero.Achievements.Achievement.Achievement(GuildWars2.Hero.Achievements.Achievement! original) -> void
GuildWars2.Hero.Achievements.Achievement.Bits.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Achievements.AchievementBit!>?
GuildWars2.Hero.Achievements.Achievement.Bits.init -> void
GuildWars2.Hero.Achievements.Achievement.Description.get -> string!
GuildWars2.Hero.Achievements.Achievement.Description.init -> void
GuildWars2.Hero.Achievements.Achievement.Flags.get -> GuildWars2.Hero.Achievements.AchievementFlags!
GuildWars2.Hero.Achievements.Achievement.Flags.init -> void
GuildWars2.Hero.Achievements.Achievement.GetChatLink() -> GuildWars2.Chat.AchievementLink!
GuildWars2.Hero.Achievements.Achievement.IconHref.get -> string!
GuildWars2.Hero.Achievements.Achievement.IconHref.init -> void
GuildWars2.Hero.Achievements.Achievement.IconUrl.get -> System.Uri?
GuildWars2.Hero.Achievements.Achievement.IconUrl.init -> void
GuildWars2.Hero.Achievements.Achievement.Id.get -> int
GuildWars2.Hero.Achievements.Achievement.Id.init -> void
GuildWars2.Hero.Achievements.Achievement.LockedText.get -> string!
GuildWars2.Hero.Achievements.Achievement.LockedText.init -> void
GuildWars2.Hero.Achievements.Achievement.Name.get -> string!
GuildWars2.Hero.Achievements.Achievement.Name.init -> void
GuildWars2.Hero.Achievements.Achievement.PointCap.get -> int?
GuildWars2.Hero.Achievements.Achievement.PointCap.init -> void
GuildWars2.Hero.Achievements.Achievement.Prerequisites.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Achievements.Achievement.Prerequisites.init -> void
GuildWars2.Hero.Achievements.Achievement.Requirement.get -> string!
GuildWars2.Hero.Achievements.Achievement.Requirement.init -> void
GuildWars2.Hero.Achievements.Achievement.Rewards.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Achievements.AchievementReward!>?
GuildWars2.Hero.Achievements.Achievement.Rewards.init -> void
GuildWars2.Hero.Achievements.Achievement.Tiers.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Achievements.AchievementTier!>!
GuildWars2.Hero.Achievements.Achievement.Tiers.init -> void
GuildWars2.Hero.Achievements.AchievementBit
GuildWars2.Hero.Achievements.AchievementBit.AchievementBit() -> void
GuildWars2.Hero.Achievements.AchievementBit.AchievementBit(GuildWars2.Hero.Achievements.AchievementBit! original) -> void
GuildWars2.Hero.Achievements.AchievementBit.Text.get -> string!
GuildWars2.Hero.Achievements.AchievementBit.Text.init -> void
GuildWars2.Hero.Achievements.AchievementFlags
GuildWars2.Hero.Achievements.AchievementFlags.AchievementFlags() -> void
GuildWars2.Hero.Achievements.AchievementFlags.CategoryDisplay.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.CategoryDisplay.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Daily.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Daily.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Equals(GuildWars2.Hero.Achievements.AchievementFlags? other) -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Hidden.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Hidden.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.IgnoreNearlyComplete.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.IgnoreNearlyComplete.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Monthly.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Monthly.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.MoveToTop.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.MoveToTop.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Permanent.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Permanent.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Pvp.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Pvp.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.RepairOnLogin.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.RepairOnLogin.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Repeatable.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Repeatable.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.RequiresUnlock.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.RequiresUnlock.init -> void
GuildWars2.Hero.Achievements.AchievementFlags.Weekly.get -> bool
GuildWars2.Hero.Achievements.AchievementFlags.Weekly.init -> void
GuildWars2.Hero.Achievements.AchievementReward
GuildWars2.Hero.Achievements.AchievementReward.AchievementReward() -> void
GuildWars2.Hero.Achievements.AchievementReward.AchievementReward(GuildWars2.Hero.Achievements.AchievementReward! original) -> void
GuildWars2.Hero.Achievements.AchievementsClient
GuildWars2.Hero.Achievements.AchievementsClient.AchievementsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Achievements.AchievementsClient.GetAccountAchievementById(int achievementId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Achievements.AccountAchievement! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAccountAchievements(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.AccountAchievement!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAccountAchievementsByIds(System.Collections.Generic.IEnumerable<int>! achievementIds, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.AccountAchievement!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAccountAchievementsByPage(int pageIndex, int? pageSize, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.AccountAchievement!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementById(int achievementId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Achievements.Achievement! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementCategories(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Categories.AchievementCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementCategoriesByIds(System.Collections.Generic.IEnumerable<int>! achievementCategoryIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Categories.AchievementCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementCategoriesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Categories.AchievementCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementCategoriesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementCategoryById(int achievementCategoryId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Achievements.Categories.AchievementCategory! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementGroupById(string! achievementGroupId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Achievements.Groups.AchievementGroup! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementGroups(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Groups.AchievementGroup!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementGroupsByIds(System.Collections.Generic.IEnumerable<string!>! achievementGroupIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Groups.AchievementGroup!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementGroupsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Groups.AchievementGroup!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementGroupsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementsBulk(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Hero.Achievements.Achievement! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementsBulk(System.Collections.Generic.IEnumerable<int>! achievementIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Hero.Achievements.Achievement! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementsByIds(System.Collections.Generic.IEnumerable<int>! achievementIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Achievement!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Achievement!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetAchievementsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetTitleById(int titleId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Achievements.Titles.Title! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetTitles(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Titles.Title!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetTitlesByIds(System.Collections.Generic.IEnumerable<int>! titleIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Titles.Title!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetTitlesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Achievements.Titles.Title!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetTitlesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementsClient.GetUnlockedTitles(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Achievements.AchievementTier
GuildWars2.Hero.Achievements.AchievementTier.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementTier!
GuildWars2.Hero.Achievements.AchievementTier.AchievementTier() -> void
GuildWars2.Hero.Achievements.AchievementTier.Count.get -> int
GuildWars2.Hero.Achievements.AchievementTier.Count.init -> void
GuildWars2.Hero.Achievements.AchievementTier.Equals(GuildWars2.Hero.Achievements.AchievementTier? other) -> bool
GuildWars2.Hero.Achievements.AchievementTier.Points.get -> int
GuildWars2.Hero.Achievements.AchievementTier.Points.init -> void
GuildWars2.Hero.Achievements.Bits.AchievementItemBit
GuildWars2.Hero.Achievements.Bits.AchievementItemBit.AchievementItemBit() -> void
GuildWars2.Hero.Achievements.Bits.AchievementItemBit.Equals(GuildWars2.Hero.Achievements.Bits.AchievementItemBit? other) -> bool
GuildWars2.Hero.Achievements.Bits.AchievementItemBit.Id.get -> int
GuildWars2.Hero.Achievements.Bits.AchievementItemBit.Id.init -> void
GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit
GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.AchievementMiniatureBit() -> void
GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.Equals(GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit? other) -> bool
GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.Id.get -> int
GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.Id.init -> void
GuildWars2.Hero.Achievements.Bits.AchievementSkinBit
GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.AchievementSkinBit() -> void
GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.Equals(GuildWars2.Hero.Achievements.Bits.AchievementSkinBit? other) -> bool
GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.Id.get -> int
GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.Id.init -> void
GuildWars2.Hero.Achievements.Bits.AchievementTextBit
GuildWars2.Hero.Achievements.Bits.AchievementTextBit.AchievementTextBit() -> void
GuildWars2.Hero.Achievements.Bits.AchievementTextBit.Equals(GuildWars2.Hero.Achievements.Bits.AchievementTextBit? other) -> bool
GuildWars2.Hero.Achievements.Categories.AchievementCategory
GuildWars2.Hero.Achievements.Categories.AchievementCategory.<Clone>$() -> GuildWars2.Hero.Achievements.Categories.AchievementCategory!
GuildWars2.Hero.Achievements.Categories.AchievementCategory.AchievementCategory() -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Achievements.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Achievements.Categories.AchievementRef!>!
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Achievements.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Description.get -> string!
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Description.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Equals(GuildWars2.Hero.Achievements.Categories.AchievementCategory? other) -> bool
GuildWars2.Hero.Achievements.Categories.AchievementCategory.IconHref.get -> string!
GuildWars2.Hero.Achievements.Categories.AchievementCategory.IconHref.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.IconUrl.get -> System.Uri!
GuildWars2.Hero.Achievements.Categories.AchievementCategory.IconUrl.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Id.get -> int
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Id.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Name.get -> string!
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Name.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Order.get -> int
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Order.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Tomorrow.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Achievements.Categories.AchievementRef!>?
GuildWars2.Hero.Achievements.Categories.AchievementCategory.Tomorrow.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementFlags
GuildWars2.Hero.Achievements.Categories.AchievementFlags.AchievementFlags() -> void
GuildWars2.Hero.Achievements.Categories.AchievementFlags.Equals(GuildWars2.Hero.Achievements.Categories.AchievementFlags? other) -> bool
GuildWars2.Hero.Achievements.Categories.AchievementFlags.PvE.get -> bool
GuildWars2.Hero.Achievements.Categories.AchievementFlags.PvE.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementFlags.SpecialEvent.get -> bool
GuildWars2.Hero.Achievements.Categories.AchievementFlags.SpecialEvent.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementRef
GuildWars2.Hero.Achievements.Categories.AchievementRef.<Clone>$() -> GuildWars2.Hero.Achievements.Categories.AchievementRef!
GuildWars2.Hero.Achievements.Categories.AchievementRef.AchievementRef() -> void
GuildWars2.Hero.Achievements.Categories.AchievementRef.Equals(GuildWars2.Hero.Achievements.Categories.AchievementRef? other) -> bool
GuildWars2.Hero.Achievements.Categories.AchievementRef.Flags.get -> GuildWars2.Hero.Achievements.Categories.AchievementFlags!
GuildWars2.Hero.Achievements.Categories.AchievementRef.Flags.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementRef.Id.get -> int
GuildWars2.Hero.Achievements.Categories.AchievementRef.Id.init -> void
GuildWars2.Hero.Achievements.Categories.AchievementRef.Level.get -> GuildWars2.Hero.Achievements.LevelRequirement?
GuildWars2.Hero.Achievements.Categories.AchievementRef.Level.init -> void
GuildWars2.Hero.Achievements.CollectionAchievement
GuildWars2.Hero.Achievements.CollectionAchievement.CollectionAchievement() -> void
GuildWars2.Hero.Achievements.CollectionAchievement.Equals(GuildWars2.Hero.Achievements.CollectionAchievement? other) -> bool
GuildWars2.Hero.Achievements.Groups.AchievementGroup
GuildWars2.Hero.Achievements.Groups.AchievementGroup.<Clone>$() -> GuildWars2.Hero.Achievements.Groups.AchievementGroup!
GuildWars2.Hero.Achievements.Groups.AchievementGroup.AchievementGroup() -> void
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Categories.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Categories.init -> void
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Description.get -> string!
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Description.init -> void
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Equals(GuildWars2.Hero.Achievements.Groups.AchievementGroup? other) -> bool
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Id.get -> string!
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Id.init -> void
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Name.get -> string!
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Name.init -> void
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Order.get -> int
GuildWars2.Hero.Achievements.Groups.AchievementGroup.Order.init -> void
GuildWars2.Hero.Achievements.ItemReward
GuildWars2.Hero.Achievements.ItemReward.Count.get -> int
GuildWars2.Hero.Achievements.ItemReward.Count.init -> void
GuildWars2.Hero.Achievements.ItemReward.Equals(GuildWars2.Hero.Achievements.ItemReward? other) -> bool
GuildWars2.Hero.Achievements.ItemReward.Id.get -> int
GuildWars2.Hero.Achievements.ItemReward.Id.init -> void
GuildWars2.Hero.Achievements.ItemReward.ItemReward() -> void
GuildWars2.Hero.Achievements.LevelRequirement
GuildWars2.Hero.Achievements.LevelRequirement.<Clone>$() -> GuildWars2.Hero.Achievements.LevelRequirement!
GuildWars2.Hero.Achievements.LevelRequirement.Equals(GuildWars2.Hero.Achievements.LevelRequirement? other) -> bool
GuildWars2.Hero.Achievements.LevelRequirement.LevelRequirement() -> void
GuildWars2.Hero.Achievements.LevelRequirement.Max.get -> int
GuildWars2.Hero.Achievements.LevelRequirement.Max.init -> void
GuildWars2.Hero.Achievements.LevelRequirement.Min.get -> int
GuildWars2.Hero.Achievements.LevelRequirement.Min.init -> void
GuildWars2.Hero.Achievements.Rewards.CoinsReward
GuildWars2.Hero.Achievements.Rewards.CoinsReward.Coins.get -> GuildWars2.Coin
GuildWars2.Hero.Achievements.Rewards.CoinsReward.Coins.init -> void
GuildWars2.Hero.Achievements.Rewards.CoinsReward.CoinsReward() -> void
GuildWars2.Hero.Achievements.Rewards.CoinsReward.Equals(GuildWars2.Hero.Achievements.Rewards.CoinsReward? other) -> bool
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Equals(GuildWars2.Hero.Achievements.Rewards.MasteryPointReward? other) -> bool
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Id.get -> int
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Id.init -> void
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.MasteryPointReward() -> void
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Region.get -> GuildWars2.Extensible<GuildWars2.Hero.Masteries.MasteryRegionName>
GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Region.init -> void
GuildWars2.Hero.Achievements.Rewards.TitleReward
GuildWars2.Hero.Achievements.Rewards.TitleReward.Equals(GuildWars2.Hero.Achievements.Rewards.TitleReward? other) -> bool
GuildWars2.Hero.Achievements.Rewards.TitleReward.Id.get -> int
GuildWars2.Hero.Achievements.Rewards.TitleReward.Id.init -> void
GuildWars2.Hero.Achievements.Rewards.TitleReward.TitleReward() -> void
GuildWars2.Hero.Achievements.Titles.Title
GuildWars2.Hero.Achievements.Titles.Title.<Clone>$() -> GuildWars2.Hero.Achievements.Titles.Title!
GuildWars2.Hero.Achievements.Titles.Title.AchievementPointsRequired.get -> int?
GuildWars2.Hero.Achievements.Titles.Title.AchievementPointsRequired.init -> void
GuildWars2.Hero.Achievements.Titles.Title.Achievements.get -> System.Collections.Generic.IReadOnlyList<int>?
GuildWars2.Hero.Achievements.Titles.Title.Achievements.init -> void
GuildWars2.Hero.Achievements.Titles.Title.Equals(GuildWars2.Hero.Achievements.Titles.Title? other) -> bool
GuildWars2.Hero.Achievements.Titles.Title.Id.get -> int
GuildWars2.Hero.Achievements.Titles.Title.Id.init -> void
GuildWars2.Hero.Achievements.Titles.Title.Name.get -> string!
GuildWars2.Hero.Achievements.Titles.Title.Name.init -> void
GuildWars2.Hero.Achievements.Titles.Title.Title() -> void
GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.AgonyResistance = 10 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Concentration = 5 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.ConditionDamage = 6 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Expertise = 7 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Ferocity = 8 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.HealingPower = 9 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.None = 0 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Power = 1 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Precision = 2 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Toughness = 3 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.AttributeName.Vitality = 4 -> GuildWars2.Hero.AttributeName
GuildWars2.Hero.Attunement
GuildWars2.Hero.Attunement.Air = 3 -> GuildWars2.Hero.Attunement
GuildWars2.Hero.Attunement.Earth = 1 -> GuildWars2.Hero.Attunement
GuildWars2.Hero.Attunement.Fire = 4 -> GuildWars2.Hero.Attunement
GuildWars2.Hero.Attunement.Water = 2 -> GuildWars2.Hero.Attunement
GuildWars2.Hero.Banking.Bank
GuildWars2.Hero.Banking.Bank.<Clone>$() -> GuildWars2.Hero.Banking.Bank!
GuildWars2.Hero.Banking.Bank.Bank() -> void
GuildWars2.Hero.Banking.Bank.Equals(GuildWars2.Hero.Banking.Bank? other) -> bool
GuildWars2.Hero.Banking.Bank.Items.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Inventories.ItemSlot?>!
GuildWars2.Hero.Banking.Bank.Items.init -> void
GuildWars2.Hero.Banking.BankClient
GuildWars2.Hero.Banking.BankClient.BankClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Banking.BankClient.GetBank(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Banking.Bank! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.BankClient.GetMaterialCategories(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Banking.MaterialCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.BankClient.GetMaterialCategoriesByIds(System.Collections.Generic.IEnumerable<int>! materialCategoryIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Banking.MaterialCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.BankClient.GetMaterialCategoriesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Banking.MaterialCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.BankClient.GetMaterialCategoriesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.BankClient.GetMaterialCategoryById(int materialCategoryId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Banking.MaterialCategory! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.BankClient.GetMaterialStorage(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Banking.MaterialStorage! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Banking.MaterialCategory
GuildWars2.Hero.Banking.MaterialCategory.<Clone>$() -> GuildWars2.Hero.Banking.MaterialCategory!
GuildWars2.Hero.Banking.MaterialCategory.Equals(GuildWars2.Hero.Banking.MaterialCategory? other) -> bool
GuildWars2.Hero.Banking.MaterialCategory.Id.get -> int
GuildWars2.Hero.Banking.MaterialCategory.Id.init -> void
GuildWars2.Hero.Banking.MaterialCategory.Items.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Banking.MaterialCategory.Items.init -> void
GuildWars2.Hero.Banking.MaterialCategory.MaterialCategory() -> void
GuildWars2.Hero.Banking.MaterialCategory.Name.get -> string!
GuildWars2.Hero.Banking.MaterialCategory.Name.init -> void
GuildWars2.Hero.Banking.MaterialCategory.Order.get -> int
GuildWars2.Hero.Banking.MaterialCategory.Order.init -> void
GuildWars2.Hero.Banking.MaterialSlot
GuildWars2.Hero.Banking.MaterialSlot.<Clone>$() -> GuildWars2.Hero.Banking.MaterialSlot!
GuildWars2.Hero.Banking.MaterialSlot.Binding.get -> GuildWars2.Extensible<GuildWars2.Hero.ItemBinding>
GuildWars2.Hero.Banking.MaterialSlot.Binding.init -> void
GuildWars2.Hero.Banking.MaterialSlot.CategoryId.get -> int
GuildWars2.Hero.Banking.MaterialSlot.CategoryId.init -> void
GuildWars2.Hero.Banking.MaterialSlot.Count.get -> int
GuildWars2.Hero.Banking.MaterialSlot.Count.init -> void
GuildWars2.Hero.Banking.MaterialSlot.Equals(GuildWars2.Hero.Banking.MaterialSlot? other) -> bool
GuildWars2.Hero.Banking.MaterialSlot.ItemId.get -> int
GuildWars2.Hero.Banking.MaterialSlot.ItemId.init -> void
GuildWars2.Hero.Banking.MaterialSlot.MaterialSlot() -> void
GuildWars2.Hero.Banking.MaterialStorage
GuildWars2.Hero.Banking.MaterialStorage.<Clone>$() -> GuildWars2.Hero.Banking.MaterialStorage!
GuildWars2.Hero.Banking.MaterialStorage.Equals(GuildWars2.Hero.Banking.MaterialStorage? other) -> bool
GuildWars2.Hero.Banking.MaterialStorage.Materials.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Banking.MaterialSlot!>!
GuildWars2.Hero.Banking.MaterialStorage.Materials.init -> void
GuildWars2.Hero.Banking.MaterialStorage.MaterialStorage() -> void
GuildWars2.Hero.BodyType
GuildWars2.Hero.BodyType.Female = 1 -> GuildWars2.Hero.BodyType
GuildWars2.Hero.BodyType.Male = 2 -> GuildWars2.Hero.BodyType
GuildWars2.Hero.Builds.ActionSkill
GuildWars2.Hero.Builds.ActionSkill.ActionSkill() -> void
GuildWars2.Hero.Builds.ActionSkill.ActionSkill(GuildWars2.Hero.Builds.ActionSkill! original) -> void
GuildWars2.Hero.Builds.ActionSkill.FlipSkillId.get -> int?
GuildWars2.Hero.Builds.ActionSkill.FlipSkillId.init -> void
GuildWars2.Hero.Builds.ActionSkill.NextSkillId.get -> int?
GuildWars2.Hero.Builds.ActionSkill.NextSkillId.init -> void
GuildWars2.Hero.Builds.ActionSkill.PreviousSkillId.get -> int?
GuildWars2.Hero.Builds.ActionSkill.PreviousSkillId.init -> void
GuildWars2.Hero.Builds.ActionSkill.Professions.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>!
GuildWars2.Hero.Builds.ActionSkill.Professions.init -> void
GuildWars2.Hero.Builds.ActionSkill.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.SkillSlot>
GuildWars2.Hero.Builds.ActionSkill.Slot.init -> void
GuildWars2.Hero.Builds.ActionSkill.SpecializationId.get -> int?
GuildWars2.Hero.Builds.ActionSkill.SpecializationId.init -> void
GuildWars2.Hero.Builds.ActionSkill.WeaponType.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.WeaponType>
GuildWars2.Hero.Builds.ActionSkill.WeaponType.init -> void
GuildWars2.Hero.Builds.Build
GuildWars2.Hero.Builds.Build.<Clone>$() -> GuildWars2.Hero.Builds.Build!
GuildWars2.Hero.Builds.Build.AquaticSkills.get -> GuildWars2.Hero.Builds.SkillBar!
GuildWars2.Hero.Builds.Build.AquaticSkills.init -> void
GuildWars2.Hero.Builds.Build.Build() -> void
GuildWars2.Hero.Builds.Build.Equals(GuildWars2.Hero.Builds.Build? other) -> bool
GuildWars2.Hero.Builds.Build.IsRangerBuild.get -> bool
GuildWars2.Hero.Builds.Build.IsRevenantBuild.get -> bool
GuildWars2.Hero.Builds.Build.Legends.get -> GuildWars2.Hero.Builds.SelectedLegends?
GuildWars2.Hero.Builds.Build.Legends.init -> void
GuildWars2.Hero.Builds.Build.Name.get -> string!
GuildWars2.Hero.Builds.Build.Name.init -> void
GuildWars2.Hero.Builds.Build.Pets.get -> GuildWars2.Hero.Builds.SelectedPets?
GuildWars2.Hero.Builds.Build.Pets.init -> void
GuildWars2.Hero.Builds.Build.Profession.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>
GuildWars2.Hero.Builds.Build.Profession.init -> void
GuildWars2.Hero.Builds.Build.SelectedSkillIds() -> System.Collections.Generic.IEnumerable<int>!
GuildWars2.Hero.Builds.Build.SelectedSpecializationIds() -> System.Collections.Generic.IEnumerable<int>!
GuildWars2.Hero.Builds.Build.SelectedTraitIds() -> System.Collections.Generic.IEnumerable<int>!
GuildWars2.Hero.Builds.Build.Skills.get -> GuildWars2.Hero.Builds.SkillBar!
GuildWars2.Hero.Builds.Build.Skills.init -> void
GuildWars2.Hero.Builds.Build.Specialization1.get -> GuildWars2.Hero.Builds.SelectedSpecialization?
GuildWars2.Hero.Builds.Build.Specialization1.init -> void
GuildWars2.Hero.Builds.Build.Specialization2.get -> GuildWars2.Hero.Builds.SelectedSpecialization?
GuildWars2.Hero.Builds.Build.Specialization2.init -> void
GuildWars2.Hero.Builds.Build.Specialization3.get -> GuildWars2.Hero.Builds.SelectedSpecialization?
GuildWars2.Hero.Builds.Build.Specialization3.init -> void
GuildWars2.Hero.Builds.BuildsClient
GuildWars2.Hero.Builds.BuildsClient.BuildsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Builds.BuildsClient.GetActiveBuild(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.BuildTemplate! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetBuild(int templateNumber, string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.BuildTemplate! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetBuildNumbers(string! characterName, string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetBuilds(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.BuildTemplate!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetLegendById(string! legendId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.Legend! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetLegends(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Legend!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetLegendsByIds(System.Collections.Generic.IEnumerable<string!>! legendIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Legend!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetLegendsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Legend!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetLegendsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSkillById(int skillId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.Skill! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSkills(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Skill!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSkillsByIds(System.Collections.Generic.IEnumerable<int>! skillIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Skill!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSkillsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Skill!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSkillsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSpecializationById(int specializationId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.Specialization! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSpecializations(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Specialization!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSpecializationsByIds(System.Collections.Generic.IEnumerable<int>! specializationIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Specialization!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSpecializationsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Specialization!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetSpecializationsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetStoredBuild(int storageNumber, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.Build! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetStoredBuildNumbers(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyList<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetStoredBuilds(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.Build!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetStoredBuilds(System.Collections.Generic.IEnumerable<int>! storageNumbers, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.Build!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetTraitById(int traitId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Builds.Trait! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetTraits(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Trait!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetTraitsByIds(System.Collections.Generic.IEnumerable<int>! traitIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Trait!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetTraitsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Builds.Trait!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildsClient.GetTraitsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Builds.BuildTemplate
GuildWars2.Hero.Builds.BuildTemplate.<Clone>$() -> GuildWars2.Hero.Builds.BuildTemplate!
GuildWars2.Hero.Builds.BuildTemplate.Build.get -> GuildWars2.Hero.Builds.Build!
GuildWars2.Hero.Builds.BuildTemplate.Build.init -> void
GuildWars2.Hero.Builds.BuildTemplate.BuildTemplate() -> void
GuildWars2.Hero.Builds.BuildTemplate.Equals(GuildWars2.Hero.Builds.BuildTemplate? other) -> bool
GuildWars2.Hero.Builds.BuildTemplate.IsActive.get -> bool
GuildWars2.Hero.Builds.BuildTemplate.IsActive.init -> void
GuildWars2.Hero.Builds.BuildTemplate.TabNumber.get -> int
GuildWars2.Hero.Builds.BuildTemplate.TabNumber.init -> void
GuildWars2.Hero.Builds.Fact
GuildWars2.Hero.Builds.Fact.Fact() -> void
GuildWars2.Hero.Builds.Fact.Fact(GuildWars2.Hero.Builds.Fact! original) -> void
GuildWars2.Hero.Builds.Fact.IconHref.get -> string!
GuildWars2.Hero.Builds.Fact.IconHref.init -> void
GuildWars2.Hero.Builds.Fact.IconUrl.get -> System.Uri?
GuildWars2.Hero.Builds.Fact.IconUrl.init -> void
GuildWars2.Hero.Builds.Fact.Text.get -> string!
GuildWars2.Hero.Builds.Fact.Text.init -> void
GuildWars2.Hero.Builds.Facts.AttributeAdjustment
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.AttributeAdjustment() -> void
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Equals(GuildWars2.Hero.Builds.Facts.AttributeAdjustment? other) -> bool
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.HitCount.get -> int?
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.HitCount.init -> void
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Target.get -> GuildWars2.Extensible<GuildWars2.Hero.AttributeName>?
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Target.init -> void
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Value.get -> int?
GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Value.init -> void
GuildWars2.Hero.Builds.Facts.AttributeConversion
GuildWars2.Hero.Builds.Facts.AttributeConversion.AttributeConversion() -> void
GuildWars2.Hero.Builds.Facts.AttributeConversion.Equals(GuildWars2.Hero.Builds.Facts.AttributeConversion? other) -> bool
GuildWars2.Hero.Builds.Facts.AttributeConversion.Percent.get -> int
GuildWars2.Hero.Builds.Facts.AttributeConversion.Percent.init -> void
GuildWars2.Hero.Builds.Facts.AttributeConversion.Source.get -> GuildWars2.Extensible<GuildWars2.Hero.AttributeName>
GuildWars2.Hero.Builds.Facts.AttributeConversion.Source.init -> void
GuildWars2.Hero.Builds.Facts.AttributeConversion.Target.get -> GuildWars2.Extensible<GuildWars2.Hero.AttributeName>
GuildWars2.Hero.Builds.Facts.AttributeConversion.Target.init -> void
GuildWars2.Hero.Builds.Facts.Buff
GuildWars2.Hero.Builds.Facts.Buff.ApplyCount.get -> int?
GuildWars2.Hero.Builds.Facts.Buff.ApplyCount.init -> void
GuildWars2.Hero.Builds.Facts.Buff.Buff() -> void
GuildWars2.Hero.Builds.Facts.Buff.Buff(GuildWars2.Hero.Builds.Facts.Buff! original) -> void
GuildWars2.Hero.Builds.Facts.Buff.Description.get -> string!
GuildWars2.Hero.Builds.Facts.Buff.Description.init -> void
GuildWars2.Hero.Builds.Facts.Buff.Duration.get -> System.TimeSpan?
GuildWars2.Hero.Builds.Facts.Buff.Duration.init -> void
GuildWars2.Hero.Builds.Facts.Buff.Status.get -> string!
GuildWars2.Hero.Builds.Facts.Buff.Status.init -> void
GuildWars2.Hero.Builds.Facts.ComboField
GuildWars2.Hero.Builds.Facts.ComboField.ComboField() -> void
GuildWars2.Hero.Builds.Facts.ComboField.Equals(GuildWars2.Hero.Builds.Facts.ComboField? other) -> bool
GuildWars2.Hero.Builds.Facts.ComboField.Field.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.Facts.ComboFieldName>
GuildWars2.Hero.Builds.Facts.ComboField.Field.init -> void
GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Dark = 1 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Ethereal = 2 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Fire = 3 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Ice = 4 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Light = 5 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Lightning = 6 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Poison = 7 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Smoke = 8 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFieldName.Water = 9 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFinisher
GuildWars2.Hero.Builds.Facts.ComboFinisher.ComboFinisher() -> void
GuildWars2.Hero.Builds.Facts.ComboFinisher.Equals(GuildWars2.Hero.Builds.Facts.ComboFinisher? other) -> bool
GuildWars2.Hero.Builds.Facts.ComboFinisher.FinisherName.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.Facts.ComboFinisherName>
GuildWars2.Hero.Builds.Facts.ComboFinisher.FinisherName.init -> void
GuildWars2.Hero.Builds.Facts.ComboFinisher.Percent.get -> int
GuildWars2.Hero.Builds.Facts.ComboFinisher.Percent.init -> void
GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.Facts.ComboFinisherName.Blast = 1 -> GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.Facts.ComboFinisherName.Leap = 2 -> GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.Facts.ComboFinisherName.Projectile = 3 -> GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.Facts.ComboFinisherName.Whirl = 4 -> GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.Facts.Damage
GuildWars2.Hero.Builds.Facts.Damage.Damage() -> void
GuildWars2.Hero.Builds.Facts.Damage.DamageMultiplier.get -> double
GuildWars2.Hero.Builds.Facts.Damage.DamageMultiplier.init -> void
GuildWars2.Hero.Builds.Facts.Damage.Equals(GuildWars2.Hero.Builds.Facts.Damage? other) -> bool
GuildWars2.Hero.Builds.Facts.Damage.HitCount.get -> int
GuildWars2.Hero.Builds.Facts.Damage.HitCount.init -> void
GuildWars2.Hero.Builds.Facts.Distance
GuildWars2.Hero.Builds.Facts.Distance.Distance() -> void
GuildWars2.Hero.Builds.Facts.Distance.Equals(GuildWars2.Hero.Builds.Facts.Distance? other) -> bool
GuildWars2.Hero.Builds.Facts.Distance.Length.get -> int
GuildWars2.Hero.Builds.Facts.Distance.Length.init -> void
GuildWars2.Hero.Builds.Facts.Duration
GuildWars2.Hero.Builds.Facts.Duration.Duration() -> void
GuildWars2.Hero.Builds.Facts.Duration.Equals(GuildWars2.Hero.Builds.Facts.Duration? other) -> bool
GuildWars2.Hero.Builds.Facts.Duration.Length.get -> System.TimeSpan
GuildWars2.Hero.Builds.Facts.Duration.Length.init -> void
GuildWars2.Hero.Builds.Facts.HealingAdjust
GuildWars2.Hero.Builds.Facts.HealingAdjust.Equals(GuildWars2.Hero.Builds.Facts.HealingAdjust? other) -> bool
GuildWars2.Hero.Builds.Facts.HealingAdjust.HealingAdjust() -> void
GuildWars2.Hero.Builds.Facts.HealingAdjust.HitCount.get -> int
GuildWars2.Hero.Builds.Facts.HealingAdjust.HitCount.init -> void
GuildWars2.Hero.Builds.Facts.NoData
GuildWars2.Hero.Builds.Facts.NoData.Equals(GuildWars2.Hero.Builds.Facts.NoData? other) -> bool
GuildWars2.Hero.Builds.Facts.NoData.NoData() -> void
GuildWars2.Hero.Builds.Facts.Number
GuildWars2.Hero.Builds.Facts.Number.Equals(GuildWars2.Hero.Builds.Facts.Number? other) -> bool
GuildWars2.Hero.Builds.Facts.Number.Number() -> void
GuildWars2.Hero.Builds.Facts.Number.Value.get -> int
GuildWars2.Hero.Builds.Facts.Number.Value.init -> void
GuildWars2.Hero.Builds.Facts.Percentage
GuildWars2.Hero.Builds.Facts.Percentage.Equals(GuildWars2.Hero.Builds.Facts.Percentage? other) -> bool
GuildWars2.Hero.Builds.Facts.Percentage.Percent.get -> double
GuildWars2.Hero.Builds.Facts.Percentage.Percent.init -> void
GuildWars2.Hero.Builds.Facts.Percentage.Percentage() -> void
GuildWars2.Hero.Builds.Facts.PrefixedBuff
GuildWars2.Hero.Builds.Facts.PrefixedBuff.Equals(GuildWars2.Hero.Builds.Facts.PrefixedBuff? other) -> bool
GuildWars2.Hero.Builds.Facts.PrefixedBuff.Precondition.get -> string!
GuildWars2.Hero.Builds.Facts.PrefixedBuff.Precondition.init -> void
GuildWars2.Hero.Builds.Facts.PrefixedBuff.PrefixedBuff() -> void
GuildWars2.Hero.Builds.Facts.PrefixedBuff.PrefixIconHref.get -> string!
GuildWars2.Hero.Builds.Facts.PrefixedBuff.PrefixIconHref.init -> void
GuildWars2.Hero.Builds.Facts.PrefixedBuff.PrefixIconUrl.get -> System.Uri!
GuildWars2.Hero.Builds.Facts.PrefixedBuff.PrefixIconUrl.init -> void
GuildWars2.Hero.Builds.Facts.Radius
GuildWars2.Hero.Builds.Facts.Radius.Distance.get -> int
GuildWars2.Hero.Builds.Facts.Radius.Distance.init -> void
GuildWars2.Hero.Builds.Facts.Radius.Equals(GuildWars2.Hero.Builds.Facts.Radius? other) -> bool
GuildWars2.Hero.Builds.Facts.Radius.Radius() -> void
GuildWars2.Hero.Builds.Facts.Range
GuildWars2.Hero.Builds.Facts.Range.Distance.get -> int
GuildWars2.Hero.Builds.Facts.Range.Distance.init -> void
GuildWars2.Hero.Builds.Facts.Range.Equals(GuildWars2.Hero.Builds.Facts.Range? other) -> bool
GuildWars2.Hero.Builds.Facts.Range.Range() -> void
GuildWars2.Hero.Builds.Facts.Recharge
GuildWars2.Hero.Builds.Facts.Recharge.Duration.get -> System.TimeSpan
GuildWars2.Hero.Builds.Facts.Recharge.Duration.init -> void
GuildWars2.Hero.Builds.Facts.Recharge.Equals(GuildWars2.Hero.Builds.Facts.Recharge? other) -> bool
GuildWars2.Hero.Builds.Facts.Recharge.Recharge() -> void
GuildWars2.Hero.Builds.Facts.StunBreak
GuildWars2.Hero.Builds.Facts.StunBreak.Equals(GuildWars2.Hero.Builds.Facts.StunBreak? other) -> bool
GuildWars2.Hero.Builds.Facts.StunBreak.StunBreak() -> void
GuildWars2.Hero.Builds.Facts.Time
GuildWars2.Hero.Builds.Facts.Time.Duration.get -> System.TimeSpan
GuildWars2.Hero.Builds.Facts.Time.Duration.init -> void
GuildWars2.Hero.Builds.Facts.Time.Equals(GuildWars2.Hero.Builds.Facts.Time? other) -> bool
GuildWars2.Hero.Builds.Facts.Time.Time() -> void
GuildWars2.Hero.Builds.Facts.Unblockable
GuildWars2.Hero.Builds.Facts.Unblockable.Equals(GuildWars2.Hero.Builds.Facts.Unblockable? other) -> bool
GuildWars2.Hero.Builds.Facts.Unblockable.Unblockable() -> void
GuildWars2.Hero.Builds.Legend
GuildWars2.Hero.Builds.Legend.<Clone>$() -> GuildWars2.Hero.Builds.Legend!
GuildWars2.Hero.Builds.Legend.Code.get -> int
GuildWars2.Hero.Builds.Legend.Code.init -> void
GuildWars2.Hero.Builds.Legend.Elite.get -> int
GuildWars2.Hero.Builds.Legend.Elite.init -> void
GuildWars2.Hero.Builds.Legend.Equals(GuildWars2.Hero.Builds.Legend? other) -> bool
GuildWars2.Hero.Builds.Legend.Heal.get -> int
GuildWars2.Hero.Builds.Legend.Heal.init -> void
GuildWars2.Hero.Builds.Legend.Id.get -> string!
GuildWars2.Hero.Builds.Legend.Id.init -> void
GuildWars2.Hero.Builds.Legend.Legend() -> void
GuildWars2.Hero.Builds.Legend.Swap.get -> int
GuildWars2.Hero.Builds.Legend.Swap.init -> void
GuildWars2.Hero.Builds.Legend.Utilities.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Builds.Legend.Utilities.init -> void
GuildWars2.Hero.Builds.SelectedLegends
GuildWars2.Hero.Builds.SelectedLegends.<Clone>$() -> GuildWars2.Hero.Builds.SelectedLegends!
GuildWars2.Hero.Builds.SelectedLegends.Aquatic1.get -> string?
GuildWars2.Hero.Builds.SelectedLegends.Aquatic1.init -> void
GuildWars2.Hero.Builds.SelectedLegends.Aquatic2.get -> string?
GuildWars2.Hero.Builds.SelectedLegends.Aquatic2.init -> void
GuildWars2.Hero.Builds.SelectedLegends.Equals(GuildWars2.Hero.Builds.SelectedLegends? other) -> bool
GuildWars2.Hero.Builds.SelectedLegends.SelectedLegends() -> void
GuildWars2.Hero.Builds.SelectedLegends.Terrestrial1.get -> string?
GuildWars2.Hero.Builds.SelectedLegends.Terrestrial1.init -> void
GuildWars2.Hero.Builds.SelectedLegends.Terrestrial2.get -> string?
GuildWars2.Hero.Builds.SelectedLegends.Terrestrial2.init -> void
GuildWars2.Hero.Builds.SelectedPets
GuildWars2.Hero.Builds.SelectedPets.<Clone>$() -> GuildWars2.Hero.Builds.SelectedPets!
GuildWars2.Hero.Builds.SelectedPets.Aquatic1.get -> int?
GuildWars2.Hero.Builds.SelectedPets.Aquatic1.init -> void
GuildWars2.Hero.Builds.SelectedPets.Aquatic2.get -> int?
GuildWars2.Hero.Builds.SelectedPets.Aquatic2.init -> void
GuildWars2.Hero.Builds.SelectedPets.Equals(GuildWars2.Hero.Builds.SelectedPets? other) -> bool
GuildWars2.Hero.Builds.SelectedPets.SelectedPets() -> void
GuildWars2.Hero.Builds.SelectedPets.Terrestrial1.get -> int?
GuildWars2.Hero.Builds.SelectedPets.Terrestrial1.init -> void
GuildWars2.Hero.Builds.SelectedPets.Terrestrial2.get -> int?
GuildWars2.Hero.Builds.SelectedPets.Terrestrial2.init -> void
GuildWars2.Hero.Builds.SelectedSpecialization
GuildWars2.Hero.Builds.SelectedSpecialization.<Clone>$() -> GuildWars2.Hero.Builds.SelectedSpecialization!
GuildWars2.Hero.Builds.SelectedSpecialization.AdeptTraitId.get -> int?
GuildWars2.Hero.Builds.SelectedSpecialization.AdeptTraitId.init -> void
GuildWars2.Hero.Builds.SelectedSpecialization.Equals(GuildWars2.Hero.Builds.SelectedSpecialization? other) -> bool
GuildWars2.Hero.Builds.SelectedSpecialization.GrandmasterTraitId.get -> int?
GuildWars2.Hero.Builds.SelectedSpecialization.GrandmasterTraitId.init -> void
GuildWars2.Hero.Builds.SelectedSpecialization.Id.get -> int
GuildWars2.Hero.Builds.SelectedSpecialization.Id.init -> void
GuildWars2.Hero.Builds.SelectedSpecialization.MasterTraitId.get -> int?
GuildWars2.Hero.Builds.SelectedSpecialization.MasterTraitId.init -> void
GuildWars2.Hero.Builds.SelectedSpecialization.SelectedSpecialization() -> void
GuildWars2.Hero.Builds.SelectedSpecialization.SelectedTraitIds() -> System.Collections.Generic.IEnumerable<int>!
GuildWars2.Hero.Builds.Skill
GuildWars2.Hero.Builds.Skill.Categories.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Extensible<GuildWars2.Hero.Builds.SkillCategoryName>>!
GuildWars2.Hero.Builds.Skill.Categories.init -> void
GuildWars2.Hero.Builds.Skill.ChatLink.get -> string!
GuildWars2.Hero.Builds.Skill.ChatLink.init -> void
GuildWars2.Hero.Builds.Skill.Description.get -> string!
GuildWars2.Hero.Builds.Skill.Description.init -> void
GuildWars2.Hero.Builds.Skill.Facts.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.Fact!>?
GuildWars2.Hero.Builds.Skill.Facts.init -> void
GuildWars2.Hero.Builds.Skill.GetChatLink() -> GuildWars2.Chat.SkillLink!
GuildWars2.Hero.Builds.Skill.IconHref.get -> string!
GuildWars2.Hero.Builds.Skill.IconHref.init -> void
GuildWars2.Hero.Builds.Skill.IconUrl.get -> System.Uri?
GuildWars2.Hero.Builds.Skill.IconUrl.init -> void
GuildWars2.Hero.Builds.Skill.Id.get -> int
GuildWars2.Hero.Builds.Skill.Id.init -> void
GuildWars2.Hero.Builds.Skill.Name.get -> string!
GuildWars2.Hero.Builds.Skill.Name.init -> void
GuildWars2.Hero.Builds.Skill.Skill() -> void
GuildWars2.Hero.Builds.Skill.Skill(GuildWars2.Hero.Builds.Skill! original) -> void
GuildWars2.Hero.Builds.Skill.SkillFlags.get -> GuildWars2.Hero.Builds.SkillFlags!
GuildWars2.Hero.Builds.Skill.SkillFlags.init -> void
GuildWars2.Hero.Builds.Skill.TraitedFacts.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.TraitedFact!>?
GuildWars2.Hero.Builds.Skill.TraitedFacts.init -> void
GuildWars2.Hero.Builds.SkillBar
GuildWars2.Hero.Builds.SkillBar.<Clone>$() -> GuildWars2.Hero.Builds.SkillBar!
GuildWars2.Hero.Builds.SkillBar.EliteSkillId.get -> int?
GuildWars2.Hero.Builds.SkillBar.EliteSkillId.init -> void
GuildWars2.Hero.Builds.SkillBar.Equals(GuildWars2.Hero.Builds.SkillBar? other) -> bool
GuildWars2.Hero.Builds.SkillBar.HealSkillId.get -> int?
GuildWars2.Hero.Builds.SkillBar.HealSkillId.init -> void
GuildWars2.Hero.Builds.SkillBar.SelectedSkillIds() -> System.Collections.Generic.IEnumerable<int>!
GuildWars2.Hero.Builds.SkillBar.SkillBar() -> void
GuildWars2.Hero.Builds.SkillBar.UtilitySkillId1.get -> int?
GuildWars2.Hero.Builds.SkillBar.UtilitySkillId1.init -> void
GuildWars2.Hero.Builds.SkillBar.UtilitySkillId2.get -> int?
GuildWars2.Hero.Builds.SkillBar.UtilitySkillId2.init -> void
GuildWars2.Hero.Builds.SkillBar.UtilitySkillId3.get -> int?
GuildWars2.Hero.Builds.SkillBar.UtilitySkillId3.init -> void
GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Arcane = 1 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Banner = 2 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Burst = 3 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Cantrip = 4 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.CelestialAvatar = 5 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Clone = 6 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Conjure = 7 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Consecration = 8 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Corruption = 9 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Deception = 10 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.DualWield = 11 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Elixir = 12 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Gadget = 13 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Glamour = 14 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Glyph = 15 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Kit = 16 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.LegendaryAssassin = 17 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.LegendaryDemon = 18 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.LegendaryDragon = 19 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.LegendaryDwarf = 20 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Manipulation = 21 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Mantra = 22 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Mark = 23 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Meditation = 24 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Minion = 25 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Overload = 26 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Phantasm = 27 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Physical = 28 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.PrimalBurst = 29 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Rage = 30 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Shout = 31 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Signet = 32 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Spectral = 33 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Spirit = 34 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.SpiritWeapon = 35 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Stance = 36 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.StealthAttack = 37 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Survival = 38 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Symbol = 39 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Transform = 40 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Trap = 41 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Trick = 42 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Turret = 43 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Venom = 44 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Virtue = 45 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Ward = 46 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillCategoryName.Well = 47 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillFlags
GuildWars2.Hero.Builds.SkillFlags.Equals(GuildWars2.Hero.Builds.SkillFlags? other) -> bool
GuildWars2.Hero.Builds.SkillFlags.GroundTargeted.get -> bool
GuildWars2.Hero.Builds.SkillFlags.GroundTargeted.init -> void
GuildWars2.Hero.Builds.SkillFlags.NoUnderwater.get -> bool
GuildWars2.Hero.Builds.SkillFlags.NoUnderwater.init -> void
GuildWars2.Hero.Builds.SkillFlags.SkillFlags() -> void
GuildWars2.Hero.Builds.Skills.BundleSkill
GuildWars2.Hero.Builds.Skills.BundleSkill.BundleSkill() -> void
GuildWars2.Hero.Builds.Skills.BundleSkill.Equals(GuildWars2.Hero.Builds.Skills.BundleSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.EliteSkill
GuildWars2.Hero.Builds.Skills.EliteSkill.EliteSkill() -> void
GuildWars2.Hero.Builds.Skills.EliteSkill.Equals(GuildWars2.Hero.Builds.Skills.EliteSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.EliteSkill.TransformSkillIds.get -> System.Collections.Generic.IReadOnlyList<int>?
GuildWars2.Hero.Builds.Skills.EliteSkill.TransformSkillIds.init -> void
GuildWars2.Hero.Builds.Skills.HealSkill
GuildWars2.Hero.Builds.Skills.HealSkill.Equals(GuildWars2.Hero.Builds.Skills.HealSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.HealSkill.HealSkill() -> void
GuildWars2.Hero.Builds.Skills.LockedSkill
GuildWars2.Hero.Builds.Skills.LockedSkill.Equals(GuildWars2.Hero.Builds.Skills.LockedSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.LockedSkill.LockedSkill() -> void
GuildWars2.Hero.Builds.Skills.MonsterSkill
GuildWars2.Hero.Builds.Skills.MonsterSkill.Equals(GuildWars2.Hero.Builds.Skills.MonsterSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.MonsterSkill.MonsterSkill() -> void
GuildWars2.Hero.Builds.Skills.PetSkill
GuildWars2.Hero.Builds.Skills.PetSkill.Equals(GuildWars2.Hero.Builds.Skills.PetSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.PetSkill.PetSkill() -> void
GuildWars2.Hero.Builds.Skills.ProfessionSkill
GuildWars2.Hero.Builds.Skills.ProfessionSkill.Attunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Builds.Skills.ProfessionSkill.Attunement.init -> void
GuildWars2.Hero.Builds.Skills.ProfessionSkill.Cost.get -> int?
GuildWars2.Hero.Builds.Skills.ProfessionSkill.Cost.init -> void
GuildWars2.Hero.Builds.Skills.ProfessionSkill.Equals(GuildWars2.Hero.Builds.Skills.ProfessionSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.ProfessionSkill.ProfessionSkill() -> void
GuildWars2.Hero.Builds.Skills.ProfessionSkill.TransformSkills.get -> System.Collections.Generic.IReadOnlyList<int>?
GuildWars2.Hero.Builds.Skills.ProfessionSkill.TransformSkills.init -> void
GuildWars2.Hero.Builds.Skills.ToolbeltSkill
GuildWars2.Hero.Builds.Skills.ToolbeltSkill.Equals(GuildWars2.Hero.Builds.Skills.ToolbeltSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.ToolbeltSkill.ToolbeltSkill() -> void
GuildWars2.Hero.Builds.Skills.UtilitySkill
GuildWars2.Hero.Builds.Skills.UtilitySkill.Equals(GuildWars2.Hero.Builds.Skills.UtilitySkill? other) -> bool
GuildWars2.Hero.Builds.Skills.UtilitySkill.UtilitySkill() -> void
GuildWars2.Hero.Builds.Skills.WeaponSkill
GuildWars2.Hero.Builds.Skills.WeaponSkill.Attunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Builds.Skills.WeaponSkill.Attunement.init -> void
GuildWars2.Hero.Builds.Skills.WeaponSkill.Cost.get -> int?
GuildWars2.Hero.Builds.Skills.WeaponSkill.Cost.init -> void
GuildWars2.Hero.Builds.Skills.WeaponSkill.DualAttunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Builds.Skills.WeaponSkill.DualAttunement.init -> void
GuildWars2.Hero.Builds.Skills.WeaponSkill.Equals(GuildWars2.Hero.Builds.Skills.WeaponSkill? other) -> bool
GuildWars2.Hero.Builds.Skills.WeaponSkill.Initiative.get -> int?
GuildWars2.Hero.Builds.Skills.WeaponSkill.Initiative.init -> void
GuildWars2.Hero.Builds.Skills.WeaponSkill.Offhand.get -> GuildWars2.Extensible<GuildWars2.Hero.Offhand>?
GuildWars2.Hero.Builds.Skills.WeaponSkill.Offhand.init -> void
GuildWars2.Hero.Builds.Skills.WeaponSkill.WeaponSkill() -> void
GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Downed_1 = 14 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Downed_2 = 15 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Downed_3 = 16 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Downed_4 = 17 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Elite = 8 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Heal = 6 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Pet = 18 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Profession_1 = 9 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Profession_2 = 10 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Profession_3 = 11 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Profession_4 = 12 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Profession_5 = 13 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Toolbelt = 19 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Transform_1 = 20 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Utility = 7 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Weapon_1 = 1 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Weapon_2 = 2 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Weapon_3 = 3 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Weapon_4 = 4 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SkillSlot.Weapon_5 = 5 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.SlotSkill
GuildWars2.Hero.Builds.SlotSkill.Attunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Builds.SlotSkill.Attunement.init -> void
GuildWars2.Hero.Builds.SlotSkill.BundleSkillIds.get -> System.Collections.Generic.IReadOnlyList<int>?
GuildWars2.Hero.Builds.SlotSkill.BundleSkillIds.init -> void
GuildWars2.Hero.Builds.SlotSkill.Cost.get -> int?
GuildWars2.Hero.Builds.SlotSkill.Cost.init -> void
GuildWars2.Hero.Builds.SlotSkill.SlotSkill() -> void
GuildWars2.Hero.Builds.SlotSkill.SlotSkill(GuildWars2.Hero.Builds.SlotSkill! original) -> void
GuildWars2.Hero.Builds.SlotSkill.SubskillIds.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.Subskill!>?
GuildWars2.Hero.Builds.SlotSkill.SubskillIds.init -> void
GuildWars2.Hero.Builds.SlotSkill.ToolbeltSkillId.get -> int?
GuildWars2.Hero.Builds.SlotSkill.ToolbeltSkillId.init -> void
GuildWars2.Hero.Builds.Specialization
GuildWars2.Hero.Builds.Specialization.<Clone>$() -> GuildWars2.Hero.Builds.Specialization!
GuildWars2.Hero.Builds.Specialization.BackgroundHref.get -> string!
GuildWars2.Hero.Builds.Specialization.BackgroundHref.init -> void
GuildWars2.Hero.Builds.Specialization.BackgroundUrl.get -> System.Uri!
GuildWars2.Hero.Builds.Specialization.BackgroundUrl.init -> void
GuildWars2.Hero.Builds.Specialization.Elite.get -> bool
GuildWars2.Hero.Builds.Specialization.Elite.init -> void
GuildWars2.Hero.Builds.Specialization.Equals(GuildWars2.Hero.Builds.Specialization? other) -> bool
GuildWars2.Hero.Builds.Specialization.IconHref.get -> string!
GuildWars2.Hero.Builds.Specialization.IconHref.init -> void
GuildWars2.Hero.Builds.Specialization.IconUrl.get -> System.Uri!
GuildWars2.Hero.Builds.Specialization.IconUrl.init -> void
GuildWars2.Hero.Builds.Specialization.Id.get -> int
GuildWars2.Hero.Builds.Specialization.Id.init -> void
GuildWars2.Hero.Builds.Specialization.MajorTraitIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Builds.Specialization.MajorTraitIds.init -> void
GuildWars2.Hero.Builds.Specialization.MinorTraitIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Builds.Specialization.MinorTraitIds.init -> void
GuildWars2.Hero.Builds.Specialization.Name.get -> string!
GuildWars2.Hero.Builds.Specialization.Name.init -> void
GuildWars2.Hero.Builds.Specialization.Profession.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>
GuildWars2.Hero.Builds.Specialization.Profession.init -> void
GuildWars2.Hero.Builds.Specialization.ProfessionBigIconHref.get -> string!
GuildWars2.Hero.Builds.Specialization.ProfessionBigIconHref.init -> void
GuildWars2.Hero.Builds.Specialization.ProfessionBigIconUrl.get -> System.Uri?
GuildWars2.Hero.Builds.Specialization.ProfessionBigIconUrl.init -> void
GuildWars2.Hero.Builds.Specialization.ProfessionIconHref.get -> string!
GuildWars2.Hero.Builds.Specialization.ProfessionIconHref.init -> void
GuildWars2.Hero.Builds.Specialization.ProfessionIconUrl.get -> System.Uri?
GuildWars2.Hero.Builds.Specialization.ProfessionIconUrl.init -> void
GuildWars2.Hero.Builds.Specialization.Specialization() -> void
GuildWars2.Hero.Builds.Specialization.WeaponTraitId.get -> int?
GuildWars2.Hero.Builds.Specialization.WeaponTraitId.init -> void
GuildWars2.Hero.Builds.Subskill
GuildWars2.Hero.Builds.Subskill.<Clone>$() -> GuildWars2.Hero.Builds.Subskill!
GuildWars2.Hero.Builds.Subskill.Attunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Builds.Subskill.Attunement.init -> void
GuildWars2.Hero.Builds.Subskill.Equals(GuildWars2.Hero.Builds.Subskill? other) -> bool
GuildWars2.Hero.Builds.Subskill.Form.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.Transformation>?
GuildWars2.Hero.Builds.Subskill.Form.init -> void
GuildWars2.Hero.Builds.Subskill.Id.get -> int
GuildWars2.Hero.Builds.Subskill.Id.init -> void
GuildWars2.Hero.Builds.Subskill.Subskill() -> void
GuildWars2.Hero.Builds.Trait
GuildWars2.Hero.Builds.Trait.<Clone>$() -> GuildWars2.Hero.Builds.Trait!
GuildWars2.Hero.Builds.Trait.Description.get -> string!
GuildWars2.Hero.Builds.Trait.Description.init -> void
GuildWars2.Hero.Builds.Trait.Equals(GuildWars2.Hero.Builds.Trait? other) -> bool
GuildWars2.Hero.Builds.Trait.Facts.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.Fact!>?
GuildWars2.Hero.Builds.Trait.Facts.init -> void
GuildWars2.Hero.Builds.Trait.IconHref.get -> string!
GuildWars2.Hero.Builds.Trait.IconHref.init -> void
GuildWars2.Hero.Builds.Trait.IconUrl.get -> System.Uri!
GuildWars2.Hero.Builds.Trait.IconUrl.init -> void
GuildWars2.Hero.Builds.Trait.Id.get -> int
GuildWars2.Hero.Builds.Trait.Id.init -> void
GuildWars2.Hero.Builds.Trait.Name.get -> string!
GuildWars2.Hero.Builds.Trait.Name.init -> void
GuildWars2.Hero.Builds.Trait.Order.get -> int
GuildWars2.Hero.Builds.Trait.Order.init -> void
GuildWars2.Hero.Builds.Trait.Skills.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.Skill!>?
GuildWars2.Hero.Builds.Trait.Skills.init -> void
GuildWars2.Hero.Builds.Trait.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.TraitSlot>
GuildWars2.Hero.Builds.Trait.Slot.init -> void
GuildWars2.Hero.Builds.Trait.SpezializationId.get -> int
GuildWars2.Hero.Builds.Trait.SpezializationId.init -> void
GuildWars2.Hero.Builds.Trait.Tier.get -> int
GuildWars2.Hero.Builds.Trait.Tier.init -> void
GuildWars2.Hero.Builds.Trait.Trait() -> void
GuildWars2.Hero.Builds.Trait.TraitedFacts.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Builds.TraitedFact!>?
GuildWars2.Hero.Builds.Trait.TraitedFacts.init -> void
GuildWars2.Hero.Builds.TraitedFact
GuildWars2.Hero.Builds.TraitedFact.<Clone>$() -> GuildWars2.Hero.Builds.TraitedFact!
GuildWars2.Hero.Builds.TraitedFact.Equals(GuildWars2.Hero.Builds.TraitedFact? other) -> bool
GuildWars2.Hero.Builds.TraitedFact.Fact.get -> GuildWars2.Hero.Builds.Fact!
GuildWars2.Hero.Builds.TraitedFact.Fact.init -> void
GuildWars2.Hero.Builds.TraitedFact.Overrides.get -> int?
GuildWars2.Hero.Builds.TraitedFact.Overrides.init -> void
GuildWars2.Hero.Builds.TraitedFact.RequiresTrait.get -> int
GuildWars2.Hero.Builds.TraitedFact.RequiresTrait.init -> void
GuildWars2.Hero.Builds.TraitedFact.TraitedFact() -> void
GuildWars2.Hero.Builds.TraitSlot
GuildWars2.Hero.Builds.TraitSlot.Major = 2 -> GuildWars2.Hero.Builds.TraitSlot
GuildWars2.Hero.Builds.TraitSlot.Minor = 1 -> GuildWars2.Hero.Builds.TraitSlot
GuildWars2.Hero.Builds.Transformation
GuildWars2.Hero.Builds.Transformation.CelestialAvatar = 1 -> GuildWars2.Hero.Builds.Transformation
GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Axe = 17 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Dagger = 2 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Focus = 3 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Greatsword = 12 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Hammer = 15 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.HarpoonGun = 11 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Longbow = 20 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Mace = 13 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.None = 1 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Pistol = 8 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Rifle = 9 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Scepter = 5 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Shield = 10 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Shortbow = 19 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Spear = 16 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Staff = 4 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Sword = 6 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Torch = 14 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Trident = 7 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Warhorn = 18 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Crafting.CraftingClient
GuildWars2.Hero.Crafting.CraftingClient.CraftingClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Crafting.CraftingClient.Daily.get -> GuildWars2.Hero.Crafting.Daily.DailyCraftingClient!
GuildWars2.Hero.Crafting.CraftingClient.Disciplines.get -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplinesClient!
GuildWars2.Hero.Crafting.CraftingClient.Recipes.get -> GuildWars2.Hero.Crafting.Recipes.RecipesClient!
GuildWars2.Hero.Crafting.Daily.DailyCraftingClient
GuildWars2.Hero.Crafting.Daily.DailyCraftingClient.DailyCraftingClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Crafting.Daily.DailyCraftingClient.GetDailyCraftableItems(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Daily.DailyCraftingClient.GetDailyCraftedItems(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.<Clone>$() -> GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline!
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Active.get -> bool
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Active.init -> void
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.CraftingDiscipline() -> void
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Discipline.get -> GuildWars2.Extensible<GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName>
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Discipline.init -> void
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Equals(GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline? other) -> bool
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Rating.get -> int
GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Rating.init -> void
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Armorsmith = 1 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Artificer = 2 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Chef = 3 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Homesteader = 10 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Huntsman = 4 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Jeweler = 5 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Leatherworker = 6 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Scribe = 7 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Tailor = 8 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.Weaponsmith = 9 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplinesClient
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplinesClient.CraftingDisciplinesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplinesClient.GetLearnedCraftingDisciplines(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines
GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.<Clone>$() -> GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines!
GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.Disciplines.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline!>!
GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.Disciplines.init -> void
GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.Equals(GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines? other) -> bool
GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.LearnedCraftingDisciplines() -> void
GuildWars2.Hero.Crafting.GuildIngredient
GuildWars2.Hero.Crafting.GuildIngredient.<Clone>$() -> GuildWars2.Hero.Crafting.GuildIngredient!
GuildWars2.Hero.Crafting.GuildIngredient.Count.get -> int
GuildWars2.Hero.Crafting.GuildIngredient.Count.init -> void
GuildWars2.Hero.Crafting.GuildIngredient.Equals(GuildWars2.Hero.Crafting.GuildIngredient? other) -> bool
GuildWars2.Hero.Crafting.GuildIngredient.GuildIngredient() -> void
GuildWars2.Hero.Crafting.GuildIngredient.UpgradeId.get -> int
GuildWars2.Hero.Crafting.GuildIngredient.UpgradeId.init -> void
GuildWars2.Hero.Crafting.Ingredient
GuildWars2.Hero.Crafting.Ingredient.<Clone>$() -> GuildWars2.Hero.Crafting.Ingredient!
GuildWars2.Hero.Crafting.Ingredient.Count.get -> int
GuildWars2.Hero.Crafting.Ingredient.Count.init -> void
GuildWars2.Hero.Crafting.Ingredient.Equals(GuildWars2.Hero.Crafting.Ingredient? other) -> bool
GuildWars2.Hero.Crafting.Ingredient.Id.get -> int
GuildWars2.Hero.Crafting.Ingredient.Id.init -> void
GuildWars2.Hero.Crafting.Ingredient.Ingredient() -> void
GuildWars2.Hero.Crafting.Ingredient.Kind.get -> GuildWars2.Extensible<GuildWars2.Hero.Crafting.IngredientKind>
GuildWars2.Hero.Crafting.Ingredient.Kind.init -> void
GuildWars2.Hero.Crafting.IngredientKind
GuildWars2.Hero.Crafting.IngredientKind.Currency = 1 -> GuildWars2.Hero.Crafting.IngredientKind
GuildWars2.Hero.Crafting.IngredientKind.GuildUpgrade = 2 -> GuildWars2.Hero.Crafting.IngredientKind
GuildWars2.Hero.Crafting.IngredientKind.Item = 0 -> GuildWars2.Hero.Crafting.IngredientKind
GuildWars2.Hero.Crafting.Recipes.AmuletRecipe
GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.AmuletRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.AmuletRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.AxeRecipe
GuildWars2.Hero.Crafting.Recipes.AxeRecipe.AxeRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.AxeRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.AxeRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.BackpackRecipe
GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.BackpackRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.BackpackRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.BagRecipe
GuildWars2.Hero.Crafting.Recipes.BagRecipe.BagRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.BagRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.BagRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.BootsRecipe
GuildWars2.Hero.Crafting.Recipes.BootsRecipe.BootsRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.BootsRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.BootsRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.BulkRecipe
GuildWars2.Hero.Crafting.Recipes.BulkRecipe.BulkRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.BulkRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.BulkRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.CoatRecipe
GuildWars2.Hero.Crafting.Recipes.CoatRecipe.CoatRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.CoatRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.CoatRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.ComponentRecipe
GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.ComponentRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.ComponentRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe
GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.ConsumableRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.DaggerRecipe
GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.DaggerRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.DaggerRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.DessertRecipe
GuildWars2.Hero.Crafting.Recipes.DessertRecipe.DessertRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.DessertRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.DessertRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.DyeRecipe
GuildWars2.Hero.Crafting.Recipes.DyeRecipe.DyeRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.DyeRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.DyeRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.EarringRecipe
GuildWars2.Hero.Crafting.Recipes.EarringRecipe.EarringRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.EarringRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.EarringRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.FeastRecipe
GuildWars2.Hero.Crafting.Recipes.FeastRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.FeastRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.FeastRecipe.FeastRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.FocusRecipe
GuildWars2.Hero.Crafting.Recipes.FocusRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.FocusRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.FocusRecipe.FocusRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.GlovesRecipe
GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.GlovesRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.GlovesRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe
GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.GreatswordRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.GuildConsumableRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.GuildIngredients.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Crafting.GuildIngredient!>!
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.GuildIngredients.init -> void
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.OutputUpgradeId.get -> int
GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.OutputUpgradeId.init -> void
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.GuildDecorationRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.GuildIngredients.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Crafting.GuildIngredient!>!
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.GuildIngredients.init -> void
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.OutputUpgradeId.get -> int
GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.OutputUpgradeId.init -> void
GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe
GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.GuildWvwUpgradeRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.OutputUpgradeId.get -> int?
GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.OutputUpgradeId.init -> void
GuildWars2.Hero.Crafting.Recipes.HammerRecipe
GuildWars2.Hero.Crafting.Recipes.HammerRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.HammerRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.HammerRecipe.HammerRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe
GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.HarpoonGunRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe
GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.HeadgearRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe
GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.IngredientCookingRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe
GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.InscriptionRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe
GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.InsigniaRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe
GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.LegendaryComponentRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe
GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.LeggingsRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.LongbowRecipe
GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.LongbowRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.LongbowRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.MaceRecipe
GuildWars2.Hero.Crafting.Recipes.MaceRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.MaceRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.MaceRecipe.MaceRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.MealRecipe
GuildWars2.Hero.Crafting.Recipes.MealRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.MealRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.MealRecipe.MealRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.PistolRecipe
GuildWars2.Hero.Crafting.Recipes.PistolRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.PistolRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.PistolRecipe.PistolRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.PotionRecipe
GuildWars2.Hero.Crafting.Recipes.PotionRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.PotionRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.PotionRecipe.PotionRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.Recipe
GuildWars2.Hero.Crafting.Recipes.Recipe.ChatLink.get -> string!
GuildWars2.Hero.Crafting.Recipes.Recipe.ChatLink.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.Disciplines.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName>>!
GuildWars2.Hero.Crafting.Recipes.Recipe.Disciplines.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.Flags.get -> GuildWars2.Hero.Crafting.Recipes.RecipeFlags!
GuildWars2.Hero.Crafting.Recipes.Recipe.Flags.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.GetChatLink() -> GuildWars2.Chat.RecipeLink!
GuildWars2.Hero.Crafting.Recipes.Recipe.Id.get -> int
GuildWars2.Hero.Crafting.Recipes.Recipe.Id.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.Ingredients.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Crafting.Ingredient!>!
GuildWars2.Hero.Crafting.Recipes.Recipe.Ingredients.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.MinRating.get -> int
GuildWars2.Hero.Crafting.Recipes.Recipe.MinRating.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.OutputItemCount.get -> int
GuildWars2.Hero.Crafting.Recipes.Recipe.OutputItemCount.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.OutputItemId.get -> int
GuildWars2.Hero.Crafting.Recipes.Recipe.OutputItemId.init -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.Recipe() -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.Recipe(GuildWars2.Hero.Crafting.Recipes.Recipe! original) -> void
GuildWars2.Hero.Crafting.Recipes.Recipe.TimeToCraft.get -> System.TimeSpan
GuildWars2.Hero.Crafting.Recipes.Recipe.TimeToCraft.init -> void
GuildWars2.Hero.Crafting.Recipes.RecipeFlags
GuildWars2.Hero.Crafting.Recipes.RecipeFlags.AutoLearned.get -> bool
GuildWars2.Hero.Crafting.Recipes.RecipeFlags.AutoLearned.init -> void
GuildWars2.Hero.Crafting.Recipes.RecipeFlags.Equals(GuildWars2.Hero.Crafting.Recipes.RecipeFlags? other) -> bool
GuildWars2.Hero.Crafting.Recipes.RecipeFlags.LearnedFromItem.get -> bool
GuildWars2.Hero.Crafting.Recipes.RecipeFlags.LearnedFromItem.init -> void
GuildWars2.Hero.Crafting.Recipes.RecipeFlags.RecipeFlags() -> void
GuildWars2.Hero.Crafting.Recipes.RecipesClient
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetLearnedRecipes(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipeById(int recipeId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Crafting.Recipes.Recipe! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesBulk(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Hero.Crafting.Recipes.Recipe! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesBulk(System.Collections.Generic.IEnumerable<int>! recipeIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Hero.Crafting.Recipes.Recipe! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesByIds(System.Collections.Generic.IEnumerable<int>! recipeIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Crafting.Recipes.Recipe!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesByIngredientItemId(int ingredientItemId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Crafting.Recipes.Recipe!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesByIngredientItemIdByPage(int ingredientItemId, int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Crafting.Recipes.Recipe!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesByOutputItemId(int outputItemId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Crafting.Recipes.Recipe!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesByOutputItemIdByPage(int outputItemId, int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Crafting.Recipes.Recipe!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Crafting.Recipes.Recipe!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesIndexByIngredientItemId(int ingredientItemId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetRecipesIndexByOutputItemId(int outputItemId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.GetUnlockedRecipes(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Crafting.Recipes.RecipesClient.RecipesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe
GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.RefinementEctoplasmRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe
GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.RefinementObsidianRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.RefinementRecipe
GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.RefinementRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.RefinementRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.RifleRecipe
GuildWars2.Hero.Crafting.Recipes.RifleRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.RifleRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.RifleRecipe.RifleRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.RingRecipe
GuildWars2.Hero.Crafting.Recipes.RingRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.RingRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.RingRecipe.RingRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.ScepterRecipe
GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.ScepterRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.ScepterRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe
GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.SeasoningRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.ShieldRecipe
GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.ShieldRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.ShieldRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe
GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.ShortbowRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe
GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.ShouldersRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.SnackRecipe
GuildWars2.Hero.Crafting.Recipes.SnackRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.SnackRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.SnackRecipe.SnackRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.SoupRecipe
GuildWars2.Hero.Crafting.Recipes.SoupRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.SoupRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.SoupRecipe.SoupRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.SpearRecipe
GuildWars2.Hero.Crafting.Recipes.SpearRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.SpearRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.SpearRecipe.SpearRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.StaffRecipe
GuildWars2.Hero.Crafting.Recipes.StaffRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.StaffRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.StaffRecipe.StaffRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.SwordRecipe
GuildWars2.Hero.Crafting.Recipes.SwordRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.SwordRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.SwordRecipe.SwordRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.TorchRecipe
GuildWars2.Hero.Crafting.Recipes.TorchRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.TorchRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.TorchRecipe.TorchRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.TridentRecipe
GuildWars2.Hero.Crafting.Recipes.TridentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.TridentRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.TridentRecipe.TridentRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe
GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.UpgradeComponentRecipe() -> void
GuildWars2.Hero.Crafting.Recipes.WarhornRecipe
GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.WarhornRecipe? other) -> bool
GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.WarhornRecipe() -> void
GuildWars2.Hero.Emotes.Emote
GuildWars2.Hero.Emotes.Emote.<Clone>$() -> GuildWars2.Hero.Emotes.Emote!
GuildWars2.Hero.Emotes.Emote.Commands.get -> System.Collections.Generic.IReadOnlyCollection<string!>!
GuildWars2.Hero.Emotes.Emote.Commands.init -> void
GuildWars2.Hero.Emotes.Emote.Emote() -> void
GuildWars2.Hero.Emotes.Emote.Equals(GuildWars2.Hero.Emotes.Emote? other) -> bool
GuildWars2.Hero.Emotes.Emote.Id.get -> string!
GuildWars2.Hero.Emotes.Emote.Id.init -> void
GuildWars2.Hero.Emotes.Emote.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Emotes.Emote.UnlockItemIds.init -> void
GuildWars2.Hero.Emotes.EmotesClient
GuildWars2.Hero.Emotes.EmotesClient.EmotesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Emotes.EmotesClient.GetEmoteById(string! emoteId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Emotes.Emote! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Emotes.EmotesClient.GetEmotes(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Emotes.Emote!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Emotes.EmotesClient.GetEmotesByIds(System.Collections.Generic.IEnumerable<string!>! emoteIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Emotes.Emote!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Emotes.EmotesClient.GetEmotesByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Emotes.Emote!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Emotes.EmotesClient.GetEmotesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Emotes.EmotesClient.GetUnlockedEmotes(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.ColorInfo
GuildWars2.Hero.Equipment.Dyes.ColorInfo.<Clone>$() -> GuildWars2.Hero.Equipment.Dyes.ColorInfo!
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Brightness.get -> int
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Brightness.init -> void
GuildWars2.Hero.Equipment.Dyes.ColorInfo.ColorInfo() -> void
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Contrast.get -> double
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Contrast.init -> void
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Equals(GuildWars2.Hero.Equipment.Dyes.ColorInfo? other) -> bool
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Hue.get -> int
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Hue.init -> void
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Lightness.get -> double
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Lightness.init -> void
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Rgb.get -> System.Drawing.Color
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Rgb.init -> void
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Saturation.get -> double
GuildWars2.Hero.Equipment.Dyes.ColorInfo.Saturation.init -> void
GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.ColorSet.Common = 2 -> GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.ColorSet.Exclusive = 5 -> GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.ColorSet.Rare = 4 -> GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.ColorSet.Starter = 1 -> GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.ColorSet.Uncommon = 3 -> GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.ColorSet.Unspecified = 0 -> GuildWars2.Hero.Equipment.Dyes.ColorSet
GuildWars2.Hero.Equipment.Dyes.DyeColor
GuildWars2.Hero.Equipment.Dyes.DyeColor.<Clone>$() -> GuildWars2.Hero.Equipment.Dyes.DyeColor!
GuildWars2.Hero.Equipment.Dyes.DyeColor.BaseRgb.get -> System.Drawing.Color
GuildWars2.Hero.Equipment.Dyes.DyeColor.BaseRgb.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Cloth.get -> GuildWars2.Hero.Equipment.Dyes.ColorInfo!
GuildWars2.Hero.Equipment.Dyes.DyeColor.Cloth.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.DyeColor() -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Equals(GuildWars2.Hero.Equipment.Dyes.DyeColor? other) -> bool
GuildWars2.Hero.Equipment.Dyes.DyeColor.Fur.get -> GuildWars2.Hero.Equipment.Dyes.ColorInfo?
GuildWars2.Hero.Equipment.Dyes.DyeColor.Fur.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.GetChatLink() -> GuildWars2.Chat.ItemLink?
GuildWars2.Hero.Equipment.Dyes.DyeColor.Hue.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Dyes.Hue>
GuildWars2.Hero.Equipment.Dyes.DyeColor.Hue.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Id.get -> int
GuildWars2.Hero.Equipment.Dyes.DyeColor.Id.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.ItemId.get -> int?
GuildWars2.Hero.Equipment.Dyes.DyeColor.ItemId.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Leather.get -> GuildWars2.Hero.Equipment.Dyes.ColorInfo!
GuildWars2.Hero.Equipment.Dyes.DyeColor.Leather.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Material.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Dyes.Material>
GuildWars2.Hero.Equipment.Dyes.DyeColor.Material.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Metal.get -> GuildWars2.Hero.Equipment.Dyes.ColorInfo!
GuildWars2.Hero.Equipment.Dyes.DyeColor.Metal.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Name.get -> string!
GuildWars2.Hero.Equipment.Dyes.DyeColor.Name.init -> void
GuildWars2.Hero.Equipment.Dyes.DyeColor.Set.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Dyes.ColorSet>
GuildWars2.Hero.Equipment.Dyes.DyeColor.Set.init -> void
GuildWars2.Hero.Equipment.Dyes.DyesClient
GuildWars2.Hero.Equipment.Dyes.DyesClient.DyesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Dyes.DyesClient.GetColorById(int colorId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Dyes.DyeColor! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.DyesClient.GetColors(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Dyes.DyeColor!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.DyesClient.GetColorsByIds(System.Collections.Generic.IEnumerable<int>! colorIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Dyes.DyeColor!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.DyesClient.GetColorsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Dyes.DyeColor!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.DyesClient.GetColorsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.DyesClient.GetUnlockedColors(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Blue = 7 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Brown = 2 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Gray = 1 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Green = 6 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Orange = 4 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Purple = 8 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Red = 3 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Unspecified = 0 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Hue.Yellow = 5 -> GuildWars2.Hero.Equipment.Dyes.Hue
GuildWars2.Hero.Equipment.Dyes.Material
GuildWars2.Hero.Equipment.Dyes.Material.Leather = 2 -> GuildWars2.Hero.Equipment.Dyes.Material
GuildWars2.Hero.Equipment.Dyes.Material.Metal = 3 -> GuildWars2.Hero.Equipment.Dyes.Material
GuildWars2.Hero.Equipment.Dyes.Material.Unspecified = 0 -> GuildWars2.Hero.Equipment.Dyes.Material
GuildWars2.Hero.Equipment.Dyes.Material.Vibrant = 1 -> GuildWars2.Hero.Equipment.Dyes.Material
GuildWars2.Hero.Equipment.DyeSlot
GuildWars2.Hero.Equipment.DyeSlot.<Clone>$() -> GuildWars2.Hero.Equipment.DyeSlot!
GuildWars2.Hero.Equipment.DyeSlot.ColorId.get -> int
GuildWars2.Hero.Equipment.DyeSlot.ColorId.init -> void
GuildWars2.Hero.Equipment.DyeSlot.DyeSlot() -> void
GuildWars2.Hero.Equipment.DyeSlot.Equals(GuildWars2.Hero.Equipment.DyeSlot? other) -> bool
GuildWars2.Hero.Equipment.DyeSlot.Material.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Material>
GuildWars2.Hero.Equipment.DyeSlot.Material.init -> void
GuildWars2.Hero.Equipment.EquipmentClient
GuildWars2.Hero.Equipment.EquipmentClient.Dyes.get -> GuildWars2.Hero.Equipment.Dyes.DyesClient!
GuildWars2.Hero.Equipment.EquipmentClient.EquipmentClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.EquipmentClient.Finishers.get -> GuildWars2.Hero.Equipment.Finishers.FinishersClient!
GuildWars2.Hero.Equipment.EquipmentClient.Gliders.get -> GuildWars2.Hero.Equipment.Gliders.GlidersClient!
GuildWars2.Hero.Equipment.EquipmentClient.JadeBots.get -> GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient!
GuildWars2.Hero.Equipment.EquipmentClient.MailCarriers.get -> GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient!
GuildWars2.Hero.Equipment.EquipmentClient.Miniatures.get -> GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient!
GuildWars2.Hero.Equipment.EquipmentClient.Mounts.get -> GuildWars2.Hero.Equipment.Mounts.MountsClient!
GuildWars2.Hero.Equipment.EquipmentClient.Novelties.get -> GuildWars2.Hero.Equipment.Novelties.NoveltiesClient!
GuildWars2.Hero.Equipment.EquipmentClient.Outfits.get -> GuildWars2.Hero.Equipment.Outfits.OutfitsClient!
GuildWars2.Hero.Equipment.EquipmentClient.Skiffs.get -> GuildWars2.Hero.Equipment.Skiffs.SkiffsClient!
GuildWars2.Hero.Equipment.EquipmentClient.Templates.get -> GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient!
GuildWars2.Hero.Equipment.EquipmentClient.Wardrobe.get -> GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient!
GuildWars2.Hero.Equipment.Finishers.Finisher
GuildWars2.Hero.Equipment.Finishers.Finisher.<Clone>$() -> GuildWars2.Hero.Equipment.Finishers.Finisher!
GuildWars2.Hero.Equipment.Finishers.Finisher.Equals(GuildWars2.Hero.Equipment.Finishers.Finisher? other) -> bool
GuildWars2.Hero.Equipment.Finishers.Finisher.Finisher() -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.IconHref.get -> string!
GuildWars2.Hero.Equipment.Finishers.Finisher.IconHref.init -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Finishers.Finisher.IconUrl.init -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.Id.get -> int
GuildWars2.Hero.Equipment.Finishers.Finisher.Id.init -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.LockedText.get -> string!
GuildWars2.Hero.Equipment.Finishers.Finisher.LockedText.init -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.Name.get -> string!
GuildWars2.Hero.Equipment.Finishers.Finisher.Name.init -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.Order.get -> int
GuildWars2.Hero.Equipment.Finishers.Finisher.Order.init -> void
GuildWars2.Hero.Equipment.Finishers.Finisher.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Equipment.Finishers.Finisher.UnlockItemIds.init -> void
GuildWars2.Hero.Equipment.Finishers.FinishersClient
GuildWars2.Hero.Equipment.Finishers.FinishersClient.FinishersClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Finishers.FinishersClient.GetFinisherById(int finisherId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Finishers.Finisher! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Finishers.FinishersClient.GetFinishers(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Finishers.Finisher!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Finishers.FinishersClient.GetFinishersByIds(System.Collections.Generic.IEnumerable<int>! finisherIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Finishers.Finisher!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Finishers.FinishersClient.GetFinishersByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Finishers.Finisher!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Finishers.FinishersClient.GetFinishersIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Finishers.FinishersClient.GetUnlockedFinishers(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.<Clone>$() -> GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher!
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Equals(GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher? other) -> bool
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Id.get -> int
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Id.init -> void
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Permanent.get -> bool
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Permanent.init -> void
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Quantity.get -> int?
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Quantity.init -> void
GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.UnlockedFinisher() -> void
GuildWars2.Hero.Equipment.Gliders.GlidersClient
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GetGliderSkinById(int gliderSkinId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Gliders.GliderSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GetGliderSkins(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Gliders.GliderSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GetGliderSkinsByIds(System.Collections.Generic.IEnumerable<int>! gliderSkinIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Gliders.GliderSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GetGliderSkinsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Gliders.GliderSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GetGliderSkinsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GetUnlockedGliderSkins(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Gliders.GlidersClient.GlidersClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin
GuildWars2.Hero.Equipment.Gliders.GliderSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Gliders.GliderSkin!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.DefaultDyeColorIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.DefaultDyeColorIds.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Description.get -> string!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Description.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Equals(GuildWars2.Hero.Equipment.Gliders.GliderSkin? other) -> bool
GuildWars2.Hero.Equipment.Gliders.GliderSkin.GliderSkin() -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.IconHref.get -> string!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.IconHref.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.IconUrl.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Id.get -> int
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Id.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Name.get -> string!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Name.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Order.get -> int
GuildWars2.Hero.Equipment.Gliders.GliderSkin.Order.init -> void
GuildWars2.Hero.Equipment.Gliders.GliderSkin.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Equipment.Gliders.GliderSkin.UnlockItemIds.init -> void
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.GetJadeBotSkinById(int jadeBotSkinId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.GetJadeBotSkins(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.GetJadeBotSkinsByIds(System.Collections.Generic.IEnumerable<int>! jadeBotSkinIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.GetJadeBotSkinsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.GetJadeBotSkinsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.GetUnlockedJadeBotSkins(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.JadeBots.JadeBotsClient.JadeBotsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.<Clone>$() -> GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin!
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Description.get -> string!
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Description.init -> void
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Equals(GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin? other) -> bool
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.GetChatLink() -> GuildWars2.Chat.ItemLink!
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Id.get -> int
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Id.init -> void
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.JadeBotSkin() -> void
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Name.get -> string!
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Name.init -> void
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.UnlockItemId.get -> int
GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.UnlockItemId.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.<Clone>$() -> GuildWars2.Hero.Equipment.MailCarriers.MailCarrier!
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Equals(GuildWars2.Hero.Equipment.MailCarriers.MailCarrier? other) -> bool
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Flags.get -> GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags!
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Flags.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.IconHref.get -> string!
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.IconHref.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.IconUrl.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Id.get -> int
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Id.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.MailCarrier() -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Name.get -> string!
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Name.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Order.get -> int
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Order.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.UnlockItemIds.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags
GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.Default.get -> bool
GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.Default.init -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.Equals(GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags? other) -> bool
GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.MailCarrierFlags() -> void
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.GetMailCarrierById(int mailCarrierId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.MailCarriers.MailCarrier! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.GetMailCarriers(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.MailCarriers.MailCarrier!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.GetMailCarriersByIds(System.Collections.Generic.IEnumerable<int>! mailCarrierIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.MailCarriers.MailCarrier!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.GetMailCarriersByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.MailCarriers.MailCarrier!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.GetMailCarriersIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.GetUnlockedMailCarriers(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.MailCarriers.MailCarriersClient.MailCarriersClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Material.Cloth = 1 -> GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Material.Fur = 4 -> GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Material.Leather = 2 -> GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Material.Metal = 3 -> GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Miniatures.Miniature
GuildWars2.Hero.Equipment.Miniatures.Miniature.<Clone>$() -> GuildWars2.Hero.Equipment.Miniatures.Miniature!
GuildWars2.Hero.Equipment.Miniatures.Miniature.Equals(GuildWars2.Hero.Equipment.Miniatures.Miniature? other) -> bool
GuildWars2.Hero.Equipment.Miniatures.Miniature.IconHref.get -> string!
GuildWars2.Hero.Equipment.Miniatures.Miniature.IconHref.init -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Miniatures.Miniature.IconUrl.init -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.Id.get -> int
GuildWars2.Hero.Equipment.Miniatures.Miniature.Id.init -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.ItemId.get -> int
GuildWars2.Hero.Equipment.Miniatures.Miniature.ItemId.init -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.LockedText.get -> string!
GuildWars2.Hero.Equipment.Miniatures.Miniature.LockedText.init -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.Miniature() -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.Name.get -> string!
GuildWars2.Hero.Equipment.Miniatures.Miniature.Name.init -> void
GuildWars2.Hero.Equipment.Miniatures.Miniature.Order.get -> int
GuildWars2.Hero.Equipment.Miniatures.Miniature.Order.init -> void
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.GetMiniatureById(int miniatureId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Miniatures.Miniature! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.GetMiniatures(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Miniatures.Miniature!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.GetMiniaturesByIds(System.Collections.Generic.IEnumerable<int>! miniatureIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Miniatures.Miniature!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.GetMiniaturesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Miniatures.Miniature!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.GetMiniaturesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.GetUnlockedMiniatures(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Miniatures.MiniaturesClient.MiniaturesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Mounts.Mount
GuildWars2.Hero.Equipment.Mounts.Mount.<Clone>$() -> GuildWars2.Hero.Equipment.Mounts.Mount!
GuildWars2.Hero.Equipment.Mounts.Mount.DefaultSkinId.get -> int
GuildWars2.Hero.Equipment.Mounts.Mount.DefaultSkinId.init -> void
GuildWars2.Hero.Equipment.Mounts.Mount.Equals(GuildWars2.Hero.Equipment.Mounts.Mount? other) -> bool
GuildWars2.Hero.Equipment.Mounts.Mount.Id.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName>
GuildWars2.Hero.Equipment.Mounts.Mount.Id.init -> void
GuildWars2.Hero.Equipment.Mounts.Mount.Mount() -> void
GuildWars2.Hero.Equipment.Mounts.Mount.Name.get -> string!
GuildWars2.Hero.Equipment.Mounts.Mount.Name.init -> void
GuildWars2.Hero.Equipment.Mounts.Mount.Skills.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Hero.Equipment.Mounts.SkillReference!>!
GuildWars2.Hero.Equipment.Mounts.Mount.Skills.init -> void
GuildWars2.Hero.Equipment.Mounts.Mount.SkinIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Equipment.Mounts.Mount.SkinIds.init -> void
GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Griffon = 6 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Jackal = 4 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Raptor = 1 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.RollerBeetle = 5 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.SiegeTurtle = 10 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Skiff = 9 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Skimmer = 3 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Skyscale = 8 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Springer = 2 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountName.Warclaw = 7 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Mounts.MountNameFormatter
GuildWars2.Hero.Equipment.Mounts.MountsClient
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountByName(GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName> mountName, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Mounts.Mount! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountNames(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName>>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMounts(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.Mount!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountsByNames(System.Collections.Generic.IEnumerable<GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName>>! mountNames, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.Mount!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountsByNames(System.Collections.Generic.IEnumerable<GuildWars2.Hero.Equipment.Mounts.MountName>! mountNames, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.Mount!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.Mount!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountSkinById(int mountSkinId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Mounts.MountSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountSkins(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.MountSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountSkinsByIds(System.Collections.Generic.IEnumerable<int>! mountSkinIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.MountSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountSkinsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Mounts.MountSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetMountSkinsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetUnlockedMounts(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName>>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.GetUnlockedMountSkins(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Mounts.MountsClient.MountsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin
GuildWars2.Hero.Equipment.Mounts.MountSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Mounts.MountSkin!
GuildWars2.Hero.Equipment.Mounts.MountSkin.DyeSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot!>!
GuildWars2.Hero.Equipment.Mounts.MountSkin.DyeSlots.init -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.Equals(GuildWars2.Hero.Equipment.Mounts.MountSkin? other) -> bool
GuildWars2.Hero.Equipment.Mounts.MountSkin.IconHref.get -> string!
GuildWars2.Hero.Equipment.Mounts.MountSkin.IconHref.init -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Mounts.MountSkin.IconUrl.init -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.Id.get -> int
GuildWars2.Hero.Equipment.Mounts.MountSkin.Id.init -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.Mount.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName>
GuildWars2.Hero.Equipment.Mounts.MountSkin.Mount.init -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.MountSkin() -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.Name.get -> string!
GuildWars2.Hero.Equipment.Mounts.MountSkin.Name.init -> void
GuildWars2.Hero.Equipment.Mounts.SkillReference
GuildWars2.Hero.Equipment.Mounts.SkillReference.<Clone>$() -> GuildWars2.Hero.Equipment.Mounts.SkillReference!
GuildWars2.Hero.Equipment.Mounts.SkillReference.Equals(GuildWars2.Hero.Equipment.Mounts.SkillReference? other) -> bool
GuildWars2.Hero.Equipment.Mounts.SkillReference.Id.get -> int
GuildWars2.Hero.Equipment.Mounts.SkillReference.Id.init -> void
GuildWars2.Hero.Equipment.Mounts.SkillReference.SkillReference() -> void
GuildWars2.Hero.Equipment.Mounts.SkillReference.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.SkillSlot>
GuildWars2.Hero.Equipment.Mounts.SkillReference.Slot.init -> void
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.GetNovelties(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Novelties.Novelty!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.GetNoveltiesByIds(System.Collections.Generic.IEnumerable<int>! noveltyIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Novelties.Novelty!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.GetNoveltiesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Novelties.Novelty!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.GetNoveltiesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.GetNoveltyById(int noveltyId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Novelties.Novelty! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.GetUnlockedNovelties(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Novelties.NoveltiesClient.NoveltiesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Novelties.Novelty
GuildWars2.Hero.Equipment.Novelties.Novelty.<Clone>$() -> GuildWars2.Hero.Equipment.Novelties.Novelty!
GuildWars2.Hero.Equipment.Novelties.Novelty.Description.get -> string!
GuildWars2.Hero.Equipment.Novelties.Novelty.Description.init -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.Equals(GuildWars2.Hero.Equipment.Novelties.Novelty? other) -> bool
GuildWars2.Hero.Equipment.Novelties.Novelty.IconHref.get -> string!
GuildWars2.Hero.Equipment.Novelties.Novelty.IconHref.init -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Novelties.Novelty.IconUrl.init -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.Id.get -> int
GuildWars2.Hero.Equipment.Novelties.Novelty.Id.init -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.Name.get -> string!
GuildWars2.Hero.Equipment.Novelties.Novelty.Name.init -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.Novelty() -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Novelties.NoveltyKind>
GuildWars2.Hero.Equipment.Novelties.Novelty.Slot.init -> void
GuildWars2.Hero.Equipment.Novelties.Novelty.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Equipment.Novelties.Novelty.UnlockItemIds.init -> void
GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.Chair = 1 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.HeldItem = 3 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.Miscellaneous = 4 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.Music = 2 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.Tonic = 5 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Outfits.Outfit
GuildWars2.Hero.Equipment.Outfits.Outfit.<Clone>$() -> GuildWars2.Hero.Equipment.Outfits.Outfit!
GuildWars2.Hero.Equipment.Outfits.Outfit.Equals(GuildWars2.Hero.Equipment.Outfits.Outfit? other) -> bool
GuildWars2.Hero.Equipment.Outfits.Outfit.GetChatLink() -> GuildWars2.Chat.OutfitLink!
GuildWars2.Hero.Equipment.Outfits.Outfit.IconHref.get -> string!
GuildWars2.Hero.Equipment.Outfits.Outfit.IconHref.init -> void
GuildWars2.Hero.Equipment.Outfits.Outfit.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Outfits.Outfit.IconUrl.init -> void
GuildWars2.Hero.Equipment.Outfits.Outfit.Id.get -> int
GuildWars2.Hero.Equipment.Outfits.Outfit.Id.init -> void
GuildWars2.Hero.Equipment.Outfits.Outfit.Name.get -> string!
GuildWars2.Hero.Equipment.Outfits.Outfit.Name.init -> void
GuildWars2.Hero.Equipment.Outfits.Outfit.Outfit() -> void
GuildWars2.Hero.Equipment.Outfits.Outfit.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Equipment.Outfits.Outfit.UnlockItemIds.init -> void
GuildWars2.Hero.Equipment.Outfits.OutfitsClient
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.GetOutfitById(int outfitId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Outfits.Outfit! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.GetOutfits(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Outfits.Outfit!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.GetOutfitsByIds(System.Collections.Generic.IEnumerable<int>! outfitIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Outfits.Outfit!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.GetOutfitsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Outfits.Outfit!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.GetOutfitsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.GetUnlockedOutfits(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Outfits.OutfitsClient.OutfitsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.SelectedAttributeCombination
GuildWars2.Hero.Equipment.SelectedAttributeCombination.<Clone>$() -> GuildWars2.Hero.Equipment.SelectedAttributeCombination!
GuildWars2.Hero.Equipment.SelectedAttributeCombination.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Hero.AttributeName, int>!
GuildWars2.Hero.Equipment.SelectedAttributeCombination.Attributes.init -> void
GuildWars2.Hero.Equipment.SelectedAttributeCombination.Equals(GuildWars2.Hero.Equipment.SelectedAttributeCombination? other) -> bool
GuildWars2.Hero.Equipment.SelectedAttributeCombination.Id.get -> int
GuildWars2.Hero.Equipment.SelectedAttributeCombination.Id.init -> void
GuildWars2.Hero.Equipment.SelectedAttributeCombination.SelectedAttributeCombination() -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.GetSkiffSkinById(int skiffSkinId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Skiffs.SkiffSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.GetSkiffSkins(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Skiffs.SkiffSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.GetSkiffSkinsByIds(System.Collections.Generic.IEnumerable<int>! skiffSkinIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Skiffs.SkiffSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.GetSkiffSkinsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Skiffs.SkiffSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.GetSkiffSkinsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.GetUnlockedSkiffSkins(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Skiffs.SkiffsClient.SkiffsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Skiffs.SkiffSkin!
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.DyeSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot!>!
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.DyeSlots.init -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.Equals(GuildWars2.Hero.Equipment.Skiffs.SkiffSkin? other) -> bool
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.IconHref.get -> string!
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.IconHref.init -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.IconUrl.get -> System.Uri!
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.IconUrl.init -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.Id.get -> int
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.Id.init -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.Name.get -> string!
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.Name.init -> void
GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.SkiffSkin() -> void
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.<Clone>$() -> GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem!
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.BoundLegendaryItem() -> void
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.Count.get -> int
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.Count.init -> void
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.Equals(GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem? other) -> bool
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.Id.get -> int
GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.Id.init -> void
GuildWars2.Hero.Equipment.Templates.CharacterEquipment
GuildWars2.Hero.Equipment.Templates.CharacterEquipment.<Clone>$() -> GuildWars2.Hero.Equipment.Templates.CharacterEquipment!
GuildWars2.Hero.Equipment.Templates.CharacterEquipment.CharacterEquipment() -> void
GuildWars2.Hero.Equipment.Templates.CharacterEquipment.Equals(GuildWars2.Hero.Equipment.Templates.CharacterEquipment? other) -> bool
GuildWars2.Hero.Equipment.Templates.CharacterEquipment.Items.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.Templates.EquipmentItem!>!
GuildWars2.Hero.Equipment.Templates.CharacterEquipment.Items.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem
GuildWars2.Hero.Equipment.Templates.EquipmentItem.<Clone>$() -> GuildWars2.Hero.Equipment.Templates.EquipmentItem!
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Binding.get -> GuildWars2.Extensible<GuildWars2.Hero.ItemBinding>
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Binding.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.BoundTo.get -> string!
GuildWars2.Hero.Equipment.Templates.EquipmentItem.BoundTo.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Count.get -> int?
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Count.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.DyeColorIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Equipment.Templates.EquipmentItem.DyeColorIds.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Equals(GuildWars2.Hero.Equipment.Templates.EquipmentItem? other) -> bool
GuildWars2.Hero.Equipment.Templates.EquipmentItem.EquipmentItem() -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.GetChatLink() -> GuildWars2.Chat.ItemLink!
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Id.get -> int
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Id.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.InfusionItemIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Equipment.Templates.EquipmentItem.InfusionItemIds.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Location.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Templates.EquipmentLocation>
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Location.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.SecondarySuffixItemId.get -> int?
GuildWars2.Hero.Equipment.Templates.EquipmentItem.SecondarySuffixItemId.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.SkinId.get -> int?
GuildWars2.Hero.Equipment.Templates.EquipmentItem.SkinId.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Equipment.Templates.EquipmentSlot>?
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Slot.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Stats.get -> GuildWars2.Hero.Equipment.SelectedAttributeCombination?
GuildWars2.Hero.Equipment.Templates.EquipmentItem.Stats.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.SuffixItemId.get -> int?
GuildWars2.Hero.Equipment.Templates.EquipmentItem.SuffixItemId.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentItem.TemplateNumbers.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Equipment.Templates.EquipmentItem.TemplateNumbers.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentLocation.Armory = 2 -> GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentLocation.Equipped = 1 -> GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentLocation.EquippedFromLegendaryArmory = 3 -> GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentLocation.LegendaryArmory = 4 -> GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Accessory1 = 1 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Accessory2 = 2 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Amulet = 3 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Axe = 4 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Backpack = 5 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Boots = 6 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Coat = 7 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.FishingBait = 8 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.FishingLure = 9 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.FishingRod = 10 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Gloves = 11 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Helm = 12 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.HelmAquatic = 13 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Leggings = 14 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Pick = 15 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.PowerCore = 16 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Relic = 17 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Ring1 = 18 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Ring2 = 19 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.SensoryArray = 20 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.ServiceChip = 21 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Shoulders = 22 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.Sickle = 23 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.WeaponA1 = 24 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.WeaponA2 = 25 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.WeaponAquaticA = 26 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.WeaponAquaticB = 27 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.WeaponB1 = 28 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.WeaponB2 = 29 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.<Clone>$() -> GuildWars2.Hero.Equipment.Templates.EquipmentTemplate!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.Equals(GuildWars2.Hero.Equipment.Templates.EquipmentTemplate? other) -> bool
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.EquipmentTemplate() -> void
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.Items.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.Templates.EquipmentItem!>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.Items.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.Name.get -> string!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.Name.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.PvpEquipment.get -> GuildWars2.Hero.Equipment.Templates.PvpEquipment!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.PvpEquipment.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.TabNumber.get -> int
GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.TabNumber.init -> void
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.EquipmentTemplatesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetActiveEquipmentTemplate(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Templates.EquipmentTemplate! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetBoundLegendaryItems(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetCharacterEquipment(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Templates.CharacterEquipment! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetEquipmentTemplate(string! characterName, int templateNumber, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Templates.EquipmentTemplate! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetEquipmentTemplateNumbers(string! characterName, string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.IReadOnlyList<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetEquipmentTemplates(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Templates.EquipmentTemplate!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetLegendaryItemById(int legendaryItemId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Templates.LegendaryItem! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetLegendaryItems(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Templates.LegendaryItem!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetLegendaryItemsByIds(System.Collections.Generic.IEnumerable<int>! legendaryItemIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Templates.LegendaryItem!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetLegendaryItemsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Templates.LegendaryItem!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.EquipmentTemplatesClient.GetLegendaryItemsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Templates.LegendaryItem
GuildWars2.Hero.Equipment.Templates.LegendaryItem.<Clone>$() -> GuildWars2.Hero.Equipment.Templates.LegendaryItem!
GuildWars2.Hero.Equipment.Templates.LegendaryItem.Equals(GuildWars2.Hero.Equipment.Templates.LegendaryItem? other) -> bool
GuildWars2.Hero.Equipment.Templates.LegendaryItem.Id.get -> int
GuildWars2.Hero.Equipment.Templates.LegendaryItem.Id.init -> void
GuildWars2.Hero.Equipment.Templates.LegendaryItem.LegendaryItem() -> void
GuildWars2.Hero.Equipment.Templates.LegendaryItem.MaxCount.get -> int
GuildWars2.Hero.Equipment.Templates.LegendaryItem.MaxCount.init -> void
GuildWars2.Hero.Equipment.Templates.PvpEquipment
GuildWars2.Hero.Equipment.Templates.PvpEquipment.<Clone>$() -> GuildWars2.Hero.Equipment.Templates.PvpEquipment!
GuildWars2.Hero.Equipment.Templates.PvpEquipment.AmuletId.get -> int?
GuildWars2.Hero.Equipment.Templates.PvpEquipment.AmuletId.init -> void
GuildWars2.Hero.Equipment.Templates.PvpEquipment.Equals(GuildWars2.Hero.Equipment.Templates.PvpEquipment? other) -> bool
GuildWars2.Hero.Equipment.Templates.PvpEquipment.PvpEquipment() -> void
GuildWars2.Hero.Equipment.Templates.PvpEquipment.RuneId.get -> int?
GuildWars2.Hero.Equipment.Templates.PvpEquipment.RuneId.init -> void
GuildWars2.Hero.Equipment.Templates.PvpEquipment.SigilIds.get -> System.Collections.Generic.IReadOnlyList<int?>!
GuildWars2.Hero.Equipment.Templates.PvpEquipment.SigilIds.init -> void
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.ArmorSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.ArmorSkin(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin! original) -> void
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.DyeSlots.get -> GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo?
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.DyeSlots.init -> void
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.WeightClass.get -> GuildWars2.Extensible<GuildWars2.Hero.WeightClass>
GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.WeightClass.init -> void
GuildWars2.Hero.Equipment.Wardrobe.AxeSkin
GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.AxeSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.AxeSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin
GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.BackpackSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.BootsSkin
GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.BootsSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.BootsSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.CoatSkin
GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.CoatSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.CoatSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin
GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.DaggerSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo!
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.AsuraFemale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.AsuraFemale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.AsuraMale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.AsuraMale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.CharrFemale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.CharrFemale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.CharrMale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.CharrMale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.Default.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>!
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.Default.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.DyeSlotInfo() -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.Equals(GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.HumanFemale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.HumanFemale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.HumanMale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.HumanMale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.NornFemale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.NornFemale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.NornMale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.NornMale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.SylvariFemale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.SylvariFemale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.SylvariMale.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Equipment.DyeSlot?>?
GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.SylvariMale.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Description.get -> string!
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Description.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.EquipmentSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.EquipmentSkin(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin! original) -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Flags.get -> GuildWars2.Hero.Equipment.Wardrobe.SkinFlags!
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Flags.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.GetChatLink() -> GuildWars2.Chat.SkinLink!
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.IconHref.get -> string?
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.IconHref.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.IconUrl.get -> System.Uri?
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.IconUrl.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Id.get -> int
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Id.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Name.get -> string!
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Name.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Races.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>!
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Races.init -> void
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Rarity.get -> GuildWars2.Extensible<GuildWars2.Items.Rarity>
GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Rarity.init -> void
GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin
GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.FishingToolSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.FocusSkin
GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.FocusSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.FocusSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin
GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.ForagingToolSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin
GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.GatheringToolSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.GatheringToolSkin(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin! original) -> void
GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin
GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.GlovesSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin
GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.GreatswordSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.HammerSkin
GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.HammerSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.HammerSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin
GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.HarpoonGunSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin
GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.HelmAquaticSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.HelmSkin
GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.HelmSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.HelmSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin
GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.LargeBundleSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin
GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.LeggingsSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin
GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.LoggingToolSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin
GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.LongbowSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.MaceSkin
GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.MaceSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.MaceSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin
GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.MiningToolSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.PistolSkin
GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.PistolSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.PistolSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.RifleSkin
GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.RifleSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.RifleSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin
GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.ScepterSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin
GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.ShieldSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin
GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.ShortbowSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin
GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.ShouldersSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.Equals(GuildWars2.Hero.Equipment.Wardrobe.SkinFlags? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.HideIfLocked.get -> bool
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.HideIfLocked.init -> void
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.NoCost.get -> bool
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.NoCost.init -> void
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.OverrideRarity.get -> bool
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.OverrideRarity.init -> void
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.ShowInWardrobe.get -> bool
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.ShowInWardrobe.init -> void
GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.SkinFlags() -> void
GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin
GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.SmallBundleSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.SpearSkin
GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.SpearSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.SpearSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.StaffSkin
GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.StaffSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.StaffSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.SwordSkin
GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.SwordSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.SwordSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.TorchSkin
GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.TorchSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.TorchSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ToySkin
GuildWars2.Hero.Equipment.Wardrobe.ToySkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ToySkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ToySkin.ToySkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin
GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.ToyTwoHandedSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.TridentSkin
GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.TridentSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.TridentSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetSkinById(int skinId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetSkinsBulk(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetSkinsBulk(System.Collections.Generic.IEnumerable<int>! skinIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetSkinsByIds(System.Collections.Generic.IEnumerable<int>! skinIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetSkinsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetSkinsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.GetUnlockedSkins(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Equipment.Wardrobe.WardrobeClient.WardrobeClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin
GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin? other) -> bool
GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.WarhornSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin
GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.DamageType.get -> GuildWars2.Extensible<GuildWars2.Items.DamageType>
GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.DamageType.init -> void
GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.WeaponSkin() -> void
GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.WeaponSkin(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin! original) -> void
GuildWars2.Hero.HeroClient
GuildWars2.Hero.HeroClient.Account.get -> GuildWars2.Hero.Accounts.AccountClient!
GuildWars2.Hero.HeroClient.Achievements.get -> GuildWars2.Hero.Achievements.AchievementsClient!
GuildWars2.Hero.HeroClient.Bank.get -> GuildWars2.Hero.Banking.BankClient!
GuildWars2.Hero.HeroClient.Builds.get -> GuildWars2.Hero.Builds.BuildsClient!
GuildWars2.Hero.HeroClient.Crafting.get -> GuildWars2.Hero.Crafting.CraftingClient!
GuildWars2.Hero.HeroClient.Emotes.get -> GuildWars2.Hero.Emotes.EmotesClient!
GuildWars2.Hero.HeroClient.Equipment.get -> GuildWars2.Hero.Equipment.EquipmentClient!
GuildWars2.Hero.HeroClient.HeroClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.HeroClient.Inventory.get -> GuildWars2.Hero.Inventories.InventoryClient!
GuildWars2.Hero.HeroClient.Masteries.get -> GuildWars2.Hero.Masteries.MasteriesClient!
GuildWars2.Hero.HeroClient.Races.get -> GuildWars2.Hero.Races.RacesClient!
GuildWars2.Hero.HeroClient.StoryJournal.get -> GuildWars2.Hero.StoryJournal.StoryJournalClient!
GuildWars2.Hero.HeroClient.Training.get -> GuildWars2.Hero.Training.TrainingClient!
GuildWars2.Hero.HeroClient.Wallet.get -> GuildWars2.Hero.Wallet.WalletClient!
GuildWars2.Hero.Inventories.Bag
GuildWars2.Hero.Inventories.Bag.<Clone>$() -> GuildWars2.Hero.Inventories.Bag!
GuildWars2.Hero.Inventories.Bag.Bag() -> void
GuildWars2.Hero.Inventories.Bag.Equals(GuildWars2.Hero.Inventories.Bag? other) -> bool
GuildWars2.Hero.Inventories.Bag.Id.get -> int
GuildWars2.Hero.Inventories.Bag.Id.init -> void
GuildWars2.Hero.Inventories.Bag.Inventory.get -> GuildWars2.Hero.Inventories.Inventory!
GuildWars2.Hero.Inventories.Bag.Inventory.init -> void
GuildWars2.Hero.Inventories.Bag.Size.get -> int
GuildWars2.Hero.Inventories.Bag.Size.init -> void
GuildWars2.Hero.Inventories.Baggage
GuildWars2.Hero.Inventories.Baggage.<Clone>$() -> GuildWars2.Hero.Inventories.Baggage!
GuildWars2.Hero.Inventories.Baggage.Baggage() -> void
GuildWars2.Hero.Inventories.Baggage.Bags.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Inventories.Bag?>!
GuildWars2.Hero.Inventories.Baggage.Bags.init -> void
GuildWars2.Hero.Inventories.Baggage.Equals(GuildWars2.Hero.Inventories.Baggage? other) -> bool
GuildWars2.Hero.Inventories.Inventory
GuildWars2.Hero.Inventories.Inventory.<Clone>$() -> GuildWars2.Hero.Inventories.Inventory!
GuildWars2.Hero.Inventories.Inventory.Equals(GuildWars2.Hero.Inventories.Inventory? other) -> bool
GuildWars2.Hero.Inventories.Inventory.Inventory() -> void
GuildWars2.Hero.Inventories.Inventory.Items.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Inventories.ItemSlot?>!
GuildWars2.Hero.Inventories.Inventory.Items.init -> void
GuildWars2.Hero.Inventories.InventoryClient
GuildWars2.Hero.Inventories.InventoryClient.GetInventory(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Inventories.Baggage! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Inventories.InventoryClient.GetSharedInventory(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Inventories.Inventory! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Inventories.InventoryClient.InventoryClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Inventories.ItemSlot
GuildWars2.Hero.Inventories.ItemSlot.<Clone>$() -> GuildWars2.Hero.Inventories.ItemSlot!
GuildWars2.Hero.Inventories.ItemSlot.Binding.get -> GuildWars2.Extensible<GuildWars2.Hero.ItemBinding>
GuildWars2.Hero.Inventories.ItemSlot.Binding.init -> void
GuildWars2.Hero.Inventories.ItemSlot.BoundTo.get -> string!
GuildWars2.Hero.Inventories.ItemSlot.BoundTo.init -> void
GuildWars2.Hero.Inventories.ItemSlot.Charges.get -> int?
GuildWars2.Hero.Inventories.ItemSlot.Charges.init -> void
GuildWars2.Hero.Inventories.ItemSlot.Count.get -> int
GuildWars2.Hero.Inventories.ItemSlot.Count.init -> void
GuildWars2.Hero.Inventories.ItemSlot.DyeColorIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Inventories.ItemSlot.DyeColorIds.init -> void
GuildWars2.Hero.Inventories.ItemSlot.Equals(GuildWars2.Hero.Inventories.ItemSlot? other) -> bool
GuildWars2.Hero.Inventories.ItemSlot.GetChatLink() -> GuildWars2.Chat.ItemLink!
GuildWars2.Hero.Inventories.ItemSlot.Id.get -> int
GuildWars2.Hero.Inventories.ItemSlot.Id.init -> void
GuildWars2.Hero.Inventories.ItemSlot.InfusionItemIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Inventories.ItemSlot.InfusionItemIds.init -> void
GuildWars2.Hero.Inventories.ItemSlot.ItemSlot() -> void
GuildWars2.Hero.Inventories.ItemSlot.SecondarySuffixItemId.get -> int?
GuildWars2.Hero.Inventories.ItemSlot.SecondarySuffixItemId.init -> void
GuildWars2.Hero.Inventories.ItemSlot.SkinId.get -> int?
GuildWars2.Hero.Inventories.ItemSlot.SkinId.init -> void
GuildWars2.Hero.Inventories.ItemSlot.Stats.get -> GuildWars2.Hero.Equipment.SelectedAttributeCombination?
GuildWars2.Hero.Inventories.ItemSlot.Stats.init -> void
GuildWars2.Hero.Inventories.ItemSlot.SuffixItemId.get -> int?
GuildWars2.Hero.Inventories.ItemSlot.SuffixItemId.init -> void
GuildWars2.Hero.ItemBinding
GuildWars2.Hero.ItemBinding.Account = 1 -> GuildWars2.Hero.ItemBinding
GuildWars2.Hero.ItemBinding.Character = 2 -> GuildWars2.Hero.ItemBinding
GuildWars2.Hero.ItemBinding.None = 0 -> GuildWars2.Hero.ItemBinding
GuildWars2.Hero.Masteries.MasteriesClient
GuildWars2.Hero.Masteries.MasteriesClient.GetMasteryPointsProgress(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Masteries.MasteryPointsProgress! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Masteries.MasteriesClient.GetMasteryTrackById(int masteryTrackId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Masteries.MasteryTrack! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Masteries.MasteriesClient.GetMasteryTrackProgress(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Masteries.MasteryTrackProgress!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Masteries.MasteriesClient.GetMasteryTracks(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Masteries.MasteryTrack!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Masteries.MasteriesClient.GetMasteryTracksByIds(System.Collections.Generic.IEnumerable<int>! masteryTrackIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Masteries.MasteryTrack!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Masteries.MasteriesClient.GetMasteryTracksIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Masteries.MasteriesClient.MasteriesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Masteries.Mastery
GuildWars2.Hero.Masteries.Mastery.<Clone>$() -> GuildWars2.Hero.Masteries.Mastery!
GuildWars2.Hero.Masteries.Mastery.Description.get -> string!
GuildWars2.Hero.Masteries.Mastery.Description.init -> void
GuildWars2.Hero.Masteries.Mastery.Equals(GuildWars2.Hero.Masteries.Mastery? other) -> bool
GuildWars2.Hero.Masteries.Mastery.ExperienceCost.get -> int
GuildWars2.Hero.Masteries.Mastery.ExperienceCost.init -> void
GuildWars2.Hero.Masteries.Mastery.IconHref.get -> string!
GuildWars2.Hero.Masteries.Mastery.IconHref.init -> void
GuildWars2.Hero.Masteries.Mastery.IconUrl.get -> System.Uri!
GuildWars2.Hero.Masteries.Mastery.IconUrl.init -> void
GuildWars2.Hero.Masteries.Mastery.Instruction.get -> string!
GuildWars2.Hero.Masteries.Mastery.Instruction.init -> void
GuildWars2.Hero.Masteries.Mastery.Mastery() -> void
GuildWars2.Hero.Masteries.Mastery.Name.get -> string!
GuildWars2.Hero.Masteries.Mastery.Name.init -> void
GuildWars2.Hero.Masteries.Mastery.PointCost.get -> int
GuildWars2.Hero.Masteries.Mastery.PointCost.init -> void
GuildWars2.Hero.Masteries.MasteryPointsProgress
GuildWars2.Hero.Masteries.MasteryPointsProgress.<Clone>$() -> GuildWars2.Hero.Masteries.MasteryPointsProgress!
GuildWars2.Hero.Masteries.MasteryPointsProgress.Equals(GuildWars2.Hero.Masteries.MasteryPointsProgress? other) -> bool
GuildWars2.Hero.Masteries.MasteryPointsProgress.MasteryPointsProgress() -> void
GuildWars2.Hero.Masteries.MasteryPointsProgress.Totals.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Hero.Masteries.MasteryPointsTotal!>!
GuildWars2.Hero.Masteries.MasteryPointsProgress.Totals.init -> void
GuildWars2.Hero.Masteries.MasteryPointsProgress.Unlocked.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Hero.Masteries.MasteryPointsProgress.Unlocked.init -> void
GuildWars2.Hero.Masteries.MasteryPointsTotal
GuildWars2.Hero.Masteries.MasteryPointsTotal.<Clone>$() -> GuildWars2.Hero.Masteries.MasteryPointsTotal!
GuildWars2.Hero.Masteries.MasteryPointsTotal.Available.get -> int
GuildWars2.Hero.Masteries.MasteryPointsTotal.Earned.get -> int
GuildWars2.Hero.Masteries.MasteryPointsTotal.Earned.init -> void
GuildWars2.Hero.Masteries.MasteryPointsTotal.Equals(GuildWars2.Hero.Masteries.MasteryPointsTotal? other) -> bool
GuildWars2.Hero.Masteries.MasteryPointsTotal.MasteryPointsTotal() -> void
GuildWars2.Hero.Masteries.MasteryPointsTotal.Region.get -> GuildWars2.Extensible<GuildWars2.Hero.Masteries.MasteryRegionName>
GuildWars2.Hero.Masteries.MasteryPointsTotal.Region.init -> void
GuildWars2.Hero.Masteries.MasteryPointsTotal.Spent.get -> int
GuildWars2.Hero.Masteries.MasteryPointsTotal.Spent.init -> void
GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Desert = 3 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Jade = 5 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Maguuma = 2 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Sky = 6 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Tundra = 4 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Tyria = 1 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryRegionName.Unknown = 0 -> GuildWars2.Hero.Masteries.MasteryRegionName
GuildWars2.Hero.Masteries.MasteryTrack
GuildWars2.Hero.Masteries.MasteryTrack.<Clone>$() -> GuildWars2.Hero.Masteries.MasteryTrack!
GuildWars2.Hero.Masteries.MasteryTrack.BackgroundHref.get -> string!
GuildWars2.Hero.Masteries.MasteryTrack.BackgroundHref.init -> void
GuildWars2.Hero.Masteries.MasteryTrack.Equals(GuildWars2.Hero.Masteries.MasteryTrack? other) -> bool
GuildWars2.Hero.Masteries.MasteryTrack.Id.get -> int
GuildWars2.Hero.Masteries.MasteryTrack.Id.init -> void
GuildWars2.Hero.Masteries.MasteryTrack.Masteries.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Masteries.Mastery!>!
GuildWars2.Hero.Masteries.MasteryTrack.Masteries.init -> void
GuildWars2.Hero.Masteries.MasteryTrack.MasteryTrack() -> void
GuildWars2.Hero.Masteries.MasteryTrack.Name.get -> string!
GuildWars2.Hero.Masteries.MasteryTrack.Name.init -> void
GuildWars2.Hero.Masteries.MasteryTrack.Order.get -> int
GuildWars2.Hero.Masteries.MasteryTrack.Order.init -> void
GuildWars2.Hero.Masteries.MasteryTrack.Region.get -> GuildWars2.Extensible<GuildWars2.Hero.Masteries.MasteryRegionName>
GuildWars2.Hero.Masteries.MasteryTrack.Region.init -> void
GuildWars2.Hero.Masteries.MasteryTrack.Requirement.get -> string!
GuildWars2.Hero.Masteries.MasteryTrack.Requirement.init -> void
GuildWars2.Hero.Masteries.MasteryTrackProgress
GuildWars2.Hero.Masteries.MasteryTrackProgress.<Clone>$() -> GuildWars2.Hero.Masteries.MasteryTrackProgress!
GuildWars2.Hero.Masteries.MasteryTrackProgress.Equals(GuildWars2.Hero.Masteries.MasteryTrackProgress? other) -> bool
GuildWars2.Hero.Masteries.MasteryTrackProgress.Id.get -> int
GuildWars2.Hero.Masteries.MasteryTrackProgress.Id.init -> void
GuildWars2.Hero.Masteries.MasteryTrackProgress.Level.get -> int
GuildWars2.Hero.Masteries.MasteryTrackProgress.Level.init -> void
GuildWars2.Hero.Masteries.MasteryTrackProgress.MasteryTrackProgress() -> void
GuildWars2.Hero.Offhand
GuildWars2.Hero.Offhand.Dagger = 2 -> GuildWars2.Hero.Offhand
GuildWars2.Hero.Offhand.None = 0 -> GuildWars2.Hero.Offhand
GuildWars2.Hero.Offhand.Nothing = 1 -> GuildWars2.Hero.Offhand
GuildWars2.Hero.Offhand.Pistol = 3 -> GuildWars2.Hero.Offhand
GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Elementalist = 6 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Engineer = 3 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Guardian = 1 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Mesmer = 7 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Necromancer = 8 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Ranger = 4 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Revenant = 9 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Thief = 5 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.ProfessionName.Warrior = 2 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.RaceName
GuildWars2.Hero.RaceName.Asura = 1 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.RaceName.Charr = 2 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.RaceName.Human = 3 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.RaceName.Norn = 4 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.RaceName.Sylvari = 5 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.Races.Race
GuildWars2.Hero.Races.Race.<Clone>$() -> GuildWars2.Hero.Races.Race!
GuildWars2.Hero.Races.Race.Equals(GuildWars2.Hero.Races.Race? other) -> bool
GuildWars2.Hero.Races.Race.Id.get -> GuildWars2.Extensible<GuildWars2.Hero.RaceName>
GuildWars2.Hero.Races.Race.Id.init -> void
GuildWars2.Hero.Races.Race.Name.get -> string!
GuildWars2.Hero.Races.Race.Name.init -> void
GuildWars2.Hero.Races.Race.Race() -> void
GuildWars2.Hero.Races.Race.SkillIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Races.Race.SkillIds.init -> void
GuildWars2.Hero.Races.RacesClient
GuildWars2.Hero.Races.RacesClient.GetRaceByName(GuildWars2.Extensible<GuildWars2.Hero.RaceName> raceName, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Races.Race! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Races.RacesClient.GetRaces(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Races.Race!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Races.RacesClient.GetRacesByNames(System.Collections.Generic.IEnumerable<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>! raceNames, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Races.Race!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Races.RacesClient.GetRacesByNames(System.Collections.Generic.IEnumerable<GuildWars2.Hero.RaceName>! raceNames, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Races.Race!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Races.RacesClient.GetRacesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Races.Race!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Races.RacesClient.GetRacesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Races.RacesClient.RacesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.<Clone>$() -> GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.BackgroundStoryAnswer() -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Description.get -> string!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Description.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Equals(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer? other) -> bool
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Id.get -> string!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Id.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Journal.get -> string!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Journal.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Professions.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Professions.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.QuestionId.get -> int
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.QuestionId.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Races.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Races.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Title.get -> string!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Title.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.<Clone>$() -> GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.AnswerIds.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.AnswerIds.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.BackgroundStoryQuestion() -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Description.get -> string!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Description.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Equals(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion? other) -> bool
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Id.get -> int
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Id.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Order.get -> int
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Order.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Professions.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Professions.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Races.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Races.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Title.get -> string!
GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Title.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory
GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.<Clone>$() -> GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory!
GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.AnswerIds.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.AnswerIds.init -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.CharacterBackgroundStory() -> void
GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.Equals(GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.Chapter
GuildWars2.Hero.StoryJournal.Stories.Chapter.<Clone>$() -> GuildWars2.Hero.StoryJournal.Stories.Chapter!
GuildWars2.Hero.StoryJournal.Stories.Chapter.Chapter() -> void
GuildWars2.Hero.StoryJournal.Stories.Chapter.Equals(GuildWars2.Hero.StoryJournal.Stories.Chapter? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.Chapter.Name.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Chapter.Name.init -> void
GuildWars2.Hero.StoryJournal.Stories.Objective
GuildWars2.Hero.StoryJournal.Stories.Objective.<Clone>$() -> GuildWars2.Hero.StoryJournal.Stories.Objective!
GuildWars2.Hero.StoryJournal.Stories.Objective.Active.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Objective.Active.init -> void
GuildWars2.Hero.StoryJournal.Stories.Objective.Complete.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Objective.Complete.init -> void
GuildWars2.Hero.StoryJournal.Stories.Objective.Equals(GuildWars2.Hero.StoryJournal.Stories.Objective? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.Objective.Objective() -> void
GuildWars2.Hero.StoryJournal.Stories.Story
GuildWars2.Hero.StoryJournal.Stories.Story.<Clone>$() -> GuildWars2.Hero.StoryJournal.Stories.Story!
GuildWars2.Hero.StoryJournal.Stories.Story.Chapters.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.StoryJournal.Stories.Chapter!>!
GuildWars2.Hero.StoryJournal.Stories.Story.Chapters.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Description.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Story.Description.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Equals(GuildWars2.Hero.StoryJournal.Stories.Story? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.Story.Flags.get -> GuildWars2.Hero.StoryJournal.Stories.StoryFlags!
GuildWars2.Hero.StoryJournal.Stories.Story.Flags.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Id.get -> int
GuildWars2.Hero.StoryJournal.Stories.Story.Id.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Level.get -> int
GuildWars2.Hero.StoryJournal.Stories.Story.Level.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Name.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Story.Name.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Order.get -> int
GuildWars2.Hero.StoryJournal.Stories.Story.Order.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Races.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>!
GuildWars2.Hero.StoryJournal.Stories.Story.Races.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Story() -> void
GuildWars2.Hero.StoryJournal.Stories.Story.StorylineId.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Story.StorylineId.init -> void
GuildWars2.Hero.StoryJournal.Stories.Story.Timeline.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Story.Timeline.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryFlags
GuildWars2.Hero.StoryJournal.Stories.StoryFlags.Equals(GuildWars2.Hero.StoryJournal.Stories.StoryFlags? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.StoryFlags.RequiresUnlock.get -> bool
GuildWars2.Hero.StoryJournal.Stories.StoryFlags.RequiresUnlock.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryFlags.StoryFlags() -> void
GuildWars2.Hero.StoryJournal.Stories.Storyline
GuildWars2.Hero.StoryJournal.Stories.Storyline.<Clone>$() -> GuildWars2.Hero.StoryJournal.Stories.Storyline!
GuildWars2.Hero.StoryJournal.Stories.Storyline.Equals(GuildWars2.Hero.StoryJournal.Stories.Storyline? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.Storyline.Id.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Storyline.Id.init -> void
GuildWars2.Hero.StoryJournal.Stories.Storyline.Name.get -> string!
GuildWars2.Hero.StoryJournal.Stories.Storyline.Name.init -> void
GuildWars2.Hero.StoryJournal.Stories.Storyline.Order.get -> int
GuildWars2.Hero.StoryJournal.Stories.Storyline.Order.init -> void
GuildWars2.Hero.StoryJournal.Stories.Storyline.StoryIds.get -> System.Collections.Generic.List<int>!
GuildWars2.Hero.StoryJournal.Stories.Storyline.StoryIds.init -> void
GuildWars2.Hero.StoryJournal.Stories.Storyline.Storyline() -> void
GuildWars2.Hero.StoryJournal.Stories.StoryStep
GuildWars2.Hero.StoryJournal.Stories.StoryStep.<Clone>$() -> GuildWars2.Hero.StoryJournal.Stories.StoryStep!
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Equals(GuildWars2.Hero.StoryJournal.Stories.StoryStep? other) -> bool
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Id.get -> int
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Id.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Level.get -> int
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Level.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Name.get -> string!
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Name.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Objectives.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.StoryJournal.Stories.Objective!>!
GuildWars2.Hero.StoryJournal.Stories.StoryStep.Objectives.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryStep.StoryId.get -> int
GuildWars2.Hero.StoryJournal.Stories.StoryStep.StoryId.init -> void
GuildWars2.Hero.StoryJournal.Stories.StoryStep.StoryStep() -> void
GuildWars2.Hero.StoryJournal.StoryJournalClient
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryAnswerById(string! answerId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryAnswers(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryAnswersByIds(System.Collections.Generic.IEnumerable<string!>! answerIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryAnswersByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryAnswersIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryQuestionById(int questionId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryQuestions(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryQuestionsByIds(System.Collections.Generic.IEnumerable<int>! questionIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryQuestionsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetBackgroundStoryQuestionsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetCharacterBackgroundStory(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetCompletedStorySteps(string! characterName, string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStories(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.Story!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoriesByIds(System.Collections.Generic.IEnumerable<int>! storyIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.Story!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoriesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.Story!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoriesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoryById(int storyId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.StoryJournal.Stories.Story! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStorylineById(string! storylineId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.StoryJournal.Stories.Storyline! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStorylines(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.Storyline!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStorylinesByIds(System.Collections.Generic.IEnumerable<string!>! storylineIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.Storyline!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStorylinesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.Storyline!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStorylinesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoryStepById(int storyStepId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.StoryJournal.Stories.StoryStep! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStorySteps(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.StoryStep!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoryStepsByIds(System.Collections.Generic.IEnumerable<int>! storyStepIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.StoryStep!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoryStepsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.StoryJournal.Stories.StoryStep!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.GetStoryStepsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.StoryJournal.StoryJournalClient.StoryJournalClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Training.CharacterTraining
GuildWars2.Hero.Training.CharacterTraining.<Clone>$() -> GuildWars2.Hero.Training.CharacterTraining!
GuildWars2.Hero.Training.CharacterTraining.CharacterTraining() -> void
GuildWars2.Hero.Training.CharacterTraining.Equals(GuildWars2.Hero.Training.CharacterTraining? other) -> bool
GuildWars2.Hero.Training.CharacterTraining.Training.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Training.TrainingProgress!>!
GuildWars2.Hero.Training.CharacterTraining.Training.init -> void
GuildWars2.Hero.Training.Objectives.SkillObjective
GuildWars2.Hero.Training.Objectives.SkillObjective.Equals(GuildWars2.Hero.Training.Objectives.SkillObjective? other) -> bool
GuildWars2.Hero.Training.Objectives.SkillObjective.SkillId.get -> int
GuildWars2.Hero.Training.Objectives.SkillObjective.SkillId.init -> void
GuildWars2.Hero.Training.Objectives.SkillObjective.SkillObjective() -> void
GuildWars2.Hero.Training.Objectives.TraitObjective
GuildWars2.Hero.Training.Objectives.TraitObjective.Equals(GuildWars2.Hero.Training.Objectives.TraitObjective? other) -> bool
GuildWars2.Hero.Training.Objectives.TraitObjective.TraitId.get -> int
GuildWars2.Hero.Training.Objectives.TraitObjective.TraitId.init -> void
GuildWars2.Hero.Training.Objectives.TraitObjective.TraitObjective() -> void
GuildWars2.Hero.Training.Profession
GuildWars2.Hero.Training.Profession.<Clone>$() -> GuildWars2.Hero.Training.Profession!
GuildWars2.Hero.Training.Profession.BigIconHref.get -> string!
GuildWars2.Hero.Training.Profession.BigIconHref.init -> void
GuildWars2.Hero.Training.Profession.BigIconUrl.get -> System.Uri!
GuildWars2.Hero.Training.Profession.BigIconUrl.init -> void
GuildWars2.Hero.Training.Profession.Code.get -> int
GuildWars2.Hero.Training.Profession.Code.init -> void
GuildWars2.Hero.Training.Profession.Equals(GuildWars2.Hero.Training.Profession? other) -> bool
GuildWars2.Hero.Training.Profession.Flags.get -> GuildWars2.Hero.Training.ProfessionFlags!
GuildWars2.Hero.Training.Profession.Flags.init -> void
GuildWars2.Hero.Training.Profession.IconHref.get -> string!
GuildWars2.Hero.Training.Profession.IconHref.init -> void
GuildWars2.Hero.Training.Profession.IconUrl.get -> System.Uri!
GuildWars2.Hero.Training.Profession.IconUrl.init -> void
GuildWars2.Hero.Training.Profession.Id.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>
GuildWars2.Hero.Training.Profession.Id.init -> void
GuildWars2.Hero.Training.Profession.Name.get -> string!
GuildWars2.Hero.Training.Profession.Name.init -> void
GuildWars2.Hero.Training.Profession.Profession() -> void
GuildWars2.Hero.Training.Profession.Skills.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Training.SkillSummary!>!
GuildWars2.Hero.Training.Profession.Skills.init -> void
GuildWars2.Hero.Training.Profession.SkillsByPalette.get -> System.Collections.Generic.IDictionary<int, int>!
GuildWars2.Hero.Training.Profession.SkillsByPalette.init -> void
GuildWars2.Hero.Training.Profession.SpecializationIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Hero.Training.Profession.SpecializationIds.init -> void
GuildWars2.Hero.Training.Profession.Training.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Training.Training!>!
GuildWars2.Hero.Training.Profession.Training.init -> void
GuildWars2.Hero.Training.Profession.Weapons.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.Builds.WeaponType>, GuildWars2.Hero.Training.WeaponProficiency!>!
GuildWars2.Hero.Training.Profession.Weapons.init -> void
GuildWars2.Hero.Training.ProfessionFlags
GuildWars2.Hero.Training.ProfessionFlags.Equals(GuildWars2.Hero.Training.ProfessionFlags? other) -> bool
GuildWars2.Hero.Training.ProfessionFlags.NoRacialSkills.get -> bool
GuildWars2.Hero.Training.ProfessionFlags.NoRacialSkills.init -> void
GuildWars2.Hero.Training.ProfessionFlags.NoWeaponSwap.get -> bool
GuildWars2.Hero.Training.ProfessionFlags.NoWeaponSwap.init -> void
GuildWars2.Hero.Training.ProfessionFlags.ProfessionFlags() -> void
GuildWars2.Hero.Training.Skills.EliteSkillSummary
GuildWars2.Hero.Training.Skills.EliteSkillSummary.EliteSkillSummary() -> void
GuildWars2.Hero.Training.Skills.EliteSkillSummary.Equals(GuildWars2.Hero.Training.Skills.EliteSkillSummary? other) -> bool
GuildWars2.Hero.Training.Skills.HealingSkillSummary
GuildWars2.Hero.Training.Skills.HealingSkillSummary.Equals(GuildWars2.Hero.Training.Skills.HealingSkillSummary? other) -> bool
GuildWars2.Hero.Training.Skills.HealingSkillSummary.HealingSkillSummary() -> void
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Attunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Attunement.init -> void
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Equals(GuildWars2.Hero.Training.Skills.ProfessionSkillSummary? other) -> bool
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.ProfessionSkillSummary() -> void
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Source.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>?
GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Source.init -> void
GuildWars2.Hero.Training.Skills.UtilitySkillSummary
GuildWars2.Hero.Training.Skills.UtilitySkillSummary.Equals(GuildWars2.Hero.Training.Skills.UtilitySkillSummary? other) -> bool
GuildWars2.Hero.Training.Skills.UtilitySkillSummary.UtilitySkillSummary() -> void
GuildWars2.Hero.Training.SkillSummary
GuildWars2.Hero.Training.SkillSummary.Id.get -> int
GuildWars2.Hero.Training.SkillSummary.Id.init -> void
GuildWars2.Hero.Training.SkillSummary.SkillSummary() -> void
GuildWars2.Hero.Training.SkillSummary.SkillSummary(GuildWars2.Hero.Training.SkillSummary! original) -> void
GuildWars2.Hero.Training.SkillSummary.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.SkillSlot>
GuildWars2.Hero.Training.SkillSummary.Slot.init -> void
GuildWars2.Hero.Training.Training
GuildWars2.Hero.Training.Training.<Clone>$() -> GuildWars2.Hero.Training.Training!
GuildWars2.Hero.Training.Training.Category.get -> GuildWars2.Extensible<GuildWars2.Hero.Training.TrainingCategory>
GuildWars2.Hero.Training.Training.Category.init -> void
GuildWars2.Hero.Training.Training.Equals(GuildWars2.Hero.Training.Training? other) -> bool
GuildWars2.Hero.Training.Training.Id.get -> int
GuildWars2.Hero.Training.Training.Id.init -> void
GuildWars2.Hero.Training.Training.Name.get -> string!
GuildWars2.Hero.Training.Training.Name.init -> void
GuildWars2.Hero.Training.Training.Track.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Training.TrainingObjective!>!
GuildWars2.Hero.Training.Training.Track.init -> void
GuildWars2.Hero.Training.Training.Training() -> void
GuildWars2.Hero.Training.TrainingCategory
GuildWars2.Hero.Training.TrainingCategory.EliteSpecializations = 3 -> GuildWars2.Hero.Training.TrainingCategory
GuildWars2.Hero.Training.TrainingCategory.Skills = 1 -> GuildWars2.Hero.Training.TrainingCategory
GuildWars2.Hero.Training.TrainingCategory.Specializations = 2 -> GuildWars2.Hero.Training.TrainingCategory
GuildWars2.Hero.Training.TrainingClient
GuildWars2.Hero.Training.TrainingClient.GetCharacterTraining(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Training.CharacterTraining! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.GetProfessionByName(GuildWars2.Extensible<GuildWars2.Hero.ProfessionName> professionName, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Training.Profession! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.GetProfessionNames(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.GetProfessions(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Training.Profession!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.GetProfessionsByNames(System.Collections.Generic.IEnumerable<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>! professionNames, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Training.Profession!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.GetProfessionsByNames(System.Collections.Generic.IEnumerable<GuildWars2.Hero.ProfessionName>! professionNames, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Training.Profession!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.GetProfessionsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Training.Profession!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Training.TrainingClient.TrainingClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.Training.TrainingObjective
GuildWars2.Hero.Training.TrainingObjective.Cost.get -> int
GuildWars2.Hero.Training.TrainingObjective.Cost.init -> void
GuildWars2.Hero.Training.TrainingObjective.TrainingObjective() -> void
GuildWars2.Hero.Training.TrainingObjective.TrainingObjective(GuildWars2.Hero.Training.TrainingObjective! original) -> void
GuildWars2.Hero.Training.TrainingProgress
GuildWars2.Hero.Training.TrainingProgress.<Clone>$() -> GuildWars2.Hero.Training.TrainingProgress!
GuildWars2.Hero.Training.TrainingProgress.Done.get -> bool
GuildWars2.Hero.Training.TrainingProgress.Done.init -> void
GuildWars2.Hero.Training.TrainingProgress.Equals(GuildWars2.Hero.Training.TrainingProgress? other) -> bool
GuildWars2.Hero.Training.TrainingProgress.Id.get -> int
GuildWars2.Hero.Training.TrainingProgress.Id.init -> void
GuildWars2.Hero.Training.TrainingProgress.Spent.get -> int
GuildWars2.Hero.Training.TrainingProgress.Spent.init -> void
GuildWars2.Hero.Training.TrainingProgress.TrainingProgress() -> void
GuildWars2.Hero.Training.WeaponFlags
GuildWars2.Hero.Training.WeaponFlags.Aquatic.get -> bool
GuildWars2.Hero.Training.WeaponFlags.Aquatic.init -> void
GuildWars2.Hero.Training.WeaponFlags.Equals(GuildWars2.Hero.Training.WeaponFlags? other) -> bool
GuildWars2.Hero.Training.WeaponFlags.Mainhand.get -> bool
GuildWars2.Hero.Training.WeaponFlags.Mainhand.init -> void
GuildWars2.Hero.Training.WeaponFlags.Offhand.get -> bool
GuildWars2.Hero.Training.WeaponFlags.Offhand.init -> void
GuildWars2.Hero.Training.WeaponFlags.TwoHand.get -> bool
GuildWars2.Hero.Training.WeaponFlags.TwoHand.init -> void
GuildWars2.Hero.Training.WeaponFlags.WeaponFlags() -> void
GuildWars2.Hero.Training.WeaponProficiency
GuildWars2.Hero.Training.WeaponProficiency.<Clone>$() -> GuildWars2.Hero.Training.WeaponProficiency!
GuildWars2.Hero.Training.WeaponProficiency.Equals(GuildWars2.Hero.Training.WeaponProficiency? other) -> bool
GuildWars2.Hero.Training.WeaponProficiency.Flags.get -> GuildWars2.Hero.Training.WeaponFlags!
GuildWars2.Hero.Training.WeaponProficiency.Flags.init -> void
GuildWars2.Hero.Training.WeaponProficiency.RequiredSpecialization.get -> int?
GuildWars2.Hero.Training.WeaponProficiency.RequiredSpecialization.init -> void
GuildWars2.Hero.Training.WeaponProficiency.Skills.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Hero.Training.WeaponSkill!>!
GuildWars2.Hero.Training.WeaponProficiency.Skills.init -> void
GuildWars2.Hero.Training.WeaponProficiency.WeaponProficiency() -> void
GuildWars2.Hero.Training.WeaponSkill
GuildWars2.Hero.Training.WeaponSkill.<Clone>$() -> GuildWars2.Hero.Training.WeaponSkill!
GuildWars2.Hero.Training.WeaponSkill.Attunement.get -> GuildWars2.Extensible<GuildWars2.Hero.Attunement>?
GuildWars2.Hero.Training.WeaponSkill.Attunement.init -> void
GuildWars2.Hero.Training.WeaponSkill.Equals(GuildWars2.Hero.Training.WeaponSkill? other) -> bool
GuildWars2.Hero.Training.WeaponSkill.Id.get -> int
GuildWars2.Hero.Training.WeaponSkill.Id.init -> void
GuildWars2.Hero.Training.WeaponSkill.Offhand.get -> GuildWars2.Extensible<GuildWars2.Hero.Offhand>?
GuildWars2.Hero.Training.WeaponSkill.Offhand.init -> void
GuildWars2.Hero.Training.WeaponSkill.Slot.get -> GuildWars2.Extensible<GuildWars2.Hero.Builds.SkillSlot>
GuildWars2.Hero.Training.WeaponSkill.Slot.init -> void
GuildWars2.Hero.Training.WeaponSkill.WeaponSkill() -> void
GuildWars2.Hero.Wallet.Currency
GuildWars2.Hero.Wallet.Currency.<Clone>$() -> GuildWars2.Hero.Wallet.Currency!
GuildWars2.Hero.Wallet.Currency.Currency() -> void
GuildWars2.Hero.Wallet.Currency.Description.get -> string!
GuildWars2.Hero.Wallet.Currency.Description.init -> void
GuildWars2.Hero.Wallet.Currency.Equals(GuildWars2.Hero.Wallet.Currency? other) -> bool
GuildWars2.Hero.Wallet.Currency.IconHref.get -> string!
GuildWars2.Hero.Wallet.Currency.IconHref.init -> void
GuildWars2.Hero.Wallet.Currency.IconUrl.get -> System.Uri!
GuildWars2.Hero.Wallet.Currency.IconUrl.init -> void
GuildWars2.Hero.Wallet.Currency.Id.get -> int
GuildWars2.Hero.Wallet.Currency.Id.init -> void
GuildWars2.Hero.Wallet.Currency.Name.get -> string!
GuildWars2.Hero.Wallet.Currency.Name.init -> void
GuildWars2.Hero.Wallet.Currency.Order.get -> int
GuildWars2.Hero.Wallet.Currency.Order.init -> void
GuildWars2.Hero.Wallet.CurrencyAmount
GuildWars2.Hero.Wallet.CurrencyAmount.<Clone>$() -> GuildWars2.Hero.Wallet.CurrencyAmount!
GuildWars2.Hero.Wallet.CurrencyAmount.Amount.get -> int
GuildWars2.Hero.Wallet.CurrencyAmount.Amount.init -> void
GuildWars2.Hero.Wallet.CurrencyAmount.CurrencyAmount() -> void
GuildWars2.Hero.Wallet.CurrencyAmount.CurrencyId.get -> int
GuildWars2.Hero.Wallet.CurrencyAmount.CurrencyId.init -> void
GuildWars2.Hero.Wallet.CurrencyAmount.Equals(GuildWars2.Hero.Wallet.CurrencyAmount? other) -> bool
GuildWars2.Hero.Wallet.WalletClient
GuildWars2.Hero.Wallet.WalletClient.GetCurrencies(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Wallet.Currency!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Wallet.WalletClient.GetCurrenciesByIds(System.Collections.Generic.IEnumerable<int>! currencyIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Wallet.Currency!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Wallet.WalletClient.GetCurrenciesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Wallet.Currency!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Wallet.WalletClient.GetCurrenciesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Wallet.WalletClient.GetCurrencyById(int currencyId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Hero.Wallet.Currency! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Wallet.WalletClient.GetWallet(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Hero.Wallet.CurrencyAmount!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Hero.Wallet.WalletClient.WalletClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Hero.WeightClass
GuildWars2.Hero.WeightClass.Clothing = 1 -> GuildWars2.Hero.WeightClass
GuildWars2.Hero.WeightClass.Heavy = 4 -> GuildWars2.Hero.WeightClass
GuildWars2.Hero.WeightClass.Light = 2 -> GuildWars2.Hero.WeightClass
GuildWars2.Hero.WeightClass.Medium = 3 -> GuildWars2.Hero.WeightClass
GuildWars2.Http.BadResponseException
GuildWars2.Http.BadResponseException.BadResponseException() -> void
GuildWars2.Http.BadResponseException.BadResponseException(string? message) -> void
GuildWars2.Http.BadResponseException.BadResponseException(string? message, System.Exception? innerException) -> void
GuildWars2.Http.HttpStatusCodeEx
GuildWars2.Http.QueryBuilder
GuildWars2.Http.QueryBuilder.Add(string! key, string! value) -> void
GuildWars2.Http.QueryBuilder.Build() -> string!
GuildWars2.Http.QueryBuilder.QueryBuilder() -> void
GuildWars2.Http.WebLinks.LinkHeader
GuildWars2.Http.WebLinks.LinkHeader.LinkHeader(System.Collections.Generic.IEnumerable<GuildWars2.Http.WebLinks.LinkValue!>! links) -> void
GuildWars2.Http.WebLinks.LinkHeader.Links.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Http.WebLinks.LinkValue!>!
GuildWars2.Http.WebLinks.LinkValue
GuildWars2.Http.WebLinks.LinkValue.LinkValue(string! target, string! relationType) -> void
GuildWars2.Http.WebLinks.LinkValue.RelationType.get -> string!
GuildWars2.Http.WebLinks.LinkValue.Target.get -> string!
GuildWars2.Http.WebLinks.LinkValue.TargetUrl.get -> System.Uri!
GuildWars2.Hyperlink
GuildWars2.Hyperlink.Deconstruct(out string! url) -> void
GuildWars2.Hyperlink.Deconstruct(out System.Uri? uri) -> void
GuildWars2.Hyperlink.Equals(GuildWars2.Hyperlink other) -> bool
GuildWars2.Hyperlink.Hyperlink() -> void
GuildWars2.Hyperlink.Hyperlink(string! url) -> void
GuildWars2.Hyperlink.Hyperlink(System.Uri? uri) -> void
GuildWars2.Hyperlink.IsEmpty.get -> bool
GuildWars2.Hyperlink.Uri.get -> System.Uri?
GuildWars2.Hyperlink.Uri.init -> void
GuildWars2.Hyperlink.Url.get -> string!
GuildWars2.Hyperlink.Url.init -> void
GuildWars2.Items.Accessory
GuildWars2.Items.Accessory.Accessory() -> void
GuildWars2.Items.Accessory.Equals(GuildWars2.Items.Accessory? other) -> bool
GuildWars2.Items.Amulet
GuildWars2.Items.Amulet.Amulet() -> void
GuildWars2.Items.Amulet.Equals(GuildWars2.Items.Amulet? other) -> bool
GuildWars2.Items.AppearanceChanger
GuildWars2.Items.AppearanceChanger.AppearanceChanger() -> void
GuildWars2.Items.AppearanceChanger.Equals(GuildWars2.Items.AppearanceChanger? other) -> bool
GuildWars2.Items.Armor
GuildWars2.Items.Armor.Armor() -> void
GuildWars2.Items.Armor.Armor(GuildWars2.Items.Armor! original) -> void
GuildWars2.Items.Armor.AttributeAdjustment.get -> double
GuildWars2.Items.Armor.AttributeAdjustment.init -> void
GuildWars2.Items.Armor.AttributeCombinationId.get -> int?
GuildWars2.Items.Armor.AttributeCombinationId.init -> void
GuildWars2.Items.Armor.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.AttributeName>, int>!
GuildWars2.Items.Armor.Attributes.init -> void
GuildWars2.Items.Armor.Buff.get -> GuildWars2.Items.Buff?
GuildWars2.Items.Armor.Buff.init -> void
GuildWars2.Items.Armor.DefaultSkinId.get -> int
GuildWars2.Items.Armor.DefaultSkinId.init -> void
GuildWars2.Items.Armor.Defense.get -> int
GuildWars2.Items.Armor.Defense.init -> void
GuildWars2.Items.Armor.InfusionSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Items.InfusionSlot!>!
GuildWars2.Items.Armor.InfusionSlots.init -> void
GuildWars2.Items.Armor.StatChoices.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Items.Armor.StatChoices.init -> void
GuildWars2.Items.Armor.SuffixItemId.get -> int?
GuildWars2.Items.Armor.SuffixItemId.init -> void
GuildWars2.Items.Armor.UpgradeSlots.get -> System.Collections.Generic.IReadOnlyList<int?>!
GuildWars2.Items.Armor.WeightClass.get -> GuildWars2.Extensible<GuildWars2.Hero.WeightClass>
GuildWars2.Items.Armor.WeightClass.init -> void
GuildWars2.Items.Axe
GuildWars2.Items.Axe.Axe() -> void
GuildWars2.Items.Axe.Equals(GuildWars2.Items.Axe? other) -> bool
GuildWars2.Items.Backpack
GuildWars2.Items.Backpack.AttributeAdjustment.get -> double
GuildWars2.Items.Backpack.AttributeAdjustment.init -> void
GuildWars2.Items.Backpack.AttributeCombinationId.get -> int?
GuildWars2.Items.Backpack.AttributeCombinationId.init -> void
GuildWars2.Items.Backpack.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.AttributeName>, int>!
GuildWars2.Items.Backpack.Attributes.init -> void
GuildWars2.Items.Backpack.Backpack() -> void
GuildWars2.Items.Backpack.Buff.get -> GuildWars2.Items.Buff?
GuildWars2.Items.Backpack.Buff.init -> void
GuildWars2.Items.Backpack.DefaultSkinId.get -> int
GuildWars2.Items.Backpack.DefaultSkinId.init -> void
GuildWars2.Items.Backpack.Equals(GuildWars2.Items.Backpack? other) -> bool
GuildWars2.Items.Backpack.InfusionSlotCount.get -> int
GuildWars2.Items.Backpack.InfusionSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Items.InfusionSlot!>!
GuildWars2.Items.Backpack.InfusionSlots.init -> void
GuildWars2.Items.Backpack.StatChoices.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Items.Backpack.StatChoices.init -> void
GuildWars2.Items.Backpack.SuffixItemId.get -> int?
GuildWars2.Items.Backpack.SuffixItemId.init -> void
GuildWars2.Items.Backpack.UpgradesFrom.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradeSource!>!
GuildWars2.Items.Backpack.UpgradesFrom.init -> void
GuildWars2.Items.Backpack.UpgradesInto.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradePath!>!
GuildWars2.Items.Backpack.UpgradesInto.init -> void
GuildWars2.Items.Backpack.UpgradeSlotCount.get -> int
GuildWars2.Items.Backpack.UpgradeSlots.get -> System.Collections.Generic.IReadOnlyList<int?>!
GuildWars2.Items.Bag
GuildWars2.Items.Bag.Bag() -> void
GuildWars2.Items.Bag.Equals(GuildWars2.Items.Bag? other) -> bool
GuildWars2.Items.Bag.NoSellOrSort.get -> bool
GuildWars2.Items.Bag.NoSellOrSort.init -> void
GuildWars2.Items.Bag.Size.get -> int
GuildWars2.Items.Bag.Size.init -> void
GuildWars2.Items.BagSlotExpansion
GuildWars2.Items.BagSlotExpansion.BagSlotExpansion() -> void
GuildWars2.Items.BagSlotExpansion.Equals(GuildWars2.Items.BagSlotExpansion? other) -> bool
GuildWars2.Items.Bait
GuildWars2.Items.Bait.Bait() -> void
GuildWars2.Items.Bait.Equals(GuildWars2.Items.Bait? other) -> bool
GuildWars2.Items.BankTabExpansion
GuildWars2.Items.BankTabExpansion.BankTabExpansion() -> void
GuildWars2.Items.BankTabExpansion.Equals(GuildWars2.Items.BankTabExpansion? other) -> bool
GuildWars2.Items.BlackLionChest
GuildWars2.Items.BlackLionChest.BlackLionChest() -> void
GuildWars2.Items.BlackLionChest.Equals(GuildWars2.Items.BlackLionChest? other) -> bool
GuildWars2.Items.BlackLionChestKey
GuildWars2.Items.BlackLionChestKey.BlackLionChestKey() -> void
GuildWars2.Items.BlackLionChestKey.Equals(GuildWars2.Items.BlackLionChestKey? other) -> bool
GuildWars2.Items.Boots
GuildWars2.Items.Boots.Boots() -> void
GuildWars2.Items.Boots.Equals(GuildWars2.Items.Boots? other) -> bool
GuildWars2.Items.Booze
GuildWars2.Items.Booze.Booze() -> void
GuildWars2.Items.Booze.Equals(GuildWars2.Items.Booze? other) -> bool
GuildWars2.Items.Buff
GuildWars2.Items.Buff.<Clone>$() -> GuildWars2.Items.Buff!
GuildWars2.Items.Buff.Buff() -> void
GuildWars2.Items.Buff.Description.get -> string!
GuildWars2.Items.Buff.Description.init -> void
GuildWars2.Items.Buff.Equals(GuildWars2.Items.Buff? other) -> bool
GuildWars2.Items.Buff.SkillId.get -> int
GuildWars2.Items.Buff.SkillId.init -> void
GuildWars2.Items.BuildStorageExpansion
GuildWars2.Items.BuildStorageExpansion.BuildStorageExpansion() -> void
GuildWars2.Items.BuildStorageExpansion.Equals(GuildWars2.Items.BuildStorageExpansion? other) -> bool
GuildWars2.Items.BuildTemplateExpansion
GuildWars2.Items.BuildTemplateExpansion.BuildTemplateExpansion() -> void
GuildWars2.Items.BuildTemplateExpansion.Equals(GuildWars2.Items.BuildTemplateExpansion? other) -> bool
GuildWars2.Items.Coat
GuildWars2.Items.Coat.Coat() -> void
GuildWars2.Items.Coat.Equals(GuildWars2.Items.Coat? other) -> bool
GuildWars2.Items.Consumable
GuildWars2.Items.Consumable.Consumable() -> void
GuildWars2.Items.Consumable.Consumable(GuildWars2.Items.Consumable! original) -> void
GuildWars2.Items.Container
GuildWars2.Items.Container.Container() -> void
GuildWars2.Items.Container.Container(GuildWars2.Items.Container! original) -> void
GuildWars2.Items.ContentUnlocker
GuildWars2.Items.ContentUnlocker.ContentUnlocker() -> void
GuildWars2.Items.ContentUnlocker.Equals(GuildWars2.Items.ContentUnlocker? other) -> bool
GuildWars2.Items.ContractNpc
GuildWars2.Items.ContractNpc.ContractNpc() -> void
GuildWars2.Items.ContractNpc.Equals(GuildWars2.Items.ContractNpc? other) -> bool
GuildWars2.Items.CraftingMaterial
GuildWars2.Items.CraftingMaterial.CraftingMaterial() -> void
GuildWars2.Items.CraftingMaterial.Equals(GuildWars2.Items.CraftingMaterial? other) -> bool
GuildWars2.Items.CraftingMaterial.UpgradesInto.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradePath!>!
GuildWars2.Items.CraftingMaterial.UpgradesInto.init -> void
GuildWars2.Items.Currency
GuildWars2.Items.Currency.Currency() -> void
GuildWars2.Items.Currency.Equals(GuildWars2.Items.Currency? other) -> bool
GuildWars2.Items.Dagger
GuildWars2.Items.Dagger.Dagger() -> void
GuildWars2.Items.Dagger.Equals(GuildWars2.Items.Dagger? other) -> bool
GuildWars2.Items.DamageType
GuildWars2.Items.DamageType.Choking = 1 -> GuildWars2.Items.DamageType
GuildWars2.Items.DamageType.Fire = 2 -> GuildWars2.Items.DamageType
GuildWars2.Items.DamageType.Ice = 3 -> GuildWars2.Items.DamageType
GuildWars2.Items.DamageType.Lightning = 4 -> GuildWars2.Items.DamageType
GuildWars2.Items.DamageType.Physical = 0 -> GuildWars2.Items.DamageType
GuildWars2.Items.Dye
GuildWars2.Items.Dye.ColorId.get -> int
GuildWars2.Items.Dye.ColorId.init -> void
GuildWars2.Items.Dye.Dye() -> void
GuildWars2.Items.Dye.Equals(GuildWars2.Items.Dye? other) -> bool
GuildWars2.Items.Effect
GuildWars2.Items.Effect.<Clone>$() -> GuildWars2.Items.Effect!
GuildWars2.Items.Effect.ApplyCount.get -> int
GuildWars2.Items.Effect.ApplyCount.init -> void
GuildWars2.Items.Effect.Description.get -> string!
GuildWars2.Items.Effect.Description.init -> void
GuildWars2.Items.Effect.Duration.get -> System.TimeSpan
GuildWars2.Items.Effect.Duration.init -> void
GuildWars2.Items.Effect.Effect() -> void
GuildWars2.Items.Effect.Equals(GuildWars2.Items.Effect? other) -> bool
GuildWars2.Items.Effect.IconHref.get -> string!
GuildWars2.Items.Effect.IconHref.init -> void
GuildWars2.Items.Effect.IconUrl.get -> System.Uri?
GuildWars2.Items.Effect.IconUrl.init -> void
GuildWars2.Items.Effect.Name.get -> string!
GuildWars2.Items.Effect.Name.init -> void
GuildWars2.Items.EquipmentTemplateExpansion
GuildWars2.Items.EquipmentTemplateExpansion.Equals(GuildWars2.Items.EquipmentTemplateExpansion? other) -> bool
GuildWars2.Items.EquipmentTemplateExpansion.EquipmentTemplateExpansion() -> void
GuildWars2.Items.FishingRod
GuildWars2.Items.FishingRod.Equals(GuildWars2.Items.FishingRod? other) -> bool
GuildWars2.Items.FishingRod.FishingRod() -> void
GuildWars2.Items.Focus
GuildWars2.Items.Focus.Equals(GuildWars2.Items.Focus? other) -> bool
GuildWars2.Items.Focus.Focus() -> void
GuildWars2.Items.Food
GuildWars2.Items.Food.Effect.get -> GuildWars2.Items.Effect?
GuildWars2.Items.Food.Effect.init -> void
GuildWars2.Items.Food.Equals(GuildWars2.Items.Food? other) -> bool
GuildWars2.Items.Food.Food() -> void
GuildWars2.Items.GameType
GuildWars2.Items.GameType.Activity = 1 -> GuildWars2.Items.GameType
GuildWars2.Items.GameType.Dungeon = 2 -> GuildWars2.Items.GameType
GuildWars2.Items.GameType.Pve = 3 -> GuildWars2.Items.GameType
GuildWars2.Items.GameType.Pvp = 4 -> GuildWars2.Items.GameType
GuildWars2.Items.GameType.PvpLobby = 5 -> GuildWars2.Items.GameType
GuildWars2.Items.GameType.Wvw = 6 -> GuildWars2.Items.GameType
GuildWars2.Items.GatheringTool
GuildWars2.Items.GatheringTool.GatheringTool() -> void
GuildWars2.Items.GatheringTool.GatheringTool(GuildWars2.Items.GatheringTool! original) -> void
GuildWars2.Items.Gem
GuildWars2.Items.Gem.Equals(GuildWars2.Items.Gem? other) -> bool
GuildWars2.Items.Gem.Gem() -> void
GuildWars2.Items.GenericConsumable
GuildWars2.Items.GenericConsumable.Effect.get -> GuildWars2.Items.Effect?
GuildWars2.Items.GenericConsumable.Effect.init -> void
GuildWars2.Items.GenericConsumable.Equals(GuildWars2.Items.GenericConsumable? other) -> bool
GuildWars2.Items.GenericConsumable.GenericConsumable() -> void
GuildWars2.Items.GenericConsumable.GuildUpgradeId.get -> int?
GuildWars2.Items.GenericConsumable.GuildUpgradeId.init -> void
GuildWars2.Items.GiftBox
GuildWars2.Items.GiftBox.Equals(GuildWars2.Items.GiftBox? other) -> bool
GuildWars2.Items.GiftBox.GiftBox() -> void
GuildWars2.Items.Gizmo
GuildWars2.Items.Gizmo.Gizmo() -> void
GuildWars2.Items.Gizmo.Gizmo(GuildWars2.Items.Gizmo! original) -> void
GuildWars2.Items.Gizmo.GuildUpgradeId.get -> int?
GuildWars2.Items.Gizmo.GuildUpgradeId.init -> void
GuildWars2.Items.GliderSkinUnlocker
GuildWars2.Items.GliderSkinUnlocker.Equals(GuildWars2.Items.GliderSkinUnlocker? other) -> bool
GuildWars2.Items.GliderSkinUnlocker.GliderSkinUnlocker() -> void
GuildWars2.Items.Gloves
GuildWars2.Items.Gloves.Equals(GuildWars2.Items.Gloves? other) -> bool
GuildWars2.Items.Gloves.Gloves() -> void
GuildWars2.Items.Greatsword
GuildWars2.Items.Greatsword.Equals(GuildWars2.Items.Greatsword? other) -> bool
GuildWars2.Items.Greatsword.Greatsword() -> void
GuildWars2.Items.HalloweenConsumable
GuildWars2.Items.HalloweenConsumable.Equals(GuildWars2.Items.HalloweenConsumable? other) -> bool
GuildWars2.Items.HalloweenConsumable.HalloweenConsumable() -> void
GuildWars2.Items.Hammer
GuildWars2.Items.Hammer.Equals(GuildWars2.Items.Hammer? other) -> bool
GuildWars2.Items.Hammer.Hammer() -> void
GuildWars2.Items.HarpoonGun
GuildWars2.Items.HarpoonGun.Equals(GuildWars2.Items.HarpoonGun? other) -> bool
GuildWars2.Items.HarpoonGun.HarpoonGun() -> void
GuildWars2.Items.HarvestingSickle
GuildWars2.Items.HarvestingSickle.Equals(GuildWars2.Items.HarvestingSickle? other) -> bool
GuildWars2.Items.HarvestingSickle.HarvestingSickle() -> void
GuildWars2.Items.Helm
GuildWars2.Items.Helm.Equals(GuildWars2.Items.Helm? other) -> bool
GuildWars2.Items.Helm.Helm() -> void
GuildWars2.Items.HelmAquatic
GuildWars2.Items.HelmAquatic.Equals(GuildWars2.Items.HelmAquatic? other) -> bool
GuildWars2.Items.HelmAquatic.HelmAquatic() -> void
GuildWars2.Items.ICombatEquipment
GuildWars2.Items.ICombatEquipment.AttributeAdjustment.get -> double
GuildWars2.Items.ICombatEquipment.AttributeCombinationId.get -> int?
GuildWars2.Items.ICombatEquipment.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.AttributeName>, int>!
GuildWars2.Items.ICombatEquipment.Buff.get -> GuildWars2.Items.Buff?
GuildWars2.Items.ICombatEquipment.StatChoices.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Items.IInfusable
GuildWars2.Items.IInfusable.UpgradesInto.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradePath!>!
GuildWars2.Items.IInfused
GuildWars2.Items.IInfused.UpgradesFrom.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradeSource!>!
GuildWars2.Items.ImmediateContainer
GuildWars2.Items.ImmediateContainer.Equals(GuildWars2.Items.ImmediateContainer? other) -> bool
GuildWars2.Items.ImmediateContainer.ImmediateContainer() -> void
GuildWars2.Items.InfusionSlot
GuildWars2.Items.InfusionSlot.<Clone>$() -> GuildWars2.Items.InfusionSlot!
GuildWars2.Items.InfusionSlot.Equals(GuildWars2.Items.InfusionSlot? other) -> bool
GuildWars2.Items.InfusionSlot.Flags.get -> GuildWars2.Items.InfusionSlotFlags!
GuildWars2.Items.InfusionSlot.Flags.init -> void
GuildWars2.Items.InfusionSlot.InfusionSlot() -> void
GuildWars2.Items.InfusionSlot.ItemId.get -> int?
GuildWars2.Items.InfusionSlot.ItemId.init -> void
GuildWars2.Items.InfusionSlotFlags
GuildWars2.Items.InfusionSlotFlags.Enrichment.get -> bool
GuildWars2.Items.InfusionSlotFlags.Enrichment.init -> void
GuildWars2.Items.InfusionSlotFlags.Equals(GuildWars2.Items.InfusionSlotFlags? other) -> bool
GuildWars2.Items.InfusionSlotFlags.Infusion.get -> bool
GuildWars2.Items.InfusionSlotFlags.Infusion.init -> void
GuildWars2.Items.InfusionSlotFlags.InfusionSlotFlags() -> void
GuildWars2.Items.InfusionSlotUpgradeKind
GuildWars2.Items.InfusionSlotUpgradeKind.Attunement = 1 -> GuildWars2.Items.InfusionSlotUpgradeKind
GuildWars2.Items.InfusionSlotUpgradeKind.Infusion = 2 -> GuildWars2.Items.InfusionSlotUpgradeKind
GuildWars2.Items.InfusionSlotUpgradePath
GuildWars2.Items.InfusionSlotUpgradePath.<Clone>$() -> GuildWars2.Items.InfusionSlotUpgradePath!
GuildWars2.Items.InfusionSlotUpgradePath.Equals(GuildWars2.Items.InfusionSlotUpgradePath? other) -> bool
GuildWars2.Items.InfusionSlotUpgradePath.InfusionSlotUpgradePath() -> void
GuildWars2.Items.InfusionSlotUpgradePath.ItemId.get -> int
GuildWars2.Items.InfusionSlotUpgradePath.ItemId.init -> void
GuildWars2.Items.InfusionSlotUpgradePath.Upgrade.get -> GuildWars2.Extensible<GuildWars2.Items.InfusionSlotUpgradeKind>
GuildWars2.Items.InfusionSlotUpgradePath.Upgrade.init -> void
GuildWars2.Items.InfusionSlotUpgradeSource
GuildWars2.Items.InfusionSlotUpgradeSource.<Clone>$() -> GuildWars2.Items.InfusionSlotUpgradeSource!
GuildWars2.Items.InfusionSlotUpgradeSource.Equals(GuildWars2.Items.InfusionSlotUpgradeSource? other) -> bool
GuildWars2.Items.InfusionSlotUpgradeSource.InfusionSlotUpgradeSource() -> void
GuildWars2.Items.InfusionSlotUpgradeSource.ItemId.get -> int
GuildWars2.Items.InfusionSlotUpgradeSource.ItemId.init -> void
GuildWars2.Items.InfusionSlotUpgradeSource.Upgrade.get -> GuildWars2.Extensible<GuildWars2.Items.InfusionSlotUpgradeKind>
GuildWars2.Items.InfusionSlotUpgradeSource.Upgrade.init -> void
GuildWars2.Items.Item
GuildWars2.Items.Item.ChatLink.get -> string!
GuildWars2.Items.Item.ChatLink.init -> void
GuildWars2.Items.Item.Description.get -> string!
GuildWars2.Items.Item.Description.init -> void
GuildWars2.Items.Item.Flags.get -> GuildWars2.Items.ItemFlags!
GuildWars2.Items.Item.Flags.init -> void
GuildWars2.Items.Item.GameTypes.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Items.GameType>>!
GuildWars2.Items.Item.GameTypes.init -> void
GuildWars2.Items.Item.GetChatLink() -> GuildWars2.Chat.ItemLink!
GuildWars2.Items.Item.IconHref.get -> string?
GuildWars2.Items.Item.IconHref.init -> void
GuildWars2.Items.Item.IconUrl.get -> System.Uri?
GuildWars2.Items.Item.IconUrl.init -> void
GuildWars2.Items.Item.Id.get -> int
GuildWars2.Items.Item.Id.init -> void
GuildWars2.Items.Item.Item() -> void
GuildWars2.Items.Item.Item(GuildWars2.Items.Item! original) -> void
GuildWars2.Items.Item.Level.get -> int
GuildWars2.Items.Item.Level.init -> void
GuildWars2.Items.Item.Name.get -> string!
GuildWars2.Items.Item.Name.init -> void
GuildWars2.Items.Item.Rarity.get -> GuildWars2.Extensible<GuildWars2.Items.Rarity>
GuildWars2.Items.Item.Rarity.init -> void
GuildWars2.Items.Item.Restrictions.get -> GuildWars2.Items.ItemRestriction!
GuildWars2.Items.Item.Restrictions.init -> void
GuildWars2.Items.Item.VendorValue.get -> GuildWars2.Coin
GuildWars2.Items.Item.VendorValue.init -> void
GuildWars2.Items.ItemFlags
GuildWars2.Items.ItemFlags.AccountBindOnUse.get -> bool
GuildWars2.Items.ItemFlags.AccountBindOnUse.init -> void
GuildWars2.Items.ItemFlags.AccountBound.get -> bool
GuildWars2.Items.ItemFlags.AccountBound.init -> void
GuildWars2.Items.ItemFlags.Attuned.get -> bool
GuildWars2.Items.ItemFlags.Attuned.init -> void
GuildWars2.Items.ItemFlags.BulkConsume.get -> bool
GuildWars2.Items.ItemFlags.BulkConsume.init -> void
GuildWars2.Items.ItemFlags.DeleteWarning.get -> bool
GuildWars2.Items.ItemFlags.DeleteWarning.init -> void
GuildWars2.Items.ItemFlags.Equals(GuildWars2.Items.ItemFlags? other) -> bool
GuildWars2.Items.ItemFlags.HideSuffix.get -> bool
GuildWars2.Items.ItemFlags.HideSuffix.init -> void
GuildWars2.Items.ItemFlags.Infused.get -> bool
GuildWars2.Items.ItemFlags.Infused.init -> void
GuildWars2.Items.ItemFlags.ItemFlags() -> void
GuildWars2.Items.ItemFlags.MonsterOnly.get -> bool
GuildWars2.Items.ItemFlags.MonsterOnly.init -> void
GuildWars2.Items.ItemFlags.NoMysticForge.get -> bool
GuildWars2.Items.ItemFlags.NoMysticForge.init -> void
GuildWars2.Items.ItemFlags.NoSalvage.get -> bool
GuildWars2.Items.ItemFlags.NoSalvage.init -> void
GuildWars2.Items.ItemFlags.NoSell.get -> bool
GuildWars2.Items.ItemFlags.NoSell.init -> void
GuildWars2.Items.ItemFlags.NotUpgradeable.get -> bool
GuildWars2.Items.ItemFlags.NotUpgradeable.init -> void
GuildWars2.Items.ItemFlags.NoUnderwater.get -> bool
GuildWars2.Items.ItemFlags.NoUnderwater.init -> void
GuildWars2.Items.ItemFlags.SoulbindOnUse.get -> bool
GuildWars2.Items.ItemFlags.SoulbindOnUse.init -> void
GuildWars2.Items.ItemFlags.Soulbound.get -> bool
GuildWars2.Items.ItemFlags.Soulbound.init -> void
GuildWars2.Items.ItemFlags.Tonic.get -> bool
GuildWars2.Items.ItemFlags.Tonic.init -> void
GuildWars2.Items.ItemFlags.Unique.get -> bool
GuildWars2.Items.ItemFlags.Unique.init -> void
GuildWars2.Items.ItemRestriction
GuildWars2.Items.ItemRestriction.<Clone>$() -> GuildWars2.Items.ItemRestriction!
GuildWars2.Items.ItemRestriction.BodyTypes.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.BodyType>>!
GuildWars2.Items.ItemRestriction.BodyTypes.init -> void
GuildWars2.Items.ItemRestriction.Equals(GuildWars2.Items.ItemRestriction? other) -> bool
GuildWars2.Items.ItemRestriction.ItemRestriction() -> void
GuildWars2.Items.ItemRestriction.Other.get -> System.Collections.Generic.IReadOnlyList<string!>!
GuildWars2.Items.ItemRestriction.Other.init -> void
GuildWars2.Items.ItemRestriction.Professions.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>!
GuildWars2.Items.ItemRestriction.Professions.init -> void
GuildWars2.Items.ItemRestriction.Races.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>!
GuildWars2.Items.ItemRestriction.Races.init -> void
GuildWars2.Items.ItemsClient
GuildWars2.Items.ItemsClient.GetAttributeCombinationById(int attributeCombinationId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Items.Stats.AttributeCombination! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetAttributeCombinationByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Items.Stats.AttributeCombination!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetAttributeCombinations(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Items.Stats.AttributeCombination!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetAttributeCombinationsByIds(System.Collections.Generic.IEnumerable<int>! attributeCombinationIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Items.Stats.AttributeCombination!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetAttributeCombinationsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetItemById(int itemId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Items.Item! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetItemsBulk(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Items.Item! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetItemsBulk(System.Collections.Generic.IEnumerable<int>! itemIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Items.Item! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetItemsByIds(System.Collections.Generic.IEnumerable<int>! itemIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Items.Item!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetItemsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Items.Item!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.GetItemsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Items.ItemsClient.ItemsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Items.IUpgradable
GuildWars2.Items.IUpgradable.InfusionSlotCount.get -> int
GuildWars2.Items.IUpgradable.InfusionSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Items.InfusionSlot!>!
GuildWars2.Items.IUpgradable.SecondarySuffixItemId.get -> int?
GuildWars2.Items.IUpgradable.SuffixItemId.get -> int?
GuildWars2.Items.IUpgradable.UpgradeSlotCount.get -> int
GuildWars2.Items.IUpgradable.UpgradeSlots.get -> System.Collections.Generic.IReadOnlyList<int?>!
GuildWars2.Items.JadeBotSkinUnlocker
GuildWars2.Items.JadeBotSkinUnlocker.Equals(GuildWars2.Items.JadeBotSkinUnlocker? other) -> bool
GuildWars2.Items.JadeBotSkinUnlocker.JadeBotSkinUnlocker() -> void
GuildWars2.Items.JadeTechModule
GuildWars2.Items.JadeTechModule.Equals(GuildWars2.Items.JadeTechModule? other) -> bool
GuildWars2.Items.JadeTechModule.JadeTechModule() -> void
GuildWars2.Items.LargeBundle
GuildWars2.Items.LargeBundle.Equals(GuildWars2.Items.LargeBundle? other) -> bool
GuildWars2.Items.LargeBundle.LargeBundle() -> void
GuildWars2.Items.Leggings
GuildWars2.Items.Leggings.Equals(GuildWars2.Items.Leggings? other) -> bool
GuildWars2.Items.Leggings.Leggings() -> void
GuildWars2.Items.LoggingAxe
GuildWars2.Items.LoggingAxe.Equals(GuildWars2.Items.LoggingAxe? other) -> bool
GuildWars2.Items.LoggingAxe.LoggingAxe() -> void
GuildWars2.Items.Longbow
GuildWars2.Items.Longbow.Equals(GuildWars2.Items.Longbow? other) -> bool
GuildWars2.Items.Longbow.Longbow() -> void
GuildWars2.Items.Lure
GuildWars2.Items.Lure.Equals(GuildWars2.Items.Lure? other) -> bool
GuildWars2.Items.Lure.Lure() -> void
GuildWars2.Items.Mace
GuildWars2.Items.Mace.Equals(GuildWars2.Items.Mace? other) -> bool
GuildWars2.Items.Mace.Mace() -> void
GuildWars2.Items.Miniature
GuildWars2.Items.Miniature.Equals(GuildWars2.Items.Miniature? other) -> bool
GuildWars2.Items.Miniature.Miniature() -> void
GuildWars2.Items.Miniature.MiniatureId.get -> int
GuildWars2.Items.Miniature.MiniatureId.init -> void
GuildWars2.Items.MiniatureUnlocker
GuildWars2.Items.MiniatureUnlocker.Equals(GuildWars2.Items.MiniatureUnlocker? other) -> bool
GuildWars2.Items.MiniatureUnlocker.MiniatureUnlocker() -> void
GuildWars2.Items.MiningPick
GuildWars2.Items.MiningPick.Equals(GuildWars2.Items.MiningPick? other) -> bool
GuildWars2.Items.MiningPick.MiningPick() -> void
GuildWars2.Items.MistChampionSkinUnlocker
GuildWars2.Items.MistChampionSkinUnlocker.Equals(GuildWars2.Items.MistChampionSkinUnlocker? other) -> bool
GuildWars2.Items.MistChampionSkinUnlocker.MistChampionSkinUnlocker() -> void
GuildWars2.Items.MountLicense
GuildWars2.Items.MountLicense.Equals(GuildWars2.Items.MountLicense? other) -> bool
GuildWars2.Items.MountLicense.MountLicense() -> void
GuildWars2.Items.MountSkinUnlocker
GuildWars2.Items.MountSkinUnlocker.Equals(GuildWars2.Items.MountSkinUnlocker? other) -> bool
GuildWars2.Items.MountSkinUnlocker.MountSkinUnlocker() -> void
GuildWars2.Items.OutfitUnlocker
GuildWars2.Items.OutfitUnlocker.Equals(GuildWars2.Items.OutfitUnlocker? other) -> bool
GuildWars2.Items.OutfitUnlocker.OutfitUnlocker() -> void
GuildWars2.Items.Pistol
GuildWars2.Items.Pistol.Equals(GuildWars2.Items.Pistol? other) -> bool
GuildWars2.Items.Pistol.Pistol() -> void
GuildWars2.Items.PowerCore
GuildWars2.Items.PowerCore.Equals(GuildWars2.Items.PowerCore? other) -> bool
GuildWars2.Items.PowerCore.PowerCore() -> void
GuildWars2.Items.RandomUnlocker
GuildWars2.Items.RandomUnlocker.Equals(GuildWars2.Items.RandomUnlocker? other) -> bool
GuildWars2.Items.RandomUnlocker.RandomUnlocker() -> void
GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Ascended = 7 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Basic = 2 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Exotic = 6 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Fine = 3 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Junk = 1 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Legendary = 8 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Masterwork = 4 -> GuildWars2.Items.Rarity
GuildWars2.Items.Rarity.Rare = 5 -> GuildWars2.Items.Rarity
GuildWars2.Items.RarityColor
GuildWars2.Items.RecipeSheet
GuildWars2.Items.RecipeSheet.Equals(GuildWars2.Items.RecipeSheet? other) -> bool
GuildWars2.Items.RecipeSheet.ExtraRecipeIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Items.RecipeSheet.ExtraRecipeIds.init -> void
GuildWars2.Items.RecipeSheet.GetExtraRecipeChatLinks() -> System.Collections.Generic.IEnumerable<GuildWars2.Chat.RecipeLink!>!
GuildWars2.Items.RecipeSheet.GetRecipeChatLink() -> GuildWars2.Chat.RecipeLink!
GuildWars2.Items.RecipeSheet.RecipeId.get -> int
GuildWars2.Items.RecipeSheet.RecipeId.init -> void
GuildWars2.Items.RecipeSheet.RecipeSheet() -> void
GuildWars2.Items.Relic
GuildWars2.Items.Relic.Equals(GuildWars2.Items.Relic? other) -> bool
GuildWars2.Items.Relic.Relic() -> void
GuildWars2.Items.RentableContractNpc
GuildWars2.Items.RentableContractNpc.Equals(GuildWars2.Items.RentableContractNpc? other) -> bool
GuildWars2.Items.RentableContractNpc.RentableContractNpc() -> void
GuildWars2.Items.Rifle
GuildWars2.Items.Rifle.Equals(GuildWars2.Items.Rifle? other) -> bool
GuildWars2.Items.Rifle.Rifle() -> void
GuildWars2.Items.Ring
GuildWars2.Items.Ring.Equals(GuildWars2.Items.Ring? other) -> bool
GuildWars2.Items.Ring.Ring() -> void
GuildWars2.Items.Ring.UpgradesFrom.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradeSource!>!
GuildWars2.Items.Ring.UpgradesFrom.init -> void
GuildWars2.Items.Ring.UpgradesInto.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradePath!>!
GuildWars2.Items.Ring.UpgradesInto.init -> void
GuildWars2.Items.Rune
GuildWars2.Items.Rune.Bonuses.get -> System.Collections.Generic.IReadOnlyList<string!>?
GuildWars2.Items.Rune.Bonuses.init -> void
GuildWars2.Items.Rune.Equals(GuildWars2.Items.Rune? other) -> bool
GuildWars2.Items.Rune.Rune() -> void
GuildWars2.Items.SalvageTool
GuildWars2.Items.SalvageTool.Charges.get -> int
GuildWars2.Items.SalvageTool.Charges.init -> void
GuildWars2.Items.SalvageTool.Equals(GuildWars2.Items.SalvageTool? other) -> bool
GuildWars2.Items.SalvageTool.SalvageTool() -> void
GuildWars2.Items.SalvageTool.Unbreakable.get -> bool
GuildWars2.Items.Scepter
GuildWars2.Items.Scepter.Equals(GuildWars2.Items.Scepter? other) -> bool
GuildWars2.Items.Scepter.Scepter() -> void
GuildWars2.Items.Service
GuildWars2.Items.Service.Effect.get -> GuildWars2.Items.Effect?
GuildWars2.Items.Service.Effect.init -> void
GuildWars2.Items.Service.Equals(GuildWars2.Items.Service? other) -> bool
GuildWars2.Items.Service.GuildUpgradeId.get -> int?
GuildWars2.Items.Service.GuildUpgradeId.init -> void
GuildWars2.Items.Service.Service() -> void
GuildWars2.Items.SharedInventorySlot
GuildWars2.Items.SharedInventorySlot.Equals(GuildWars2.Items.SharedInventorySlot? other) -> bool
GuildWars2.Items.SharedInventorySlot.SharedInventorySlot() -> void
GuildWars2.Items.Shield
GuildWars2.Items.Shield.Equals(GuildWars2.Items.Shield? other) -> bool
GuildWars2.Items.Shield.Shield() -> void
GuildWars2.Items.Shortbow
GuildWars2.Items.Shortbow.Equals(GuildWars2.Items.Shortbow? other) -> bool
GuildWars2.Items.Shortbow.Shortbow() -> void
GuildWars2.Items.Shoulders
GuildWars2.Items.Shoulders.Equals(GuildWars2.Items.Shoulders? other) -> bool
GuildWars2.Items.Shoulders.Shoulders() -> void
GuildWars2.Items.Sigil
GuildWars2.Items.Sigil.Equals(GuildWars2.Items.Sigil? other) -> bool
GuildWars2.Items.Sigil.Sigil() -> void
GuildWars2.Items.SmallBundle
GuildWars2.Items.SmallBundle.Equals(GuildWars2.Items.SmallBundle? other) -> bool
GuildWars2.Items.SmallBundle.SmallBundle() -> void
GuildWars2.Items.Spear
GuildWars2.Items.Spear.Equals(GuildWars2.Items.Spear? other) -> bool
GuildWars2.Items.Spear.Spear() -> void
GuildWars2.Items.Staff
GuildWars2.Items.Staff.Equals(GuildWars2.Items.Staff? other) -> bool
GuildWars2.Items.Staff.Staff() -> void
GuildWars2.Items.Stats.Attribute
GuildWars2.Items.Stats.Attribute.<Clone>$() -> GuildWars2.Items.Stats.Attribute!
GuildWars2.Items.Stats.Attribute.Attribute() -> void
GuildWars2.Items.Stats.Attribute.Equals(GuildWars2.Items.Stats.Attribute? other) -> bool
GuildWars2.Items.Stats.Attribute.Multiplier.get -> double
GuildWars2.Items.Stats.Attribute.Multiplier.init -> void
GuildWars2.Items.Stats.Attribute.Name.get -> GuildWars2.Extensible<GuildWars2.Hero.AttributeName>
GuildWars2.Items.Stats.Attribute.Name.init -> void
GuildWars2.Items.Stats.Attribute.Value.get -> int
GuildWars2.Items.Stats.Attribute.Value.init -> void
GuildWars2.Items.Stats.AttributeCombination
GuildWars2.Items.Stats.AttributeCombination.<Clone>$() -> GuildWars2.Items.Stats.AttributeCombination!
GuildWars2.Items.Stats.AttributeCombination.AttributeCombination() -> void
GuildWars2.Items.Stats.AttributeCombination.Attributes.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.Stats.Attribute!>!
GuildWars2.Items.Stats.AttributeCombination.Attributes.init -> void
GuildWars2.Items.Stats.AttributeCombination.Equals(GuildWars2.Items.Stats.AttributeCombination? other) -> bool
GuildWars2.Items.Stats.AttributeCombination.Id.get -> int
GuildWars2.Items.Stats.AttributeCombination.Id.init -> void
GuildWars2.Items.Stats.AttributeCombination.Name.get -> string!
GuildWars2.Items.Stats.AttributeCombination.Name.init -> void
GuildWars2.Items.StorageExpander
GuildWars2.Items.StorageExpander.Equals(GuildWars2.Items.StorageExpander? other) -> bool
GuildWars2.Items.StorageExpander.StorageExpander() -> void
GuildWars2.Items.Sword
GuildWars2.Items.Sword.Equals(GuildWars2.Items.Sword? other) -> bool
GuildWars2.Items.Sword.Sword() -> void
GuildWars2.Items.TeleportToFriend
GuildWars2.Items.TeleportToFriend.Equals(GuildWars2.Items.TeleportToFriend? other) -> bool
GuildWars2.Items.TeleportToFriend.TeleportToFriend() -> void
GuildWars2.Items.Torch
GuildWars2.Items.Torch.Equals(GuildWars2.Items.Torch? other) -> bool
GuildWars2.Items.Torch.Torch() -> void
GuildWars2.Items.Toy
GuildWars2.Items.Toy.Equals(GuildWars2.Items.Toy? other) -> bool
GuildWars2.Items.Toy.Toy() -> void
GuildWars2.Items.ToyTwoHanded
GuildWars2.Items.ToyTwoHanded.Equals(GuildWars2.Items.ToyTwoHanded? other) -> bool
GuildWars2.Items.ToyTwoHanded.ToyTwoHanded() -> void
GuildWars2.Items.Transmutation
GuildWars2.Items.Transmutation.Equals(GuildWars2.Items.Transmutation? other) -> bool
GuildWars2.Items.Transmutation.GetSkinChatLinks() -> System.Collections.Generic.IEnumerable<GuildWars2.Chat.SkinLink!>!
GuildWars2.Items.Transmutation.SkinIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Items.Transmutation.SkinIds.init -> void
GuildWars2.Items.Transmutation.Transmutation() -> void
GuildWars2.Items.Trident
GuildWars2.Items.Trident.Equals(GuildWars2.Items.Trident? other) -> bool
GuildWars2.Items.Trident.Trident() -> void
GuildWars2.Items.Trinket
GuildWars2.Items.Trinket.AttributeAdjustment.get -> double
GuildWars2.Items.Trinket.AttributeAdjustment.init -> void
GuildWars2.Items.Trinket.AttributeCombinationId.get -> int?
GuildWars2.Items.Trinket.AttributeCombinationId.init -> void
GuildWars2.Items.Trinket.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.AttributeName>, int>!
GuildWars2.Items.Trinket.Attributes.init -> void
GuildWars2.Items.Trinket.Buff.get -> GuildWars2.Items.Buff?
GuildWars2.Items.Trinket.Buff.init -> void
GuildWars2.Items.Trinket.InfusionSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Items.InfusionSlot!>!
GuildWars2.Items.Trinket.InfusionSlots.init -> void
GuildWars2.Items.Trinket.StatChoices.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Items.Trinket.StatChoices.init -> void
GuildWars2.Items.Trinket.SuffixItemId.get -> int?
GuildWars2.Items.Trinket.SuffixItemId.init -> void
GuildWars2.Items.Trinket.Trinket() -> void
GuildWars2.Items.Trinket.Trinket(GuildWars2.Items.Trinket! original) -> void
GuildWars2.Items.Trinket.UpgradeSlots.get -> System.Collections.Generic.IReadOnlyList<int?>!
GuildWars2.Items.Trophy
GuildWars2.Items.Trophy.Equals(GuildWars2.Items.Trophy? other) -> bool
GuildWars2.Items.Trophy.Trophy() -> void
GuildWars2.Items.UnlimitedConsumable
GuildWars2.Items.UnlimitedConsumable.Equals(GuildWars2.Items.UnlimitedConsumable? other) -> bool
GuildWars2.Items.UnlimitedConsumable.UnlimitedConsumable() -> void
GuildWars2.Items.Unlocker
GuildWars2.Items.Unlocker.Unlocker() -> void
GuildWars2.Items.Unlocker.Unlocker(GuildWars2.Items.Unlocker! original) -> void
GuildWars2.Items.UpgradeComponent
GuildWars2.Items.UpgradeComponent.AttributeAdjustment.get -> double
GuildWars2.Items.UpgradeComponent.AttributeAdjustment.init -> void
GuildWars2.Items.UpgradeComponent.AttributeCombinationId.get -> int?
GuildWars2.Items.UpgradeComponent.AttributeCombinationId.init -> void
GuildWars2.Items.UpgradeComponent.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.AttributeName>, int>!
GuildWars2.Items.UpgradeComponent.Attributes.init -> void
GuildWars2.Items.UpgradeComponent.Buff.get -> GuildWars2.Items.Buff?
GuildWars2.Items.UpgradeComponent.Buff.init -> void
GuildWars2.Items.UpgradeComponent.InfusionUpgradeFlags.get -> GuildWars2.Items.InfusionSlotFlags!
GuildWars2.Items.UpgradeComponent.InfusionUpgradeFlags.init -> void
GuildWars2.Items.UpgradeComponent.SuffixName.get -> string!
GuildWars2.Items.UpgradeComponent.SuffixName.init -> void
GuildWars2.Items.UpgradeComponent.UpgradeComponent() -> void
GuildWars2.Items.UpgradeComponent.UpgradeComponent(GuildWars2.Items.UpgradeComponent! original) -> void
GuildWars2.Items.UpgradeComponent.UpgradeComponentFlags.get -> GuildWars2.Items.UpgradeComponentFlags!
GuildWars2.Items.UpgradeComponent.UpgradeComponentFlags.init -> void
GuildWars2.Items.UpgradeComponent.UpgradesInto.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Items.InfusionSlotUpgradePath!>!
GuildWars2.Items.UpgradeComponent.UpgradesInto.init -> void
GuildWars2.Items.UpgradeComponentFlags
GuildWars2.Items.UpgradeComponentFlags.Axe.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Axe.init -> void
GuildWars2.Items.UpgradeComponentFlags.Dagger.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Dagger.init -> void
GuildWars2.Items.UpgradeComponentFlags.Equals(GuildWars2.Items.UpgradeComponentFlags? other) -> bool
GuildWars2.Items.UpgradeComponentFlags.Focus.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Focus.init -> void
GuildWars2.Items.UpgradeComponentFlags.Greatsword.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Greatsword.init -> void
GuildWars2.Items.UpgradeComponentFlags.Hammer.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Hammer.init -> void
GuildWars2.Items.UpgradeComponentFlags.HarpoonGun.get -> bool
GuildWars2.Items.UpgradeComponentFlags.HarpoonGun.init -> void
GuildWars2.Items.UpgradeComponentFlags.HeavyArmor.get -> bool
GuildWars2.Items.UpgradeComponentFlags.HeavyArmor.init -> void
GuildWars2.Items.UpgradeComponentFlags.LightArmor.get -> bool
GuildWars2.Items.UpgradeComponentFlags.LightArmor.init -> void
GuildWars2.Items.UpgradeComponentFlags.LongBow.get -> bool
GuildWars2.Items.UpgradeComponentFlags.LongBow.init -> void
GuildWars2.Items.UpgradeComponentFlags.Mace.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Mace.init -> void
GuildWars2.Items.UpgradeComponentFlags.MediumArmor.get -> bool
GuildWars2.Items.UpgradeComponentFlags.MediumArmor.init -> void
GuildWars2.Items.UpgradeComponentFlags.Pistol.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Pistol.init -> void
GuildWars2.Items.UpgradeComponentFlags.Rifle.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Rifle.init -> void
GuildWars2.Items.UpgradeComponentFlags.Scepter.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Scepter.init -> void
GuildWars2.Items.UpgradeComponentFlags.Shield.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Shield.init -> void
GuildWars2.Items.UpgradeComponentFlags.ShortBow.get -> bool
GuildWars2.Items.UpgradeComponentFlags.ShortBow.init -> void
GuildWars2.Items.UpgradeComponentFlags.Spear.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Spear.init -> void
GuildWars2.Items.UpgradeComponentFlags.Staff.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Staff.init -> void
GuildWars2.Items.UpgradeComponentFlags.Sword.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Sword.init -> void
GuildWars2.Items.UpgradeComponentFlags.Torch.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Torch.init -> void
GuildWars2.Items.UpgradeComponentFlags.Trident.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Trident.init -> void
GuildWars2.Items.UpgradeComponentFlags.Trinket.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Trinket.init -> void
GuildWars2.Items.UpgradeComponentFlags.UpgradeComponentFlags() -> void
GuildWars2.Items.UpgradeComponentFlags.Warhorn.get -> bool
GuildWars2.Items.UpgradeComponentFlags.Warhorn.init -> void
GuildWars2.Items.UpgradeExtractor
GuildWars2.Items.UpgradeExtractor.Equals(GuildWars2.Items.UpgradeExtractor? other) -> bool
GuildWars2.Items.UpgradeExtractor.UpgradeExtractor() -> void
GuildWars2.Items.Utility
GuildWars2.Items.Utility.Effect.get -> GuildWars2.Items.Effect?
GuildWars2.Items.Utility.Effect.init -> void
GuildWars2.Items.Utility.Equals(GuildWars2.Items.Utility? other) -> bool
GuildWars2.Items.Utility.Utility() -> void
GuildWars2.Items.Warhorn
GuildWars2.Items.Warhorn.Equals(GuildWars2.Items.Warhorn? other) -> bool
GuildWars2.Items.Warhorn.Warhorn() -> void
GuildWars2.Items.Weapon
GuildWars2.Items.Weapon.AttributeAdjustment.get -> double
GuildWars2.Items.Weapon.AttributeAdjustment.init -> void
GuildWars2.Items.Weapon.AttributeCombinationId.get -> int?
GuildWars2.Items.Weapon.AttributeCombinationId.init -> void
GuildWars2.Items.Weapon.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Extensible<GuildWars2.Hero.AttributeName>, int>!
GuildWars2.Items.Weapon.Attributes.init -> void
GuildWars2.Items.Weapon.Buff.get -> GuildWars2.Items.Buff?
GuildWars2.Items.Weapon.Buff.init -> void
GuildWars2.Items.Weapon.DamageType.get -> GuildWars2.Extensible<GuildWars2.Items.DamageType>
GuildWars2.Items.Weapon.DamageType.init -> void
GuildWars2.Items.Weapon.DefaultSkinId.get -> int
GuildWars2.Items.Weapon.DefaultSkinId.init -> void
GuildWars2.Items.Weapon.Defense.get -> int
GuildWars2.Items.Weapon.Defense.init -> void
GuildWars2.Items.Weapon.InfusionSlots.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Items.InfusionSlot!>!
GuildWars2.Items.Weapon.InfusionSlots.init -> void
GuildWars2.Items.Weapon.MaxPower.get -> int
GuildWars2.Items.Weapon.MaxPower.init -> void
GuildWars2.Items.Weapon.MinPower.get -> int
GuildWars2.Items.Weapon.MinPower.init -> void
GuildWars2.Items.Weapon.SecondarySuffixItemId.get -> int?
GuildWars2.Items.Weapon.SecondarySuffixItemId.init -> void
GuildWars2.Items.Weapon.StatChoices.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Items.Weapon.StatChoices.init -> void
GuildWars2.Items.Weapon.SuffixItemId.get -> int?
GuildWars2.Items.Weapon.SuffixItemId.init -> void
GuildWars2.Items.Weapon.UpgradeSlots.get -> System.Collections.Generic.IReadOnlyList<int?>!
GuildWars2.Items.Weapon.Weapon() -> void
GuildWars2.Items.Weapon.Weapon(GuildWars2.Items.Weapon! original) -> void
GuildWars2.Language
GuildWars2.Language.Alpha2Code.get -> string!
GuildWars2.Language.CultureInfo.get -> System.Globalization.CultureInfo!
GuildWars2.Language.Language(string! alpha2Code) -> void
GuildWars2.Link
GuildWars2.Link.<Clone>$() -> GuildWars2.Link!
GuildWars2.Link.Deconstruct(out GuildWars2.Hyperlink First, out GuildWars2.Hyperlink Self, out GuildWars2.Hyperlink Last, out GuildWars2.Hyperlink Previous, out GuildWars2.Hyperlink Next) -> void
GuildWars2.Link.Equals(GuildWars2.Link? other) -> bool
GuildWars2.Link.First.get -> GuildWars2.Hyperlink
GuildWars2.Link.First.init -> void
GuildWars2.Link.Last.get -> GuildWars2.Hyperlink
GuildWars2.Link.Last.init -> void
GuildWars2.Link.Link(GuildWars2.Hyperlink First, GuildWars2.Hyperlink Self, GuildWars2.Hyperlink Last, GuildWars2.Hyperlink Previous, GuildWars2.Hyperlink Next) -> void
GuildWars2.Link.Next.get -> GuildWars2.Hyperlink
GuildWars2.Link.Next.init -> void
GuildWars2.Link.Previous.get -> GuildWars2.Hyperlink
GuildWars2.Link.Previous.init -> void
GuildWars2.Link.Self.get -> GuildWars2.Hyperlink
GuildWars2.Link.Self.init -> void
GuildWars2.Logos.Logo
GuildWars2.Logos.Logo.<Clone>$() -> GuildWars2.Logos.Logo!
GuildWars2.Logos.Logo.Equals(GuildWars2.Logos.Logo? other) -> bool
GuildWars2.Logos.Logo.Id.get -> string!
GuildWars2.Logos.Logo.Id.init -> void
GuildWars2.Logos.Logo.Logo() -> void
GuildWars2.Logos.Logo.Url.get -> System.Uri!
GuildWars2.Logos.Logo.Url.init -> void
GuildWars2.Logos.LogosClient
GuildWars2.Logos.LogosClient.GetLogoById(string! logoId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Logos.Logo! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Logos.LogosClient.GetLogos(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Logos.Logo!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Logos.LogosClient.GetLogosByIds(System.Collections.Generic.IEnumerable<string!>! logoIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Logos.Logo!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Logos.LogosClient.GetLogosByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Logos.Logo!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Logos.LogosClient.GetLogosIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Logos.LogosClient.LogosClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Markup.ColoredTextNode
GuildWars2.Markup.ColoredTextNode.Children.get -> System.Collections.Generic.List<GuildWars2.Markup.MarkupNode!>!
GuildWars2.Markup.ColoredTextNode.Color.get -> string!
GuildWars2.Markup.ColoredTextNode.ColoredTextNode(string! color) -> void
GuildWars2.Markup.LineBreakNode
GuildWars2.Markup.LineBreakNode.LineBreakNode() -> void
GuildWars2.Markup.MarkupColorName
GuildWars2.Markup.MarkupConverter
GuildWars2.Markup.MarkupHtmlConverter
GuildWars2.Markup.MarkupHtmlConverter.MarkupHtmlConverter() -> void
GuildWars2.Markup.MarkupLexer
GuildWars2.Markup.MarkupLexer.MarkupLexer() -> void
GuildWars2.Markup.MarkupNode
GuildWars2.Markup.MarkupNode.MarkupNode() -> void
GuildWars2.Markup.MarkupNodeType
GuildWars2.Markup.MarkupNodeType.ColoredText = 3 -> GuildWars2.Markup.MarkupNodeType
GuildWars2.Markup.MarkupNodeType.LineBreak = 4 -> GuildWars2.Markup.MarkupNodeType
GuildWars2.Markup.MarkupNodeType.None = 0 -> GuildWars2.Markup.MarkupNodeType
GuildWars2.Markup.MarkupNodeType.Root = 1 -> GuildWars2.Markup.MarkupNodeType
GuildWars2.Markup.MarkupNodeType.Text = 2 -> GuildWars2.Markup.MarkupNodeType
GuildWars2.Markup.MarkupParser
GuildWars2.Markup.MarkupParser.MarkupParser() -> void
GuildWars2.Markup.MarkupTextConverter
GuildWars2.Markup.MarkupTextConverter.MarkupTextConverter() -> void
GuildWars2.Markup.MarkupToken
GuildWars2.Markup.MarkupToken.<Clone>$() -> GuildWars2.Markup.MarkupToken!
GuildWars2.Markup.MarkupToken.Deconstruct(out GuildWars2.Markup.MarkupTokenType Type, out string! Value) -> void
GuildWars2.Markup.MarkupToken.Equals(GuildWars2.Markup.MarkupToken? other) -> bool
GuildWars2.Markup.MarkupToken.MarkupToken(GuildWars2.Markup.MarkupTokenType Type, string! Value) -> void
GuildWars2.Markup.MarkupToken.Type.get -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupToken.Type.init -> void
GuildWars2.Markup.MarkupToken.Value.get -> string!
GuildWars2.Markup.MarkupToken.Value.init -> void
GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.End = 7 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.LineBreak = 2 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.None = 0 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.TagClose = 5 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.TagStart = 3 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.TagValue = 4 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.TagVoid = 6 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.MarkupTokenType.Text = 1 -> GuildWars2.Markup.MarkupTokenType
GuildWars2.Markup.RootNode
GuildWars2.Markup.RootNode.Children.get -> System.Collections.Generic.List<GuildWars2.Markup.MarkupNode!>!
GuildWars2.Markup.RootNode.RootNode() -> void
GuildWars2.Markup.TextNode
GuildWars2.Markup.TextNode.Text.get -> string!
GuildWars2.Markup.TextNode.TextNode(string! text) -> void
GuildWars2.MessageContext
GuildWars2.MessageContext.<Clone>$() -> GuildWars2.MessageContext!
GuildWars2.MessageContext.Date.get -> System.DateTimeOffset
GuildWars2.MessageContext.Equals(GuildWars2.MessageContext? other) -> bool
GuildWars2.MessageContext.Expires.get -> System.DateTimeOffset?
GuildWars2.MessageContext.LastModified.get -> System.DateTimeOffset?
GuildWars2.MessageContext.Links.get -> GuildWars2.Link?
GuildWars2.MessageContext.MessageContext(System.Net.Http.HttpResponseMessage! response) -> void
GuildWars2.MessageContext.PageSize.get -> int?
GuildWars2.MessageContext.PageTotal.get -> int?
GuildWars2.MessageContext.ResultCount.get -> int?
GuildWars2.MessageContext.ResultTotal.get -> int?
GuildWars2.Metadata.ApiVersion
GuildWars2.Metadata.ApiVersion.<Clone>$() -> GuildWars2.Metadata.ApiVersion!
GuildWars2.Metadata.ApiVersion.ApiVersion() -> void
GuildWars2.Metadata.ApiVersion.Equals(GuildWars2.Metadata.ApiVersion? other) -> bool
GuildWars2.Metadata.ApiVersion.Languages.get -> System.Collections.Generic.IReadOnlyCollection<string!>!
GuildWars2.Metadata.ApiVersion.Languages.init -> void
GuildWars2.Metadata.ApiVersion.Routes.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Metadata.Route!>!
GuildWars2.Metadata.ApiVersion.Routes.init -> void
GuildWars2.Metadata.ApiVersion.SchemaVersions.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Metadata.Schema!>!
GuildWars2.Metadata.ApiVersion.SchemaVersions.init -> void
GuildWars2.Metadata.Build
GuildWars2.Metadata.Build.<Clone>$() -> GuildWars2.Metadata.Build!
GuildWars2.Metadata.Build.Build() -> void
GuildWars2.Metadata.Build.Equals(GuildWars2.Metadata.Build? other) -> bool
GuildWars2.Metadata.Build.Id.get -> int
GuildWars2.Metadata.Build.Id.init -> void
GuildWars2.Metadata.MetadataClient
GuildWars2.Metadata.MetadataClient.GetApiVersion(string! version = "v2", GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Metadata.ApiVersion! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Metadata.MetadataClient.GetBuild(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Metadata.Build! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Metadata.MetadataClient.MetadataClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Metadata.Route
GuildWars2.Metadata.Route.<Clone>$() -> GuildWars2.Metadata.Route!
GuildWars2.Metadata.Route.Active.get -> bool
GuildWars2.Metadata.Route.Active.init -> void
GuildWars2.Metadata.Route.Equals(GuildWars2.Metadata.Route? other) -> bool
GuildWars2.Metadata.Route.Multilingual.get -> bool
GuildWars2.Metadata.Route.Multilingual.init -> void
GuildWars2.Metadata.Route.Path.get -> string!
GuildWars2.Metadata.Route.Path.init -> void
GuildWars2.Metadata.Route.RequiresAuthorization.get -> bool
GuildWars2.Metadata.Route.RequiresAuthorization.init -> void
GuildWars2.Metadata.Route.Route() -> void
GuildWars2.Metadata.Schema
GuildWars2.Metadata.Schema.<Clone>$() -> GuildWars2.Metadata.Schema!
GuildWars2.Metadata.Schema.Description.get -> string!
GuildWars2.Metadata.Schema.Description.init -> void
GuildWars2.Metadata.Schema.Equals(GuildWars2.Metadata.Schema? other) -> bool
GuildWars2.Metadata.Schema.Schema() -> void
GuildWars2.Metadata.Schema.Version.get -> string!
GuildWars2.Metadata.Schema.Version.init -> void
GuildWars2.MissingMemberBehavior
GuildWars2.MissingMemberBehavior.Error = 0 -> GuildWars2.MissingMemberBehavior
GuildWars2.MissingMemberBehavior.Undefined = 1 -> GuildWars2.MissingMemberBehavior
GuildWars2.Mumble.Context
GuildWars2.Mumble.Context.Context() -> void
GuildWars2.Mumble.Context.Equals(GuildWars2.Mumble.Context other) -> bool
GuildWars2.Mumble.Context.IsMounted.get -> bool
GuildWars2.Mumble.Context.Mount.get -> GuildWars2.Hero.Equipment.Mounts.MountName?
GuildWars2.Mumble.Context.ServerAddress.get -> System.Net.IPEndPoint!
GuildWars2.Mumble.GameTick
GuildWars2.Mumble.GameTick.Equals(GuildWars2.Mumble.GameTick other) -> bool
GuildWars2.Mumble.GameTick.GameTick() -> void
GuildWars2.Mumble.GameTick.GetIdentity(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error) -> GuildWars2.Mumble.Identity?
GuildWars2.Mumble.Identity
GuildWars2.Mumble.Identity.<Clone>$() -> GuildWars2.Mumble.Identity!
GuildWars2.Mumble.Identity.Commander.get -> bool
GuildWars2.Mumble.Identity.Commander.init -> void
GuildWars2.Mumble.Identity.Equals(GuildWars2.Mumble.Identity? other) -> bool
GuildWars2.Mumble.Identity.FieldOfView.get -> double
GuildWars2.Mumble.Identity.FieldOfView.init -> void
GuildWars2.Mumble.Identity.Identity() -> void
GuildWars2.Mumble.Identity.MapId.get -> int
GuildWars2.Mumble.Identity.MapId.init -> void
GuildWars2.Mumble.Identity.Name.get -> string!
GuildWars2.Mumble.Identity.Name.init -> void
GuildWars2.Mumble.Identity.Profession.get -> GuildWars2.Hero.ProfessionName
GuildWars2.Mumble.Identity.Profession.init -> void
GuildWars2.Mumble.Identity.Race.get -> GuildWars2.Hero.RaceName
GuildWars2.Mumble.Identity.Race.init -> void
GuildWars2.Mumble.Identity.SpecializationId.get -> int
GuildWars2.Mumble.Identity.SpecializationId.init -> void
GuildWars2.Mumble.Identity.TeamColorId.get -> int
GuildWars2.Mumble.Identity.TeamColorId.init -> void
GuildWars2.Mumble.Identity.UiSize.get -> GuildWars2.Mumble.UiSize
GuildWars2.Mumble.Identity.UiSize.init -> void
GuildWars2.Mumble.Identity.WorldId.get -> long
GuildWars2.Mumble.Identity.WorldId.init -> void
GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.BlueHome = 10 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.Center = 9 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.CompetitivePvP = 2 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.EdgeOfTheMists = 15 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.GreenHome = 11 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.Instance = 4 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.ObsidianSanctum = 14 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.Public = 5 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.PublicMini = 16 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.RedHome = 12 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.Tutorial = 7 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.MapType.WvwLounge = 18 -> GuildWars2.Mumble.MapType
GuildWars2.Mumble.UiSize
GuildWars2.Mumble.UiSize.Large = 2 -> GuildWars2.Mumble.UiSize
GuildWars2.Mumble.UiSize.Larger = 3 -> GuildWars2.Mumble.UiSize
GuildWars2.Mumble.UiSize.Normal = 1 -> GuildWars2.Mumble.UiSize
GuildWars2.Mumble.UiSize.Small = 0 -> GuildWars2.Mumble.UiSize
GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.DoesCompassHaveRotationEnabled = 4 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.GameHasFocus = 8 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.IsCompassTopRight = 2 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.IsInCombat = 64 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.IsInCompetitiveGameMode = 16 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.IsMapOpen = 1 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.None = 0 -> GuildWars2.Mumble.UiState
GuildWars2.Mumble.UiState.TextboxHasFocus = 32 -> GuildWars2.Mumble.UiState
GuildWars2.Pve.Dungeons.Dungeon
GuildWars2.Pve.Dungeons.Dungeon.<Clone>$() -> GuildWars2.Pve.Dungeons.Dungeon!
GuildWars2.Pve.Dungeons.Dungeon.Dungeon() -> void
GuildWars2.Pve.Dungeons.Dungeon.Equals(GuildWars2.Pve.Dungeons.Dungeon? other) -> bool
GuildWars2.Pve.Dungeons.Dungeon.Id.get -> string!
GuildWars2.Pve.Dungeons.Dungeon.Id.init -> void
GuildWars2.Pve.Dungeons.Dungeon.Paths.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Pve.Dungeons.DungeonPath!>!
GuildWars2.Pve.Dungeons.Dungeon.Paths.init -> void
GuildWars2.Pve.Dungeons.DungeonKind
GuildWars2.Pve.Dungeons.DungeonKind.Explorable = 2 -> GuildWars2.Pve.Dungeons.DungeonKind
GuildWars2.Pve.Dungeons.DungeonKind.Story = 1 -> GuildWars2.Pve.Dungeons.DungeonKind
GuildWars2.Pve.Dungeons.DungeonPath
GuildWars2.Pve.Dungeons.DungeonPath.<Clone>$() -> GuildWars2.Pve.Dungeons.DungeonPath!
GuildWars2.Pve.Dungeons.DungeonPath.DungeonPath() -> void
GuildWars2.Pve.Dungeons.DungeonPath.Equals(GuildWars2.Pve.Dungeons.DungeonPath? other) -> bool
GuildWars2.Pve.Dungeons.DungeonPath.Id.get -> string!
GuildWars2.Pve.Dungeons.DungeonPath.Id.init -> void
GuildWars2.Pve.Dungeons.DungeonPath.Kind.get -> GuildWars2.Extensible<GuildWars2.Pve.Dungeons.DungeonKind>
GuildWars2.Pve.Dungeons.DungeonPath.Kind.init -> void
GuildWars2.Pve.Dungeons.DungeonsClient
GuildWars2.Pve.Dungeons.DungeonsClient.DungeonsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.Dungeons.DungeonsClient.GetCompletedPaths(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Dungeons.DungeonsClient.GetDungeonById(string! dungeonId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Dungeons.Dungeon! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Dungeons.DungeonsClient.GetDungeons(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Dungeons.Dungeon!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Dungeons.DungeonsClient.GetDungeonsByIds(System.Collections.Generic.IEnumerable<string!>! dungeonIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Dungeons.Dungeon!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Dungeons.DungeonsClient.GetDungeonsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Dungeons.Dungeon!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Dungeons.DungeonsClient.GetDungeonsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.Cats.Cat
GuildWars2.Pve.Home.Cats.Cat.<Clone>$() -> GuildWars2.Pve.Home.Cats.Cat!
GuildWars2.Pve.Home.Cats.Cat.Cat() -> void
GuildWars2.Pve.Home.Cats.Cat.Equals(GuildWars2.Pve.Home.Cats.Cat? other) -> bool
GuildWars2.Pve.Home.Cats.Cat.Hint.get -> string!
GuildWars2.Pve.Home.Cats.Cat.Hint.init -> void
GuildWars2.Pve.Home.Cats.Cat.Id.get -> int
GuildWars2.Pve.Home.Cats.Cat.Id.init -> void
GuildWars2.Pve.Home.CollectionBox
GuildWars2.Pve.Home.CollectionBox.Harvesting = 1 -> GuildWars2.Pve.Home.CollectionBox
GuildWars2.Pve.Home.CollectionBox.Logging = 2 -> GuildWars2.Pve.Home.CollectionBox
GuildWars2.Pve.Home.CollectionBox.Mining = 3 -> GuildWars2.Pve.Home.CollectionBox
GuildWars2.Pve.Home.Decorations.Decoration
GuildWars2.Pve.Home.Decorations.Decoration.<Clone>$() -> GuildWars2.Pve.Home.Decorations.Decoration!
GuildWars2.Pve.Home.Decorations.Decoration.CategoryIds.get -> System.Collections.Generic.IReadOnlyList<int>!
GuildWars2.Pve.Home.Decorations.Decoration.CategoryIds.init -> void
GuildWars2.Pve.Home.Decorations.Decoration.Decoration() -> void
GuildWars2.Pve.Home.Decorations.Decoration.Description.get -> string!
GuildWars2.Pve.Home.Decorations.Decoration.Description.init -> void
GuildWars2.Pve.Home.Decorations.Decoration.Equals(GuildWars2.Pve.Home.Decorations.Decoration? other) -> bool
GuildWars2.Pve.Home.Decorations.Decoration.IconHref.get -> string!
GuildWars2.Pve.Home.Decorations.Decoration.IconHref.init -> void
GuildWars2.Pve.Home.Decorations.Decoration.IconUrl.get -> System.Uri!
GuildWars2.Pve.Home.Decorations.Decoration.IconUrl.init -> void
GuildWars2.Pve.Home.Decorations.Decoration.Id.get -> int
GuildWars2.Pve.Home.Decorations.Decoration.Id.init -> void
GuildWars2.Pve.Home.Decorations.Decoration.MaxCount.get -> int
GuildWars2.Pve.Home.Decorations.Decoration.MaxCount.init -> void
GuildWars2.Pve.Home.Decorations.Decoration.Name.get -> string!
GuildWars2.Pve.Home.Decorations.Decoration.Name.init -> void
GuildWars2.Pve.Home.Decorations.DecorationCategory
GuildWars2.Pve.Home.Decorations.DecorationCategory.<Clone>$() -> GuildWars2.Pve.Home.Decorations.DecorationCategory!
GuildWars2.Pve.Home.Decorations.DecorationCategory.DecorationCategory() -> void
GuildWars2.Pve.Home.Decorations.DecorationCategory.Equals(GuildWars2.Pve.Home.Decorations.DecorationCategory? other) -> bool
GuildWars2.Pve.Home.Decorations.DecorationCategory.Id.get -> int
GuildWars2.Pve.Home.Decorations.DecorationCategory.Id.init -> void
GuildWars2.Pve.Home.Decorations.DecorationCategory.Name.get -> string!
GuildWars2.Pve.Home.Decorations.DecorationCategory.Name.init -> void
GuildWars2.Pve.Home.Decorations.Glyph
GuildWars2.Pve.Home.Decorations.Glyph.<Clone>$() -> GuildWars2.Pve.Home.Decorations.Glyph!
GuildWars2.Pve.Home.Decorations.Glyph.Equals(GuildWars2.Pve.Home.Decorations.Glyph? other) -> bool
GuildWars2.Pve.Home.Decorations.Glyph.Glyph() -> void
GuildWars2.Pve.Home.Decorations.Glyph.Id.get -> string!
GuildWars2.Pve.Home.Decorations.Glyph.Id.init -> void
GuildWars2.Pve.Home.Decorations.Glyph.ItemId.get -> int
GuildWars2.Pve.Home.Decorations.Glyph.ItemId.init -> void
GuildWars2.Pve.Home.Decorations.Glyph.Slot.get -> GuildWars2.Extensible<GuildWars2.Pve.Home.CollectionBox>
GuildWars2.Pve.Home.Decorations.Glyph.Slot.init -> void
GuildWars2.Pve.Home.Decorations.UnlockedDecoration
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.<Clone>$() -> GuildWars2.Pve.Home.Decorations.UnlockedDecoration!
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.Count.get -> int
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.Count.init -> void
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.Equals(GuildWars2.Pve.Home.Decorations.UnlockedDecoration? other) -> bool
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.Id.get -> int
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.Id.init -> void
GuildWars2.Pve.Home.Decorations.UnlockedDecoration.UnlockedDecoration() -> void
GuildWars2.Pve.Home.HomeClient
GuildWars2.Pve.Home.HomeClient.GetCatById(int catId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Home.Cats.Cat! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetCats(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Cats.Cat!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetCatsByIds(System.Collections.Generic.IEnumerable<int>! catIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Cats.Cat!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetCatsByPage(int pageIndex, int? pageSize, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Cats.Cat!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetCatsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationById(int decorationId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Home.Decorations.Decoration! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationCategories(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.DecorationCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationCategoriesByIds(System.Collections.Generic.IEnumerable<int>! categoryIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.DecorationCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationCategoriesByPage(int pageIndex, int? pageSize, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.DecorationCategory!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationCategoriesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationCategoryById(int categoryId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Home.Decorations.DecorationCategory! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationsBulk(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Pve.Home.Decorations.Decoration! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationsBulk(System.Collections.Generic.IEnumerable<int>! decorationIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, in System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<(GuildWars2.Pve.Home.Decorations.Decoration! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationsByIds(System.Collections.Generic.IEnumerable<int>! decorationIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.Decoration!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationsByPage(int pageIndex, int? pageSize, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.Decoration!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetDecorationsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetEquippedGlyphs(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetGlyphById(string! glyphId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Home.Decorations.Glyph! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetGlyphs(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.Glyph!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetGlyphsByIds(System.Collections.Generic.IEnumerable<string!>! glyphIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.Glyph!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetGlyphsByPage(int pageIndex, int? pageSize, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.Glyph!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetGlyphsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetNodeById(string! nodeId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Home.Nodes.Node! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetNodes(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Nodes.Node!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetNodesByIds(System.Collections.Generic.IEnumerable<string!>! nodeIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Nodes.Node!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetNodesByPage(int pageIndex, int? pageSize, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Nodes.Node!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetNodesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetUnlockedCats(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetUnlockedDecorations(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Home.Decorations.UnlockedDecoration!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.GetUnlockedNodes(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Home.HomeClient.HomeClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.Home.Nodes.Node
GuildWars2.Pve.Home.Nodes.Node.<Clone>$() -> GuildWars2.Pve.Home.Nodes.Node!
GuildWars2.Pve.Home.Nodes.Node.Equals(GuildWars2.Pve.Home.Nodes.Node? other) -> bool
GuildWars2.Pve.Home.Nodes.Node.Id.get -> string!
GuildWars2.Pve.Home.Nodes.Node.Id.init -> void
GuildWars2.Pve.Home.Nodes.Node.Node() -> void
GuildWars2.Pve.MapChests.MapChest
GuildWars2.Pve.MapChests.MapChest.<Clone>$() -> GuildWars2.Pve.MapChests.MapChest!
GuildWars2.Pve.MapChests.MapChest.Equals(GuildWars2.Pve.MapChests.MapChest? other) -> bool
GuildWars2.Pve.MapChests.MapChest.Id.get -> string!
GuildWars2.Pve.MapChests.MapChest.Id.init -> void
GuildWars2.Pve.MapChests.MapChest.MapChest() -> void
GuildWars2.Pve.MapChests.MapChestsClient
GuildWars2.Pve.MapChests.MapChestsClient.GetMapChestById(string! mapChestId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.MapChests.MapChest! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.MapChests.MapChestsClient.GetMapChests(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.MapChests.MapChest!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.MapChests.MapChestsClient.GetMapChestsByIds(System.Collections.Generic.IEnumerable<string!>! mapChestIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.MapChests.MapChest!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.MapChests.MapChestsClient.GetMapChestsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.MapChests.MapChest!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.MapChests.MapChestsClient.GetMapChestsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.MapChests.MapChestsClient.GetReceivedMapChests(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.MapChests.MapChestsClient.MapChestsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.Pets.Pet
GuildWars2.Pve.Pets.Pet.<Clone>$() -> GuildWars2.Pve.Pets.Pet!
GuildWars2.Pve.Pets.Pet.Description.get -> string!
GuildWars2.Pve.Pets.Pet.Description.init -> void
GuildWars2.Pve.Pets.Pet.Equals(GuildWars2.Pve.Pets.Pet? other) -> bool
GuildWars2.Pve.Pets.Pet.IconHref.get -> string!
GuildWars2.Pve.Pets.Pet.IconHref.init -> void
GuildWars2.Pve.Pets.Pet.IconUrl.get -> System.Uri!
GuildWars2.Pve.Pets.Pet.IconUrl.init -> void
GuildWars2.Pve.Pets.Pet.Id.get -> int
GuildWars2.Pve.Pets.Pet.Id.init -> void
GuildWars2.Pve.Pets.Pet.Name.get -> string!
GuildWars2.Pve.Pets.Pet.Name.init -> void
GuildWars2.Pve.Pets.Pet.Pet() -> void
GuildWars2.Pve.Pets.Pet.Skills.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pve.Pets.PetSkill!>!
GuildWars2.Pve.Pets.Pet.Skills.init -> void
GuildWars2.Pve.Pets.PetsClient
GuildWars2.Pve.Pets.PetsClient.GetPetById(int petId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Pets.Pet! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Pets.PetsClient.GetPets(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Pets.Pet!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Pets.PetsClient.GetPetsByIds(System.Collections.Generic.IEnumerable<int>! petIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Pets.Pet!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Pets.PetsClient.GetPetsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Pets.Pet!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Pets.PetsClient.GetPetsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Pets.PetsClient.PetsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.Pets.PetSkill
GuildWars2.Pve.Pets.PetSkill.<Clone>$() -> GuildWars2.Pve.Pets.PetSkill!
GuildWars2.Pve.Pets.PetSkill.Equals(GuildWars2.Pve.Pets.PetSkill? other) -> bool
GuildWars2.Pve.Pets.PetSkill.Id.get -> int
GuildWars2.Pve.Pets.PetSkill.Id.init -> void
GuildWars2.Pve.Pets.PetSkill.PetSkill() -> void
GuildWars2.Pve.PveClient
GuildWars2.Pve.PveClient.Dungeons.get -> GuildWars2.Pve.Dungeons.DungeonsClient!
GuildWars2.Pve.PveClient.Home.get -> GuildWars2.Pve.Home.HomeClient!
GuildWars2.Pve.PveClient.MapChests.get -> GuildWars2.Pve.MapChests.MapChestsClient!
GuildWars2.Pve.PveClient.Pets.get -> GuildWars2.Pve.Pets.PetsClient!
GuildWars2.Pve.PveClient.PveClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.PveClient.Raids.get -> GuildWars2.Pve.Raids.RaidsClient!
GuildWars2.Pve.PveClient.SuperAdventureBox.get -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxClient!
GuildWars2.Pve.PveClient.WorldBosses.get -> GuildWars2.Pve.WorldBosses.WorldBossesClient!
GuildWars2.Pve.Raids.Encounter
GuildWars2.Pve.Raids.Encounter.<Clone>$() -> GuildWars2.Pve.Raids.Encounter!
GuildWars2.Pve.Raids.Encounter.Encounter() -> void
GuildWars2.Pve.Raids.Encounter.Equals(GuildWars2.Pve.Raids.Encounter? other) -> bool
GuildWars2.Pve.Raids.Encounter.Id.get -> string!
GuildWars2.Pve.Raids.Encounter.Id.init -> void
GuildWars2.Pve.Raids.Encounter.Kind.get -> GuildWars2.Extensible<GuildWars2.Pve.Raids.EncounterKind>
GuildWars2.Pve.Raids.Encounter.Kind.init -> void
GuildWars2.Pve.Raids.EncounterKind
GuildWars2.Pve.Raids.EncounterKind.Boss = 2 -> GuildWars2.Pve.Raids.EncounterKind
GuildWars2.Pve.Raids.EncounterKind.Checkpoint = 1 -> GuildWars2.Pve.Raids.EncounterKind
GuildWars2.Pve.Raids.Raid
GuildWars2.Pve.Raids.Raid.<Clone>$() -> GuildWars2.Pve.Raids.Raid!
GuildWars2.Pve.Raids.Raid.Equals(GuildWars2.Pve.Raids.Raid? other) -> bool
GuildWars2.Pve.Raids.Raid.Id.get -> string!
GuildWars2.Pve.Raids.Raid.Id.init -> void
GuildWars2.Pve.Raids.Raid.Raid() -> void
GuildWars2.Pve.Raids.Raid.Wings.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pve.Raids.RaidWing!>!
GuildWars2.Pve.Raids.Raid.Wings.init -> void
GuildWars2.Pve.Raids.RaidsClient
GuildWars2.Pve.Raids.RaidsClient.GetCompletedEncounters(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Raids.RaidsClient.GetRaidById(string! raidId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.Raids.Raid! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Raids.RaidsClient.GetRaids(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Raids.Raid!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Raids.RaidsClient.GetRaidsByIds(System.Collections.Generic.IEnumerable<string!>! raidIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Raids.Raid!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Raids.RaidsClient.GetRaidsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pve.Raids.Raid!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Raids.RaidsClient.GetRaidsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.Raids.RaidsClient.RaidsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.Raids.RaidWing
GuildWars2.Pve.Raids.RaidWing.<Clone>$() -> GuildWars2.Pve.Raids.RaidWing!
GuildWars2.Pve.Raids.RaidWing.Encounters.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pve.Raids.Encounter!>!
GuildWars2.Pve.Raids.RaidWing.Encounters.init -> void
GuildWars2.Pve.Raids.RaidWing.Equals(GuildWars2.Pve.Raids.RaidWing? other) -> bool
GuildWars2.Pve.Raids.RaidWing.Id.get -> string!
GuildWars2.Pve.Raids.RaidWing.Id.init -> void
GuildWars2.Pve.Raids.RaidWing.RaidWing() -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxClient
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxClient.GetSuperAdventureBoxProgress(string! characterName, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxClient.SuperAdventureBoxClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode.Exploration = 1 -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode.Normal = 2 -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode.Tribulation = 3 -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.<Clone>$() -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Equals(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress? other) -> bool
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Songs.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong!>!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Songs.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.SuperAdventureBoxProgress() -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Unlocks.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade!>!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Unlocks.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Zones.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone!>!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Zones.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.<Clone>$() -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.Equals(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong? other) -> bool
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.Id.get -> int
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.Id.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.Name.get -> string!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.Name.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.SuperAdventureBoxSong() -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.<Clone>$() -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.Equals(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade? other) -> bool
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.Id.get -> int
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.Id.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.Name.get -> string!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.Name.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.SuperAdventureBoxUpgrade() -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.<Clone>$() -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone!
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Equals(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone? other) -> bool
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Id.get -> int
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Id.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Mode.get -> GuildWars2.Extensible<GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode>
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Mode.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.SuperAdventureBoxZone() -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.World.get -> int
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.World.init -> void
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Zone.get -> int
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Zone.init -> void
GuildWars2.Pve.WorldBosses.WorldBossesClient
GuildWars2.Pve.WorldBosses.WorldBossesClient.GetDefeatedWorldBosses(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.WorldBosses.WorldBossesClient.GetWorldBosses(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pve.WorldBosses.WorldBossesClient.WorldBossesClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pvp.Amulets.Amulet
GuildWars2.Pvp.Amulets.Amulet.<Clone>$() -> GuildWars2.Pvp.Amulets.Amulet!
GuildWars2.Pvp.Amulets.Amulet.Amulet() -> void
GuildWars2.Pvp.Amulets.Amulet.Attributes.get -> System.Collections.Generic.IDictionary<GuildWars2.Hero.AttributeName, int>!
GuildWars2.Pvp.Amulets.Amulet.Attributes.init -> void
GuildWars2.Pvp.Amulets.Amulet.Equals(GuildWars2.Pvp.Amulets.Amulet? other) -> bool
GuildWars2.Pvp.Amulets.Amulet.IconHref.get -> string!
GuildWars2.Pvp.Amulets.Amulet.IconHref.init -> void
GuildWars2.Pvp.Amulets.Amulet.IconUrl.get -> System.Uri!
GuildWars2.Pvp.Amulets.Amulet.IconUrl.init -> void
GuildWars2.Pvp.Amulets.Amulet.Id.get -> int
GuildWars2.Pvp.Amulets.Amulet.Id.init -> void
GuildWars2.Pvp.Amulets.Amulet.Name.get -> string!
GuildWars2.Pvp.Amulets.Amulet.Name.init -> void
GuildWars2.Pvp.Games.Game
GuildWars2.Pvp.Games.Game.<Clone>$() -> GuildWars2.Pvp.Games.Game!
GuildWars2.Pvp.Games.Game.Ended.get -> System.DateTimeOffset
GuildWars2.Pvp.Games.Game.Ended.init -> void
GuildWars2.Pvp.Games.Game.Equals(GuildWars2.Pvp.Games.Game? other) -> bool
GuildWars2.Pvp.Games.Game.Game() -> void
GuildWars2.Pvp.Games.Game.Id.get -> string!
GuildWars2.Pvp.Games.Game.Id.init -> void
GuildWars2.Pvp.Games.Game.MapId.get -> int
GuildWars2.Pvp.Games.Game.MapId.init -> void
GuildWars2.Pvp.Games.Game.Profession.get -> GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>
GuildWars2.Pvp.Games.Game.Profession.init -> void
GuildWars2.Pvp.Games.Game.RatingChange.get -> int
GuildWars2.Pvp.Games.Game.RatingChange.init -> void
GuildWars2.Pvp.Games.Game.RatingType.get -> GuildWars2.Extensible<GuildWars2.Pvp.Games.PvpRatingType>
GuildWars2.Pvp.Games.Game.RatingType.init -> void
GuildWars2.Pvp.Games.Game.Result.get -> GuildWars2.Extensible<GuildWars2.Pvp.Games.PvpResult>
GuildWars2.Pvp.Games.Game.Result.init -> void
GuildWars2.Pvp.Games.Game.Score.get -> GuildWars2.Pvp.Games.Score!
GuildWars2.Pvp.Games.Game.Score.init -> void
GuildWars2.Pvp.Games.Game.SeasonId.get -> string?
GuildWars2.Pvp.Games.Game.SeasonId.init -> void
GuildWars2.Pvp.Games.Game.Started.get -> System.DateTimeOffset
GuildWars2.Pvp.Games.Game.Started.init -> void
GuildWars2.Pvp.Games.Game.Team.get -> GuildWars2.Extensible<GuildWars2.Pvp.Games.PvpTeamColor>
GuildWars2.Pvp.Games.Game.Team.init -> void
GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.None = 0 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.Placeholder = 5 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.Ranked = 1 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.Ranked2v2 = 2 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.Ranked3v3 = 3 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.RankedPush = 6 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpRatingType.Unranked = 4 -> GuildWars2.Pvp.Games.PvpRatingType
GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpResult.Bye = 3 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpResult.Defeat = 2 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpResult.Desertion = 5 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpResult.Forfeit = 4 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpResult.Victory = 1 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpTeamColor
GuildWars2.Pvp.Games.PvpTeamColor.Blue = 2 -> GuildWars2.Pvp.Games.PvpTeamColor
GuildWars2.Pvp.Games.PvpTeamColor.Red = 1 -> GuildWars2.Pvp.Games.PvpTeamColor
GuildWars2.Pvp.Games.Score
GuildWars2.Pvp.Games.Score.<Clone>$() -> GuildWars2.Pvp.Games.Score!
GuildWars2.Pvp.Games.Score.Blue.get -> int
GuildWars2.Pvp.Games.Score.Blue.init -> void
GuildWars2.Pvp.Games.Score.Equals(GuildWars2.Pvp.Games.Score? other) -> bool
GuildWars2.Pvp.Games.Score.Red.get -> int
GuildWars2.Pvp.Games.Score.Red.init -> void
GuildWars2.Pvp.Games.Score.Score() -> void
GuildWars2.Pvp.MistChampions.MistChampion
GuildWars2.Pvp.MistChampions.MistChampion.<Clone>$() -> GuildWars2.Pvp.MistChampions.MistChampion!
GuildWars2.Pvp.MistChampions.MistChampion.Description.get -> string!
GuildWars2.Pvp.MistChampions.MistChampion.Description.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.Equals(GuildWars2.Pvp.MistChampions.MistChampion? other) -> bool
GuildWars2.Pvp.MistChampions.MistChampion.Id.get -> string!
GuildWars2.Pvp.MistChampions.MistChampion.Id.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.MistChampion() -> void
GuildWars2.Pvp.MistChampions.MistChampion.Name.get -> string!
GuildWars2.Pvp.MistChampions.MistChampion.Name.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.OverlayImageHref.get -> string!
GuildWars2.Pvp.MistChampions.MistChampion.OverlayImageHref.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.OverlayImageUrl.get -> System.Uri!
GuildWars2.Pvp.MistChampions.MistChampion.OverlayImageUrl.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.Skins.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Pvp.MistChampions.MistChampionSkin!>!
GuildWars2.Pvp.MistChampions.MistChampion.Skins.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.Stats.get -> GuildWars2.Pvp.MistChampions.MistChampionStats!
GuildWars2.Pvp.MistChampions.MistChampion.Stats.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.Type.get -> string!
GuildWars2.Pvp.MistChampions.MistChampion.Type.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.UnderlayImageHref.get -> string!
GuildWars2.Pvp.MistChampions.MistChampion.UnderlayImageHref.init -> void
GuildWars2.Pvp.MistChampions.MistChampion.UnderlayImageUrl.get -> System.Uri!
GuildWars2.Pvp.MistChampions.MistChampion.UnderlayImageUrl.init -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin
GuildWars2.Pvp.MistChampions.MistChampionSkin.<Clone>$() -> GuildWars2.Pvp.MistChampions.MistChampionSkin!
GuildWars2.Pvp.MistChampions.MistChampionSkin.Default.get -> bool
GuildWars2.Pvp.MistChampions.MistChampionSkin.Default.init -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin.Equals(GuildWars2.Pvp.MistChampions.MistChampionSkin? other) -> bool
GuildWars2.Pvp.MistChampions.MistChampionSkin.IconHref.get -> string!
GuildWars2.Pvp.MistChampions.MistChampionSkin.IconHref.init -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin.IconUrl.get -> System.Uri!
GuildWars2.Pvp.MistChampions.MistChampionSkin.IconUrl.init -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin.Id.get -> int
GuildWars2.Pvp.MistChampions.MistChampionSkin.Id.init -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin.MistChampionSkin() -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin.Name.get -> string!
GuildWars2.Pvp.MistChampions.MistChampionSkin.Name.init -> void
GuildWars2.Pvp.MistChampions.MistChampionSkin.UnlockItemIds.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Pvp.MistChampions.MistChampionSkin.UnlockItemIds.init -> void
GuildWars2.Pvp.MistChampions.MistChampionStats
GuildWars2.Pvp.MistChampions.MistChampionStats.<Clone>$() -> GuildWars2.Pvp.MistChampions.MistChampionStats!
GuildWars2.Pvp.MistChampions.MistChampionStats.Defense.get -> int
GuildWars2.Pvp.MistChampions.MistChampionStats.Defense.init -> void
GuildWars2.Pvp.MistChampions.MistChampionStats.Equals(GuildWars2.Pvp.MistChampions.MistChampionStats? other) -> bool
GuildWars2.Pvp.MistChampions.MistChampionStats.MistChampionStats() -> void
GuildWars2.Pvp.MistChampions.MistChampionStats.Offense.get -> int
GuildWars2.Pvp.MistChampions.MistChampionStats.Offense.init -> void
GuildWars2.Pvp.MistChampions.MistChampionStats.Speed.get -> int
GuildWars2.Pvp.MistChampions.MistChampionStats.Speed.init -> void
GuildWars2.Pvp.PvpClient
GuildWars2.Pvp.PvpClient.GetAmuletById(int amuletId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pvp.Amulets.Amulet! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetAmulets(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Amulets.Amulet!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetAmuletsByIds(System.Collections.Generic.IEnumerable<int>! amuletIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Amulets.Amulet!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetAmuletsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Amulets.Amulet!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetAmuletsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetGameById(string! gameId, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pvp.Games.Game! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetGames(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Games.Game!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetGamesByIds(System.Collections.Generic.IEnumerable<string!>! gameIds, string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Games.Game!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetGamesByPage(int pageIndex, int? pageSize = null, string? accessToken = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Games.Game!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetGamesIndex(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetLeaderboardEntries(string! seasonId, string! boardId, string! region, int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Seasons.LeaderboardEntry!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetLeaderboardIds(string! seasonId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetLeaderboardRegions(string! seasonId, string! boardId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetMistChampionById(string! mistChampionId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pvp.MistChampions.MistChampion! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetMistChampionByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.MistChampions.MistChampion!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetMistChampions(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.MistChampions.MistChampion!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetMistChampionsByIds(System.Collections.Generic.IEnumerable<string!>! mistChampionIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.MistChampions.MistChampion!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetMistChampionsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetRankById(int rankId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pvp.Ranks.Rank! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetRanks(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Ranks.Rank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetRanksByIds(System.Collections.Generic.IEnumerable<int>! rankIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Ranks.Rank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetRanksByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Ranks.Rank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetRanksIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetSeasonById(string! seasonId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pvp.Seasons.Season! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetSeasons(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Seasons.Season!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetSeasonsByIds(System.Collections.Generic.IEnumerable<string!>! seasonIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Seasons.Season!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetSeasonsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Seasons.Season!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetSeasonsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetStandings(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Pvp.Standings.Standing!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetStats(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Pvp.Stats.AccountStats! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.GetUnlockedMistChampions(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Pvp.PvpClient.PvpClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Pvp.Ranks.Level
GuildWars2.Pvp.Ranks.Level.<Clone>$() -> GuildWars2.Pvp.Ranks.Level!
GuildWars2.Pvp.Ranks.Level.Equals(GuildWars2.Pvp.Ranks.Level? other) -> bool
GuildWars2.Pvp.Ranks.Level.Level() -> void
GuildWars2.Pvp.Ranks.Level.MaxRank.get -> int
GuildWars2.Pvp.Ranks.Level.MaxRank.init -> void
GuildWars2.Pvp.Ranks.Level.MinRank.get -> int
GuildWars2.Pvp.Ranks.Level.MinRank.init -> void
GuildWars2.Pvp.Ranks.Level.Points.get -> int
GuildWars2.Pvp.Ranks.Level.Points.init -> void
GuildWars2.Pvp.Ranks.Rank
GuildWars2.Pvp.Ranks.Rank.<Clone>$() -> GuildWars2.Pvp.Ranks.Rank!
GuildWars2.Pvp.Ranks.Rank.Equals(GuildWars2.Pvp.Ranks.Rank? other) -> bool
GuildWars2.Pvp.Ranks.Rank.FinisherId.get -> int
GuildWars2.Pvp.Ranks.Rank.FinisherId.init -> void
GuildWars2.Pvp.Ranks.Rank.IconHref.get -> string!
GuildWars2.Pvp.Ranks.Rank.IconHref.init -> void
GuildWars2.Pvp.Ranks.Rank.IconUrl.get -> System.Uri!
GuildWars2.Pvp.Ranks.Rank.IconUrl.init -> void
GuildWars2.Pvp.Ranks.Rank.Id.get -> int
GuildWars2.Pvp.Ranks.Rank.Id.init -> void
GuildWars2.Pvp.Ranks.Rank.Levels.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Pvp.Ranks.Level!>!
GuildWars2.Pvp.Ranks.Rank.Levels.init -> void
GuildWars2.Pvp.Ranks.Rank.MaxRank.get -> int
GuildWars2.Pvp.Ranks.Rank.MaxRank.init -> void
GuildWars2.Pvp.Ranks.Rank.MinRank.get -> int
GuildWars2.Pvp.Ranks.Rank.MinRank.init -> void
GuildWars2.Pvp.Ranks.Rank.Name.get -> string!
GuildWars2.Pvp.Ranks.Rank.Name.init -> void
GuildWars2.Pvp.Ranks.Rank.Rank() -> void
GuildWars2.Pvp.Seasons.Division
GuildWars2.Pvp.Seasons.Division.<Clone>$() -> GuildWars2.Pvp.Seasons.Division!
GuildWars2.Pvp.Seasons.Division.Division() -> void
GuildWars2.Pvp.Seasons.Division.Equals(GuildWars2.Pvp.Seasons.Division? other) -> bool
GuildWars2.Pvp.Seasons.Division.Flags.get -> GuildWars2.Pvp.Seasons.DivisionFlags!
GuildWars2.Pvp.Seasons.Division.Flags.init -> void
GuildWars2.Pvp.Seasons.Division.LargeIconHref.get -> string!
GuildWars2.Pvp.Seasons.Division.LargeIconHref.init -> void
GuildWars2.Pvp.Seasons.Division.LargeIconUrl.get -> System.Uri!
GuildWars2.Pvp.Seasons.Division.LargeIconUrl.init -> void
GuildWars2.Pvp.Seasons.Division.Name.get -> string!
GuildWars2.Pvp.Seasons.Division.Name.init -> void
GuildWars2.Pvp.Seasons.Division.PipIconHref.get -> string!
GuildWars2.Pvp.Seasons.Division.PipIconHref.init -> void
GuildWars2.Pvp.Seasons.Division.PipIconUrl.get -> System.Uri!
GuildWars2.Pvp.Seasons.Division.PipIconUrl.init -> void
GuildWars2.Pvp.Seasons.Division.SmallIconHref.get -> string!
GuildWars2.Pvp.Seasons.Division.SmallIconHref.init -> void
GuildWars2.Pvp.Seasons.Division.SmallIconUrl.get -> System.Uri!
GuildWars2.Pvp.Seasons.Division.SmallIconUrl.init -> void
GuildWars2.Pvp.Seasons.Division.Tiers.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.DivisionTier!>!
GuildWars2.Pvp.Seasons.Division.Tiers.init -> void
GuildWars2.Pvp.Seasons.DivisionFlags
GuildWars2.Pvp.Seasons.DivisionFlags.CanLosePoints.get -> bool
GuildWars2.Pvp.Seasons.DivisionFlags.CanLosePoints.init -> void
GuildWars2.Pvp.Seasons.DivisionFlags.CanLoseTiers.get -> bool
GuildWars2.Pvp.Seasons.DivisionFlags.CanLoseTiers.init -> void
GuildWars2.Pvp.Seasons.DivisionFlags.DivisionFlags() -> void
GuildWars2.Pvp.Seasons.DivisionFlags.Equals(GuildWars2.Pvp.Seasons.DivisionFlags? other) -> bool
GuildWars2.Pvp.Seasons.DivisionFlags.Repeatable.get -> bool
GuildWars2.Pvp.Seasons.DivisionFlags.Repeatable.init -> void
GuildWars2.Pvp.Seasons.DivisionTier
GuildWars2.Pvp.Seasons.DivisionTier.<Clone>$() -> GuildWars2.Pvp.Seasons.DivisionTier!
GuildWars2.Pvp.Seasons.DivisionTier.DivisionTier() -> void
GuildWars2.Pvp.Seasons.DivisionTier.Equals(GuildWars2.Pvp.Seasons.DivisionTier? other) -> bool
GuildWars2.Pvp.Seasons.DivisionTier.Points.get -> int
GuildWars2.Pvp.Seasons.DivisionTier.Points.init -> void
GuildWars2.Pvp.Seasons.Leaderboard
GuildWars2.Pvp.Seasons.Leaderboard.<Clone>$() -> GuildWars2.Pvp.Seasons.Leaderboard!
GuildWars2.Pvp.Seasons.Leaderboard.Equals(GuildWars2.Pvp.Seasons.Leaderboard? other) -> bool
GuildWars2.Pvp.Seasons.Leaderboard.Leaderboard() -> void
GuildWars2.Pvp.Seasons.Leaderboard.Scorings.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.LeaderboardScoring!>!
GuildWars2.Pvp.Seasons.Leaderboard.Scorings.init -> void
GuildWars2.Pvp.Seasons.Leaderboard.Settings.get -> GuildWars2.Pvp.Seasons.LeaderboardSetting!
GuildWars2.Pvp.Seasons.Leaderboard.Settings.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry
GuildWars2.Pvp.Seasons.LeaderboardEntry.<Clone>$() -> GuildWars2.Pvp.Seasons.LeaderboardEntry!
GuildWars2.Pvp.Seasons.LeaderboardEntry.Date.get -> System.DateTimeOffset
GuildWars2.Pvp.Seasons.LeaderboardEntry.Date.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.Equals(GuildWars2.Pvp.Seasons.LeaderboardEntry? other) -> bool
GuildWars2.Pvp.Seasons.LeaderboardEntry.GuildId.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardEntry.GuildId.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.LeaderboardEntry() -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.Name.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardEntry.Name.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.Rank.get -> int
GuildWars2.Pvp.Seasons.LeaderboardEntry.Rank.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.Scores.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.Score!>!
GuildWars2.Pvp.Seasons.LeaderboardEntry.Scores.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.TeamId.get -> int?
GuildWars2.Pvp.Seasons.LeaderboardEntry.TeamId.init -> void
GuildWars2.Pvp.Seasons.LeaderboardEntry.TeamName.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardEntry.TeamName.init -> void
GuildWars2.Pvp.Seasons.LeaderboardGroup
GuildWars2.Pvp.Seasons.LeaderboardGroup.<Clone>$() -> GuildWars2.Pvp.Seasons.LeaderboardGroup!
GuildWars2.Pvp.Seasons.LeaderboardGroup.Equals(GuildWars2.Pvp.Seasons.LeaderboardGroup? other) -> bool
GuildWars2.Pvp.Seasons.LeaderboardGroup.Guild.get -> GuildWars2.Pvp.Seasons.Leaderboard?
GuildWars2.Pvp.Seasons.LeaderboardGroup.Guild.init -> void
GuildWars2.Pvp.Seasons.LeaderboardGroup.Ladder.get -> GuildWars2.Pvp.Seasons.Leaderboard?
GuildWars2.Pvp.Seasons.LeaderboardGroup.Ladder.init -> void
GuildWars2.Pvp.Seasons.LeaderboardGroup.LeaderboardGroup() -> void
GuildWars2.Pvp.Seasons.LeaderboardGroup.Legendary.get -> GuildWars2.Pvp.Seasons.Leaderboard?
GuildWars2.Pvp.Seasons.LeaderboardGroup.Legendary.init -> void
GuildWars2.Pvp.Seasons.LeaderboardScoring
GuildWars2.Pvp.Seasons.LeaderboardScoring.<Clone>$() -> GuildWars2.Pvp.Seasons.LeaderboardScoring!
GuildWars2.Pvp.Seasons.LeaderboardScoring.Description.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardScoring.Description.init -> void
GuildWars2.Pvp.Seasons.LeaderboardScoring.Equals(GuildWars2.Pvp.Seasons.LeaderboardScoring? other) -> bool
GuildWars2.Pvp.Seasons.LeaderboardScoring.Id.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardScoring.Id.init -> void
GuildWars2.Pvp.Seasons.LeaderboardScoring.LeaderboardScoring() -> void
GuildWars2.Pvp.Seasons.LeaderboardScoring.Name.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardScoring.Name.init -> void
GuildWars2.Pvp.Seasons.LeaderboardScoring.Ordering.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardScoring.Ordering.init -> void
GuildWars2.Pvp.Seasons.LeaderboardScoring.Type.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardScoring.Type.init -> void
GuildWars2.Pvp.Seasons.LeaderboardSetting
GuildWars2.Pvp.Seasons.LeaderboardSetting.<Clone>$() -> GuildWars2.Pvp.Seasons.LeaderboardSetting!
GuildWars2.Pvp.Seasons.LeaderboardSetting.Equals(GuildWars2.Pvp.Seasons.LeaderboardSetting? other) -> bool
GuildWars2.Pvp.Seasons.LeaderboardSetting.LeaderboardSetting() -> void
GuildWars2.Pvp.Seasons.LeaderboardSetting.Name.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardSetting.Name.init -> void
GuildWars2.Pvp.Seasons.LeaderboardSetting.ScoringId.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardSetting.ScoringId.init -> void
GuildWars2.Pvp.Seasons.LeaderboardSetting.Tiers.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.LeaderboardTier!>!
GuildWars2.Pvp.Seasons.LeaderboardSetting.Tiers.init -> void
GuildWars2.Pvp.Seasons.LeaderboardTier
GuildWars2.Pvp.Seasons.LeaderboardTier.<Clone>$() -> GuildWars2.Pvp.Seasons.LeaderboardTier!
GuildWars2.Pvp.Seasons.LeaderboardTier.Color.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardTier.Color.init -> void
GuildWars2.Pvp.Seasons.LeaderboardTier.Equals(GuildWars2.Pvp.Seasons.LeaderboardTier? other) -> bool
GuildWars2.Pvp.Seasons.LeaderboardTier.Kind.get -> GuildWars2.Extensible<GuildWars2.Pvp.Seasons.LeaderboardTierKind>?
GuildWars2.Pvp.Seasons.LeaderboardTier.Kind.init -> void
GuildWars2.Pvp.Seasons.LeaderboardTier.LeaderboardTier() -> void
GuildWars2.Pvp.Seasons.LeaderboardTier.Name.get -> string!
GuildWars2.Pvp.Seasons.LeaderboardTier.Name.init -> void
GuildWars2.Pvp.Seasons.LeaderboardTier.Range.get -> GuildWars2.Pvp.Seasons.LeaderboardTierRange!
GuildWars2.Pvp.Seasons.LeaderboardTier.Range.init -> void
GuildWars2.Pvp.Seasons.LeaderboardTierKind
GuildWars2.Pvp.Seasons.LeaderboardTierKind.Rank = 0 -> GuildWars2.Pvp.Seasons.LeaderboardTierKind
GuildWars2.Pvp.Seasons.LeaderboardTierRange
GuildWars2.Pvp.Seasons.LeaderboardTierRange.<Clone>$() -> GuildWars2.Pvp.Seasons.LeaderboardTierRange!
GuildWars2.Pvp.Seasons.LeaderboardTierRange.Equals(GuildWars2.Pvp.Seasons.LeaderboardTierRange? other) -> bool
GuildWars2.Pvp.Seasons.LeaderboardTierRange.LeaderboardTierRange() -> void
GuildWars2.Pvp.Seasons.LeaderboardTierRange.Maximum.get -> double
GuildWars2.Pvp.Seasons.LeaderboardTierRange.Maximum.init -> void
GuildWars2.Pvp.Seasons.LeaderboardTierRange.Minimum.get -> double
GuildWars2.Pvp.Seasons.LeaderboardTierRange.Minimum.init -> void
GuildWars2.Pvp.Seasons.Score
GuildWars2.Pvp.Seasons.Score.<Clone>$() -> GuildWars2.Pvp.Seasons.Score!
GuildWars2.Pvp.Seasons.Score.Equals(GuildWars2.Pvp.Seasons.Score? other) -> bool
GuildWars2.Pvp.Seasons.Score.Id.get -> string!
GuildWars2.Pvp.Seasons.Score.Id.init -> void
GuildWars2.Pvp.Seasons.Score.Score() -> void
GuildWars2.Pvp.Seasons.Score.Value.get -> int
GuildWars2.Pvp.Seasons.Score.Value.init -> void
GuildWars2.Pvp.Seasons.Season
GuildWars2.Pvp.Seasons.Season.<Clone>$() -> GuildWars2.Pvp.Seasons.Season!
GuildWars2.Pvp.Seasons.Season.Active.get -> bool
GuildWars2.Pvp.Seasons.Season.Active.init -> void
GuildWars2.Pvp.Seasons.Season.Divisions.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.Division!>!
GuildWars2.Pvp.Seasons.Season.Divisions.init -> void
GuildWars2.Pvp.Seasons.Season.End.get -> System.DateTime
GuildWars2.Pvp.Seasons.Season.End.init -> void
GuildWars2.Pvp.Seasons.Season.Equals(GuildWars2.Pvp.Seasons.Season? other) -> bool
GuildWars2.Pvp.Seasons.Season.Id.get -> string!
GuildWars2.Pvp.Seasons.Season.Id.init -> void
GuildWars2.Pvp.Seasons.Season.Leaderboards.get -> GuildWars2.Pvp.Seasons.LeaderboardGroup!
GuildWars2.Pvp.Seasons.Season.Leaderboards.init -> void
GuildWars2.Pvp.Seasons.Season.Name.get -> string!
GuildWars2.Pvp.Seasons.Season.Name.init -> void
GuildWars2.Pvp.Seasons.Season.Ranks.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.SkillBadge!>?
GuildWars2.Pvp.Seasons.Season.Ranks.init -> void
GuildWars2.Pvp.Seasons.Season.Season() -> void
GuildWars2.Pvp.Seasons.Season.Start.get -> System.DateTime
GuildWars2.Pvp.Seasons.Season.Start.init -> void
GuildWars2.Pvp.Seasons.SkillBadge
GuildWars2.Pvp.Seasons.SkillBadge.<Clone>$() -> GuildWars2.Pvp.Seasons.SkillBadge!
GuildWars2.Pvp.Seasons.SkillBadge.Description.get -> string!
GuildWars2.Pvp.Seasons.SkillBadge.Description.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.Equals(GuildWars2.Pvp.Seasons.SkillBadge? other) -> bool
GuildWars2.Pvp.Seasons.SkillBadge.IconHref.get -> string!
GuildWars2.Pvp.Seasons.SkillBadge.IconHref.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.IconUrl.get -> System.Uri!
GuildWars2.Pvp.Seasons.SkillBadge.IconUrl.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.Name.get -> string!
GuildWars2.Pvp.Seasons.SkillBadge.Name.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.Overlay.get -> string!
GuildWars2.Pvp.Seasons.SkillBadge.Overlay.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.OverlayUrl.get -> System.Uri!
GuildWars2.Pvp.Seasons.SkillBadge.OverlayUrl.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.SkillBadge() -> void
GuildWars2.Pvp.Seasons.SkillBadge.SmallOverlay.get -> string!
GuildWars2.Pvp.Seasons.SkillBadge.SmallOverlay.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.SmallOverlayUrl.get -> System.Uri!
GuildWars2.Pvp.Seasons.SkillBadge.SmallOverlayUrl.init -> void
GuildWars2.Pvp.Seasons.SkillBadge.Tiers.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Pvp.Seasons.SkillBadgeTier!>!
GuildWars2.Pvp.Seasons.SkillBadge.Tiers.init -> void
GuildWars2.Pvp.Seasons.SkillBadgeTier
GuildWars2.Pvp.Seasons.SkillBadgeTier.<Clone>$() -> GuildWars2.Pvp.Seasons.SkillBadgeTier!
GuildWars2.Pvp.Seasons.SkillBadgeTier.Equals(GuildWars2.Pvp.Seasons.SkillBadgeTier? other) -> bool
GuildWars2.Pvp.Seasons.SkillBadgeTier.Rating.get -> int
GuildWars2.Pvp.Seasons.SkillBadgeTier.Rating.init -> void
GuildWars2.Pvp.Seasons.SkillBadgeTier.SkillBadgeTier() -> void
GuildWars2.Pvp.Standings.BestStanding
GuildWars2.Pvp.Standings.BestStanding.<Clone>$() -> GuildWars2.Pvp.Standings.BestStanding!
GuildWars2.Pvp.Standings.BestStanding.BestStanding() -> void
GuildWars2.Pvp.Standings.BestStanding.Division.get -> int
GuildWars2.Pvp.Standings.BestStanding.Division.init -> void
GuildWars2.Pvp.Standings.BestStanding.Equals(GuildWars2.Pvp.Standings.BestStanding? other) -> bool
GuildWars2.Pvp.Standings.BestStanding.Pips.get -> int
GuildWars2.Pvp.Standings.BestStanding.Pips.init -> void
GuildWars2.Pvp.Standings.BestStanding.Repeats.get -> int
GuildWars2.Pvp.Standings.BestStanding.Repeats.init -> void
GuildWars2.Pvp.Standings.BestStanding.Tier.get -> int
GuildWars2.Pvp.Standings.BestStanding.Tier.init -> void
GuildWars2.Pvp.Standings.BestStanding.TotalPips.get -> int
GuildWars2.Pvp.Standings.BestStanding.TotalPips.init -> void
GuildWars2.Pvp.Standings.CurrentStanding
GuildWars2.Pvp.Standings.CurrentStanding.<Clone>$() -> GuildWars2.Pvp.Standings.CurrentStanding!
GuildWars2.Pvp.Standings.CurrentStanding.CurrentStanding() -> void
GuildWars2.Pvp.Standings.CurrentStanding.Decay.get -> int?
GuildWars2.Pvp.Standings.CurrentStanding.Decay.init -> void
GuildWars2.Pvp.Standings.CurrentStanding.Division.get -> int
GuildWars2.Pvp.Standings.CurrentStanding.Division.init -> void
GuildWars2.Pvp.Standings.CurrentStanding.EffectiveRating.get -> int?
GuildWars2.Pvp.Standings.CurrentStanding.Equals(GuildWars2.Pvp.Standings.CurrentStanding? other) -> bool
GuildWars2.Pvp.Standings.CurrentStanding.Pips.get -> int
GuildWars2.Pvp.Standings.CurrentStanding.Pips.init -> void
GuildWars2.Pvp.Standings.CurrentStanding.Rating.get -> int?
GuildWars2.Pvp.Standings.CurrentStanding.Rating.init -> void
GuildWars2.Pvp.Standings.CurrentStanding.Repeats.get -> int
GuildWars2.Pvp.Standings.CurrentStanding.Repeats.init -> void
GuildWars2.Pvp.Standings.CurrentStanding.Tier.get -> int
GuildWars2.Pvp.Standings.CurrentStanding.Tier.init -> void
GuildWars2.Pvp.Standings.CurrentStanding.TotalPips.get -> int
GuildWars2.Pvp.Standings.CurrentStanding.TotalPips.init -> void
GuildWars2.Pvp.Standings.Standing
GuildWars2.Pvp.Standings.Standing.<Clone>$() -> GuildWars2.Pvp.Standings.Standing!
GuildWars2.Pvp.Standings.Standing.Best.get -> GuildWars2.Pvp.Standings.BestStanding!
GuildWars2.Pvp.Standings.Standing.Best.init -> void
GuildWars2.Pvp.Standings.Standing.Current.get -> GuildWars2.Pvp.Standings.CurrentStanding!
GuildWars2.Pvp.Standings.Standing.Current.init -> void
GuildWars2.Pvp.Standings.Standing.Equals(GuildWars2.Pvp.Standings.Standing? other) -> bool
GuildWars2.Pvp.Standings.Standing.SeasonId.get -> string!
GuildWars2.Pvp.Standings.Standing.SeasonId.init -> void
GuildWars2.Pvp.Standings.Standing.Standing() -> void
GuildWars2.Pvp.Stats.AccountStats
GuildWars2.Pvp.Stats.AccountStats.<Clone>$() -> GuildWars2.Pvp.Stats.AccountStats!
GuildWars2.Pvp.Stats.AccountStats.AccountStats() -> void
GuildWars2.Pvp.Stats.AccountStats.Aggregate.get -> GuildWars2.Pvp.Stats.Results!
GuildWars2.Pvp.Stats.AccountStats.Aggregate.init -> void
GuildWars2.Pvp.Stats.AccountStats.Equals(GuildWars2.Pvp.Stats.AccountStats? other) -> bool
GuildWars2.Pvp.Stats.AccountStats.Ladders.get -> GuildWars2.Pvp.Stats.Ladders!
GuildWars2.Pvp.Stats.AccountStats.Ladders.init -> void
GuildWars2.Pvp.Stats.AccountStats.Professions.get -> System.Collections.Generic.IReadOnlyDictionary<GuildWars2.Hero.ProfessionName, GuildWars2.Pvp.Stats.Results!>!
GuildWars2.Pvp.Stats.AccountStats.Professions.init -> void
GuildWars2.Pvp.Stats.AccountStats.PvpRank.get -> int
GuildWars2.Pvp.Stats.AccountStats.PvpRank.init -> void
GuildWars2.Pvp.Stats.AccountStats.PvpRankPoints.get -> int
GuildWars2.Pvp.Stats.AccountStats.PvpRankPoints.init -> void
GuildWars2.Pvp.Stats.AccountStats.PvpRankRollovers.get -> int
GuildWars2.Pvp.Stats.AccountStats.PvpRankRollovers.init -> void
GuildWars2.Pvp.Stats.Ladders
GuildWars2.Pvp.Stats.Ladders.<Clone>$() -> GuildWars2.Pvp.Stats.Ladders!
GuildWars2.Pvp.Stats.Ladders.Equals(GuildWars2.Pvp.Stats.Ladders? other) -> bool
GuildWars2.Pvp.Stats.Ladders.Ladders() -> void
GuildWars2.Pvp.Stats.Ladders.None.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.None.init -> void
GuildWars2.Pvp.Stats.Ladders.PushRanked.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.PushRanked.init -> void
GuildWars2.Pvp.Stats.Ladders.Ranked.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.Ranked.init -> void
GuildWars2.Pvp.Stats.Ladders.Ranked2v2.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.Ranked2v2.init -> void
GuildWars2.Pvp.Stats.Ladders.Ranked3v3.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.Ranked3v3.init -> void
GuildWars2.Pvp.Stats.Ladders.SoloArenaRated.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.SoloArenaRated.init -> void
GuildWars2.Pvp.Stats.Ladders.TeamArenaRated.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.TeamArenaRated.init -> void
GuildWars2.Pvp.Stats.Ladders.Unranked.get -> GuildWars2.Pvp.Stats.Results?
GuildWars2.Pvp.Stats.Ladders.Unranked.init -> void
GuildWars2.Pvp.Stats.Results
GuildWars2.Pvp.Stats.Results.<Clone>$() -> GuildWars2.Pvp.Stats.Results!
GuildWars2.Pvp.Stats.Results.Byes.get -> int
GuildWars2.Pvp.Stats.Results.Byes.init -> void
GuildWars2.Pvp.Stats.Results.Desertions.get -> int
GuildWars2.Pvp.Stats.Results.Desertions.init -> void
GuildWars2.Pvp.Stats.Results.Equals(GuildWars2.Pvp.Stats.Results? other) -> bool
GuildWars2.Pvp.Stats.Results.Forfeits.get -> int
GuildWars2.Pvp.Stats.Results.Forfeits.init -> void
GuildWars2.Pvp.Stats.Results.Losses.get -> int
GuildWars2.Pvp.Stats.Results.Losses.init -> void
GuildWars2.Pvp.Stats.Results.Results() -> void
GuildWars2.Pvp.Stats.Results.Wins.get -> int
GuildWars2.Pvp.Stats.Results.Wins.init -> void
GuildWars2.Quaggans.Quaggan
GuildWars2.Quaggans.Quaggan.<Clone>$() -> GuildWars2.Quaggans.Quaggan!
GuildWars2.Quaggans.Quaggan.Equals(GuildWars2.Quaggans.Quaggan? other) -> bool
GuildWars2.Quaggans.Quaggan.Id.get -> string!
GuildWars2.Quaggans.Quaggan.Id.init -> void
GuildWars2.Quaggans.Quaggan.ImageHref.get -> string!
GuildWars2.Quaggans.Quaggan.ImageHref.init -> void
GuildWars2.Quaggans.Quaggan.ImageUrl.get -> System.Uri!
GuildWars2.Quaggans.Quaggan.ImageUrl.init -> void
GuildWars2.Quaggans.Quaggan.Quaggan() -> void
GuildWars2.Quaggans.QuaggansClient
GuildWars2.Quaggans.QuaggansClient.GetQuagganById(string! quagganId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Quaggans.Quaggan! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Quaggans.QuaggansClient.GetQuaggans(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Quaggans.Quaggan!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Quaggans.QuaggansClient.GetQuaggansByIds(System.Collections.Generic.IEnumerable<string!>! quagganIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Quaggans.Quaggan!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Quaggans.QuaggansClient.GetQuaggansByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Quaggans.Quaggan!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Quaggans.QuaggansClient.GetQuaggansIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Quaggans.QuaggansClient.QuaggansClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.SchemaVersion
GuildWars2.SchemaVersion.Version.get -> string!
GuildWars2.WizardsVault.AstralRewards.AstralReward
GuildWars2.WizardsVault.AstralRewards.AstralReward.<Clone>$() -> GuildWars2.WizardsVault.AstralRewards.AstralReward!
GuildWars2.WizardsVault.AstralRewards.AstralReward.AstralReward() -> void
GuildWars2.WizardsVault.AstralRewards.AstralReward.Cost.get -> int
GuildWars2.WizardsVault.AstralRewards.AstralReward.Cost.init -> void
GuildWars2.WizardsVault.AstralRewards.AstralReward.Equals(GuildWars2.WizardsVault.AstralRewards.AstralReward? other) -> bool
GuildWars2.WizardsVault.AstralRewards.AstralReward.GetChatLink() -> GuildWars2.Chat.ItemLink!
GuildWars2.WizardsVault.AstralRewards.AstralReward.Id.get -> int
GuildWars2.WizardsVault.AstralRewards.AstralReward.Id.init -> void
GuildWars2.WizardsVault.AstralRewards.AstralReward.ItemCount.get -> int
GuildWars2.WizardsVault.AstralRewards.AstralReward.ItemCount.init -> void
GuildWars2.WizardsVault.AstralRewards.AstralReward.ItemId.get -> int
GuildWars2.WizardsVault.AstralRewards.AstralReward.ItemId.init -> void
GuildWars2.WizardsVault.AstralRewards.AstralReward.Kind.get -> GuildWars2.Extensible<GuildWars2.WizardsVault.RewardKind>
GuildWars2.WizardsVault.AstralRewards.AstralReward.Kind.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.<Clone>$() -> GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward!
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Available.get -> int?
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Cost.get -> int
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Cost.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Equals(GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward? other) -> bool
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.GetChatLink() -> GuildWars2.Chat.ItemLink!
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Id.get -> int
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Id.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.ItemCount.get -> int
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.ItemCount.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.ItemId.get -> int
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.ItemId.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Kind.get -> GuildWars2.Extensible<GuildWars2.WizardsVault.RewardKind>
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Kind.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Purchased.get -> int?
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Purchased.init -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.PurchasedAstralReward() -> void
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.PurchaseLimit.get -> int?
GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.PurchaseLimit.init -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.<Clone>$() -> GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress!
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Claimed.get -> bool
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Claimed.init -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.DailyObjectivesProgress() -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Equals(GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress? other) -> bool
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Goal.get -> int
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Goal.init -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Objectives.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.WizardsVault.Objectives.ObjectiveProgress!>!
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Objectives.init -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Progress.get -> int
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Progress.init -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.RewardAcclaim.get -> int
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.RewardAcclaim.init -> void
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.RewardItemId.get -> int
GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.RewardItemId.init -> void
GuildWars2.WizardsVault.Objectives.Objective
GuildWars2.WizardsVault.Objectives.Objective.<Clone>$() -> GuildWars2.WizardsVault.Objectives.Objective!
GuildWars2.WizardsVault.Objectives.Objective.Equals(GuildWars2.WizardsVault.Objectives.Objective? other) -> bool
GuildWars2.WizardsVault.Objectives.Objective.Id.get -> int
GuildWars2.WizardsVault.Objectives.Objective.Id.init -> void
GuildWars2.WizardsVault.Objectives.Objective.Objective() -> void
GuildWars2.WizardsVault.Objectives.Objective.RewardAcclaim.get -> int
GuildWars2.WizardsVault.Objectives.Objective.RewardAcclaim.init -> void
GuildWars2.WizardsVault.Objectives.Objective.Title.get -> string!
GuildWars2.WizardsVault.Objectives.Objective.Title.init -> void
GuildWars2.WizardsVault.Objectives.Objective.Track.get -> GuildWars2.Extensible<GuildWars2.WizardsVault.ObjectiveTrack>
GuildWars2.WizardsVault.Objectives.Objective.Track.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.<Clone>$() -> GuildWars2.WizardsVault.Objectives.ObjectiveProgress!
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Claimed.get -> bool
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Claimed.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Equals(GuildWars2.WizardsVault.Objectives.ObjectiveProgress? other) -> bool
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Goal.get -> int
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Goal.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Id.get -> int
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Id.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.ObjectiveProgress() -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Progress.get -> int
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Progress.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.RewardAcclaim.get -> int
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.RewardAcclaim.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Title.get -> string!
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Title.init -> void
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Track.get -> GuildWars2.Extensible<GuildWars2.WizardsVault.ObjectiveTrack>
GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Track.init -> void
GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress
GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.<Clone>$() -> GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress!
GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.Equals(GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress? other) -> bool
GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.Objectives.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.WizardsVault.Objectives.ObjectiveProgress!>!
GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.Objectives.init -> void
GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.SpecialObjectivesProgress() -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.<Clone>$() -> GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress!
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Claimed.get -> bool
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Claimed.init -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Equals(GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress? other) -> bool
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Goal.get -> int
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Goal.init -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Objectives.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.WizardsVault.Objectives.ObjectiveProgress!>!
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Objectives.init -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Progress.get -> int
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Progress.init -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.RewardAcclaim.get -> int
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.RewardAcclaim.init -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.RewardItemId.get -> int
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.RewardItemId.init -> void
GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.WeeklyObjectivesProgress() -> void
GuildWars2.WizardsVault.ObjectiveTrack
GuildWars2.WizardsVault.ObjectiveTrack.PvE = 1 -> GuildWars2.WizardsVault.ObjectiveTrack
GuildWars2.WizardsVault.ObjectiveTrack.PvP = 2 -> GuildWars2.WizardsVault.ObjectiveTrack
GuildWars2.WizardsVault.ObjectiveTrack.WvW = 3 -> GuildWars2.WizardsVault.ObjectiveTrack
GuildWars2.WizardsVault.RewardKind
GuildWars2.WizardsVault.RewardKind.Featured = 2 -> GuildWars2.WizardsVault.RewardKind
GuildWars2.WizardsVault.RewardKind.Legacy = 3 -> GuildWars2.WizardsVault.RewardKind
GuildWars2.WizardsVault.RewardKind.Normal = 1 -> GuildWars2.WizardsVault.RewardKind
GuildWars2.WizardsVault.Seasons.Season
GuildWars2.WizardsVault.Seasons.Season.<Clone>$() -> GuildWars2.WizardsVault.Seasons.Season!
GuildWars2.WizardsVault.Seasons.Season.AstralRewardIds.get -> System.Collections.Generic.HashSet<int>!
GuildWars2.WizardsVault.Seasons.Season.AstralRewardIds.init -> void
GuildWars2.WizardsVault.Seasons.Season.End.get -> System.DateTimeOffset
GuildWars2.WizardsVault.Seasons.Season.End.init -> void
GuildWars2.WizardsVault.Seasons.Season.Equals(GuildWars2.WizardsVault.Seasons.Season? other) -> bool
GuildWars2.WizardsVault.Seasons.Season.ObjectiveIds.get -> System.Collections.Generic.HashSet<int>!
GuildWars2.WizardsVault.Seasons.Season.ObjectiveIds.init -> void
GuildWars2.WizardsVault.Seasons.Season.Season() -> void
GuildWars2.WizardsVault.Seasons.Season.Start.get -> System.DateTimeOffset
GuildWars2.WizardsVault.Seasons.Season.Start.init -> void
GuildWars2.WizardsVault.Seasons.Season.Title.get -> string!
GuildWars2.WizardsVault.Seasons.Season.Title.init -> void
GuildWars2.WizardsVault.WizardsVaultClient
GuildWars2.WizardsVault.WizardsVaultClient.GetAstralRewardById(int astralRewardId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.WizardsVault.AstralRewards.AstralReward! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetAstralRewards(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.AstralRewards.AstralReward!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetAstralRewardsByIds(System.Collections.Generic.IEnumerable<int>! astralRewardIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.AstralRewards.AstralReward!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetAstralRewardsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.AstralRewards.AstralReward!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetAstralRewardsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetDailyObjectivesProgress(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetObjectiveById(int objectiveId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.WizardsVault.Objectives.Objective! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetObjectives(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.Objectives.Objective!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetObjectivesByIds(System.Collections.Generic.IEnumerable<int>! objectiveIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.Objectives.Objective!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetObjectivesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.Objectives.Objective!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetObjectivesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetPurchasedAstralRewards(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetSeason(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.WizardsVault.Seasons.Season! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetSpecialObjectivesProgress(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.GetWeeklyObjectivesProgress(string? accessToken, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.WizardsVault.WizardsVaultClient.WizardsVaultClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Worlds.World
GuildWars2.Worlds.World.<Clone>$() -> GuildWars2.Worlds.World!
GuildWars2.Worlds.World.Equals(GuildWars2.Worlds.World? other) -> bool
GuildWars2.Worlds.World.Id.get -> int
GuildWars2.Worlds.World.Id.init -> void
GuildWars2.Worlds.World.Language.get -> GuildWars2.Language!
GuildWars2.Worlds.World.Name.get -> string!
GuildWars2.Worlds.World.Name.init -> void
GuildWars2.Worlds.World.Population.get -> GuildWars2.Extensible<GuildWars2.Worlds.WorldPopulation>
GuildWars2.Worlds.World.Population.init -> void
GuildWars2.Worlds.World.Region.get -> GuildWars2.Worlds.WorldRegion
GuildWars2.Worlds.World.TransferFee.get -> int
GuildWars2.Worlds.World.World() -> void
GuildWars2.Worlds.WorldPopulation
GuildWars2.Worlds.WorldPopulation.Full = 5 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Worlds.WorldPopulation.High = 3 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Worlds.WorldPopulation.Low = 1 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Worlds.WorldPopulation.Medium = 2 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Worlds.WorldPopulation.VeryHigh = 4 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Worlds.WorldRegion
GuildWars2.Worlds.WorldRegion.Europe = 2 -> GuildWars2.Worlds.WorldRegion
GuildWars2.Worlds.WorldRegion.None = 0 -> GuildWars2.Worlds.WorldRegion
GuildWars2.Worlds.WorldRegion.NorthAmerica = 1 -> GuildWars2.Worlds.WorldRegion
GuildWars2.Worlds.WorldsClient
GuildWars2.Worlds.WorldsClient.GetWorldById(int worldId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Worlds.World! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Worlds.WorldsClient.GetWorlds(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Worlds.World!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Worlds.WorldsClient.GetWorldsByIds(System.Collections.Generic.IEnumerable<int>! worldIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Worlds.World!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Worlds.WorldsClient.GetWorldsByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Worlds.World!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Worlds.WorldsClient.GetWorldsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Worlds.WorldsClient.WorldsClient(System.Net.Http.HttpClient! httpClient) -> void
GuildWars2.Wvw.Abilities.Ability
GuildWars2.Wvw.Abilities.Ability.<Clone>$() -> GuildWars2.Wvw.Abilities.Ability!
GuildWars2.Wvw.Abilities.Ability.Ability() -> void
GuildWars2.Wvw.Abilities.Ability.Description.get -> string!
GuildWars2.Wvw.Abilities.Ability.Description.init -> void
GuildWars2.Wvw.Abilities.Ability.Equals(GuildWars2.Wvw.Abilities.Ability? other) -> bool
GuildWars2.Wvw.Abilities.Ability.IconHref.get -> string!
GuildWars2.Wvw.Abilities.Ability.IconHref.init -> void
GuildWars2.Wvw.Abilities.Ability.IconUrl.get -> System.Uri!
GuildWars2.Wvw.Abilities.Ability.IconUrl.init -> void
GuildWars2.Wvw.Abilities.Ability.Id.get -> int
GuildWars2.Wvw.Abilities.Ability.Id.init -> void
GuildWars2.Wvw.Abilities.Ability.Name.get -> string!
GuildWars2.Wvw.Abilities.Ability.Name.init -> void
GuildWars2.Wvw.Abilities.Ability.Ranks.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Wvw.Abilities.AbilityRank!>!
GuildWars2.Wvw.Abilities.Ability.Ranks.init -> void
GuildWars2.Wvw.Abilities.AbilityRank
GuildWars2.Wvw.Abilities.AbilityRank.<Clone>$() -> GuildWars2.Wvw.Abilities.AbilityRank!
GuildWars2.Wvw.Abilities.AbilityRank.AbilityRank() -> void
GuildWars2.Wvw.Abilities.AbilityRank.Cost.get -> int
GuildWars2.Wvw.Abilities.AbilityRank.Cost.init -> void
GuildWars2.Wvw.Abilities.AbilityRank.Effect.get -> string!
GuildWars2.Wvw.Abilities.AbilityRank.Effect.init -> void
GuildWars2.Wvw.Abilities.AbilityRank.Equals(GuildWars2.Wvw.Abilities.AbilityRank? other) -> bool
GuildWars2.Wvw.Guilds.AccountWvwGuild
GuildWars2.Wvw.Guilds.AccountWvwGuild.<Clone>$() -> GuildWars2.Wvw.Guilds.AccountWvwGuild!
GuildWars2.Wvw.Guilds.AccountWvwGuild.AccountWvwGuild() -> void
GuildWars2.Wvw.Guilds.AccountWvwGuild.Equals(GuildWars2.Wvw.Guilds.AccountWvwGuild? other) -> bool
GuildWars2.Wvw.Guilds.AccountWvwGuild.GuildId.get -> string?
GuildWars2.Wvw.Guilds.AccountWvwGuild.GuildId.init -> void
GuildWars2.Wvw.Guilds.AccountWvwGuild.TeamId.get -> int?
GuildWars2.Wvw.Guilds.AccountWvwGuild.TeamId.init -> void
GuildWars2.Wvw.Guilds.WvwGuild
GuildWars2.Wvw.Guilds.WvwGuild.<Clone>$() -> GuildWars2.Wvw.Guilds.WvwGuild!
GuildWars2.Wvw.Guilds.WvwGuild.Equals(GuildWars2.Wvw.Guilds.WvwGuild? other) -> bool
GuildWars2.Wvw.Guilds.WvwGuild.Name.get -> string!
GuildWars2.Wvw.Guilds.WvwGuild.Name.init -> void
GuildWars2.Wvw.Guilds.WvwGuild.TeamId.get -> string!
GuildWars2.Wvw.Guilds.WvwGuild.TeamId.init -> void
GuildWars2.Wvw.Guilds.WvwGuild.WvwGuild() -> void
GuildWars2.Wvw.Matches.AllWorlds
GuildWars2.Wvw.Matches.AllWorlds.<Clone>$() -> GuildWars2.Wvw.Matches.AllWorlds!
GuildWars2.Wvw.Matches.AllWorlds.AllWorlds() -> void
GuildWars2.Wvw.Matches.AllWorlds.Blue.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.AllWorlds.Blue.init -> void
GuildWars2.Wvw.Matches.AllWorlds.Equals(GuildWars2.Wvw.Matches.AllWorlds? other) -> bool
GuildWars2.Wvw.Matches.AllWorlds.Green.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.AllWorlds.Green.init -> void
GuildWars2.Wvw.Matches.AllWorlds.Red.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.AllWorlds.Red.init -> void
GuildWars2.Wvw.Matches.Bonus
GuildWars2.Wvw.Matches.Bonus.<Clone>$() -> GuildWars2.Wvw.Matches.Bonus!
GuildWars2.Wvw.Matches.Bonus.Bonus() -> void
GuildWars2.Wvw.Matches.Bonus.Equals(GuildWars2.Wvw.Matches.Bonus? other) -> bool
GuildWars2.Wvw.Matches.Bonus.Kind.get -> GuildWars2.Extensible<GuildWars2.Wvw.Matches.BonusKind>
GuildWars2.Wvw.Matches.Bonus.Kind.init -> void
GuildWars2.Wvw.Matches.Bonus.Owner.get -> GuildWars2.Extensible<GuildWars2.Wvw.TeamColor>
GuildWars2.Wvw.Matches.Bonus.Owner.init -> void
GuildWars2.Wvw.Matches.BonusKind
GuildWars2.Wvw.Matches.BonusKind.Bloodlust = 1 -> GuildWars2.Wvw.Matches.BonusKind
GuildWars2.Wvw.Matches.Distribution
GuildWars2.Wvw.Matches.Distribution.<Clone>$() -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Distribution.Blue.get -> int
GuildWars2.Wvw.Matches.Distribution.Blue.init -> void
GuildWars2.Wvw.Matches.Distribution.Distribution() -> void
GuildWars2.Wvw.Matches.Distribution.Equals(GuildWars2.Wvw.Matches.Distribution? other) -> bool
GuildWars2.Wvw.Matches.Distribution.Green.get -> int
GuildWars2.Wvw.Matches.Distribution.Green.init -> void
GuildWars2.Wvw.Matches.Distribution.Red.get -> int
GuildWars2.Wvw.Matches.Distribution.Red.init -> void
GuildWars2.Wvw.Matches.Map
GuildWars2.Wvw.Matches.Map.<Clone>$() -> GuildWars2.Wvw.Matches.Map!
GuildWars2.Wvw.Matches.Map.Bonuses.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.Bonus!>!
GuildWars2.Wvw.Matches.Map.Bonuses.init -> void
GuildWars2.Wvw.Matches.Map.Deaths.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Map.Deaths.init -> void
GuildWars2.Wvw.Matches.Map.Equals(GuildWars2.Wvw.Matches.Map? other) -> bool
GuildWars2.Wvw.Matches.Map.Id.get -> int
GuildWars2.Wvw.Matches.Map.Id.init -> void
GuildWars2.Wvw.Matches.Map.Kills.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Map.Kills.init -> void
GuildWars2.Wvw.Matches.Map.Kind.get -> GuildWars2.Extensible<GuildWars2.Exploration.Maps.MapKind>
GuildWars2.Wvw.Matches.Map.Kind.init -> void
GuildWars2.Wvw.Matches.Map.Map() -> void
GuildWars2.Wvw.Matches.Map.Objectives.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.OwnedObjective!>!
GuildWars2.Wvw.Matches.Map.Objectives.init -> void
GuildWars2.Wvw.Matches.Map.Scores.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Map.Scores.init -> void
GuildWars2.Wvw.Matches.MapScores
GuildWars2.Wvw.Matches.MapScores.<Clone>$() -> GuildWars2.Wvw.Matches.MapScores!
GuildWars2.Wvw.Matches.MapScores.Equals(GuildWars2.Wvw.Matches.MapScores? other) -> bool
GuildWars2.Wvw.Matches.MapScores.Kind.get -> GuildWars2.Extensible<GuildWars2.Exploration.Maps.MapKind>
GuildWars2.Wvw.Matches.MapScores.Kind.init -> void
GuildWars2.Wvw.Matches.MapScores.MapScores() -> void
GuildWars2.Wvw.Matches.MapScores.Scores.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.MapScores.Scores.init -> void
GuildWars2.Wvw.Matches.Match
GuildWars2.Wvw.Matches.Match.<Clone>$() -> GuildWars2.Wvw.Matches.Match!
GuildWars2.Wvw.Matches.Match.AllWorlds.get -> GuildWars2.Wvw.Matches.AllWorlds!
GuildWars2.Wvw.Matches.Match.AllWorlds.init -> void
GuildWars2.Wvw.Matches.Match.Deaths.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Match.Deaths.init -> void
GuildWars2.Wvw.Matches.Match.EndTime.get -> System.DateTimeOffset
GuildWars2.Wvw.Matches.Match.EndTime.init -> void
GuildWars2.Wvw.Matches.Match.Equals(GuildWars2.Wvw.Matches.Match? other) -> bool
GuildWars2.Wvw.Matches.Match.Id.get -> string!
GuildWars2.Wvw.Matches.Match.Id.init -> void
GuildWars2.Wvw.Matches.Match.Kills.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Match.Kills.init -> void
GuildWars2.Wvw.Matches.Match.Maps.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.Map!>!
GuildWars2.Wvw.Matches.Match.Maps.init -> void
GuildWars2.Wvw.Matches.Match.Match() -> void
GuildWars2.Wvw.Matches.Match.Scores.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Match.Scores.init -> void
GuildWars2.Wvw.Matches.Match.Skirmishes.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.Skirmish!>!
GuildWars2.Wvw.Matches.Match.Skirmishes.init -> void
GuildWars2.Wvw.Matches.Match.StartTime.get -> System.DateTimeOffset
GuildWars2.Wvw.Matches.Match.StartTime.init -> void
GuildWars2.Wvw.Matches.Match.VictoryPoints.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Match.VictoryPoints.init -> void
GuildWars2.Wvw.Matches.Match.Worlds.get -> GuildWars2.Wvw.Matches.Worlds!
GuildWars2.Wvw.Matches.Match.Worlds.init -> void
GuildWars2.Wvw.Matches.Overview.MatchOverview
GuildWars2.Wvw.Matches.Overview.MatchOverview.<Clone>$() -> GuildWars2.Wvw.Matches.Overview.MatchOverview!
GuildWars2.Wvw.Matches.Overview.MatchOverview.AllWorlds.get -> GuildWars2.Wvw.Matches.AllWorlds!
GuildWars2.Wvw.Matches.Overview.MatchOverview.AllWorlds.init -> void
GuildWars2.Wvw.Matches.Overview.MatchOverview.EndTime.get -> System.DateTimeOffset
GuildWars2.Wvw.Matches.Overview.MatchOverview.EndTime.init -> void
GuildWars2.Wvw.Matches.Overview.MatchOverview.Equals(GuildWars2.Wvw.Matches.Overview.MatchOverview? other) -> bool
GuildWars2.Wvw.Matches.Overview.MatchOverview.Id.get -> string!
GuildWars2.Wvw.Matches.Overview.MatchOverview.Id.init -> void
GuildWars2.Wvw.Matches.Overview.MatchOverview.MatchOverview() -> void
GuildWars2.Wvw.Matches.Overview.MatchOverview.StartTime.get -> System.DateTimeOffset
GuildWars2.Wvw.Matches.Overview.MatchOverview.StartTime.init -> void
GuildWars2.Wvw.Matches.Overview.MatchOverview.Worlds.get -> GuildWars2.Wvw.Matches.Worlds!
GuildWars2.Wvw.Matches.Overview.MatchOverview.Worlds.init -> void
GuildWars2.Wvw.Matches.OwnedCamp
GuildWars2.Wvw.Matches.OwnedCamp.ClaimedAt.get -> System.DateTimeOffset?
GuildWars2.Wvw.Matches.OwnedCamp.ClaimedAt.init -> void
GuildWars2.Wvw.Matches.OwnedCamp.ClaimedBy.get -> string!
GuildWars2.Wvw.Matches.OwnedCamp.ClaimedBy.init -> void
GuildWars2.Wvw.Matches.OwnedCamp.Equals(GuildWars2.Wvw.Matches.OwnedCamp? other) -> bool
GuildWars2.Wvw.Matches.OwnedCamp.GuildUpgrades.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.OwnedCamp.GuildUpgrades.init -> void
GuildWars2.Wvw.Matches.OwnedCamp.OwnedCamp() -> void
GuildWars2.Wvw.Matches.OwnedCamp.YaksDelivered.get -> int
GuildWars2.Wvw.Matches.OwnedCamp.YaksDelivered.init -> void
GuildWars2.Wvw.Matches.OwnedCastle
GuildWars2.Wvw.Matches.OwnedCastle.ClaimedAt.get -> System.DateTimeOffset?
GuildWars2.Wvw.Matches.OwnedCastle.ClaimedAt.init -> void
GuildWars2.Wvw.Matches.OwnedCastle.ClaimedBy.get -> string!
GuildWars2.Wvw.Matches.OwnedCastle.ClaimedBy.init -> void
GuildWars2.Wvw.Matches.OwnedCastle.Equals(GuildWars2.Wvw.Matches.OwnedCastle? other) -> bool
GuildWars2.Wvw.Matches.OwnedCastle.GuildUpgrades.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.OwnedCastle.GuildUpgrades.init -> void
GuildWars2.Wvw.Matches.OwnedCastle.OwnedCastle() -> void
GuildWars2.Wvw.Matches.OwnedCastle.YaksDelivered.get -> int
GuildWars2.Wvw.Matches.OwnedCastle.YaksDelivered.init -> void
GuildWars2.Wvw.Matches.OwnedKeep
GuildWars2.Wvw.Matches.OwnedKeep.ClaimedAt.get -> System.DateTimeOffset?
GuildWars2.Wvw.Matches.OwnedKeep.ClaimedAt.init -> void
GuildWars2.Wvw.Matches.OwnedKeep.ClaimedBy.get -> string!
GuildWars2.Wvw.Matches.OwnedKeep.ClaimedBy.init -> void
GuildWars2.Wvw.Matches.OwnedKeep.Equals(GuildWars2.Wvw.Matches.OwnedKeep? other) -> bool
GuildWars2.Wvw.Matches.OwnedKeep.GuildUpgrades.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.OwnedKeep.GuildUpgrades.init -> void
GuildWars2.Wvw.Matches.OwnedKeep.OwnedKeep() -> void
GuildWars2.Wvw.Matches.OwnedKeep.YaksDelivered.get -> int
GuildWars2.Wvw.Matches.OwnedKeep.YaksDelivered.init -> void
GuildWars2.Wvw.Matches.OwnedMercenary
GuildWars2.Wvw.Matches.OwnedMercenary.Equals(GuildWars2.Wvw.Matches.OwnedMercenary? other) -> bool
GuildWars2.Wvw.Matches.OwnedMercenary.OwnedMercenary() -> void
GuildWars2.Wvw.Matches.OwnedObjective
GuildWars2.Wvw.Matches.OwnedObjective.Id.get -> string!
GuildWars2.Wvw.Matches.OwnedObjective.Id.init -> void
GuildWars2.Wvw.Matches.OwnedObjective.LastFlipped.get -> System.DateTimeOffset
GuildWars2.Wvw.Matches.OwnedObjective.LastFlipped.init -> void
GuildWars2.Wvw.Matches.OwnedObjective.OwnedObjective() -> void
GuildWars2.Wvw.Matches.OwnedObjective.OwnedObjective(GuildWars2.Wvw.Matches.OwnedObjective! original) -> void
GuildWars2.Wvw.Matches.OwnedObjective.Owner.get -> GuildWars2.Extensible<GuildWars2.Wvw.TeamColor>
GuildWars2.Wvw.Matches.OwnedObjective.Owner.init -> void
GuildWars2.Wvw.Matches.OwnedObjective.PointsCapture.get -> int
GuildWars2.Wvw.Matches.OwnedObjective.PointsCapture.init -> void
GuildWars2.Wvw.Matches.OwnedObjective.PointsTick.get -> int
GuildWars2.Wvw.Matches.OwnedObjective.PointsTick.init -> void
GuildWars2.Wvw.Matches.OwnedRuins
GuildWars2.Wvw.Matches.OwnedRuins.Equals(GuildWars2.Wvw.Matches.OwnedRuins? other) -> bool
GuildWars2.Wvw.Matches.OwnedRuins.OwnedRuins() -> void
GuildWars2.Wvw.Matches.OwnedSpawn
GuildWars2.Wvw.Matches.OwnedSpawn.Equals(GuildWars2.Wvw.Matches.OwnedSpawn? other) -> bool
GuildWars2.Wvw.Matches.OwnedSpawn.OwnedSpawn() -> void
GuildWars2.Wvw.Matches.OwnedTower
GuildWars2.Wvw.Matches.OwnedTower.ClaimedAt.get -> System.DateTimeOffset?
GuildWars2.Wvw.Matches.OwnedTower.ClaimedAt.init -> void
GuildWars2.Wvw.Matches.OwnedTower.ClaimedBy.get -> string!
GuildWars2.Wvw.Matches.OwnedTower.ClaimedBy.init -> void
GuildWars2.Wvw.Matches.OwnedTower.Equals(GuildWars2.Wvw.Matches.OwnedTower? other) -> bool
GuildWars2.Wvw.Matches.OwnedTower.GuildUpgrades.get -> System.Collections.Generic.IReadOnlyCollection<int>!
GuildWars2.Wvw.Matches.OwnedTower.GuildUpgrades.init -> void
GuildWars2.Wvw.Matches.OwnedTower.OwnedTower() -> void
GuildWars2.Wvw.Matches.OwnedTower.YaksDelivered.get -> int
GuildWars2.Wvw.Matches.OwnedTower.YaksDelivered.init -> void
GuildWars2.Wvw.Matches.Scores.MapSummary
GuildWars2.Wvw.Matches.Scores.MapSummary.<Clone>$() -> GuildWars2.Wvw.Matches.Scores.MapSummary!
GuildWars2.Wvw.Matches.Scores.MapSummary.Equals(GuildWars2.Wvw.Matches.Scores.MapSummary? other) -> bool
GuildWars2.Wvw.Matches.Scores.MapSummary.Id.get -> int
GuildWars2.Wvw.Matches.Scores.MapSummary.Id.init -> void
GuildWars2.Wvw.Matches.Scores.MapSummary.Kind.get -> GuildWars2.Extensible<GuildWars2.Exploration.Maps.MapKind>
GuildWars2.Wvw.Matches.Scores.MapSummary.Kind.init -> void
GuildWars2.Wvw.Matches.Scores.MapSummary.MapSummary() -> void
GuildWars2.Wvw.Matches.Scores.MapSummary.Scores.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Scores.MapSummary.Scores.init -> void
GuildWars2.Wvw.Matches.Scores.MatchScores
GuildWars2.Wvw.Matches.Scores.MatchScores.<Clone>$() -> GuildWars2.Wvw.Matches.Scores.MatchScores!
GuildWars2.Wvw.Matches.Scores.MatchScores.Equals(GuildWars2.Wvw.Matches.Scores.MatchScores? other) -> bool
GuildWars2.Wvw.Matches.Scores.MatchScores.Id.get -> string!
GuildWars2.Wvw.Matches.Scores.MatchScores.Id.init -> void
GuildWars2.Wvw.Matches.Scores.MatchScores.Maps.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.Scores.MapSummary!>!
GuildWars2.Wvw.Matches.Scores.MatchScores.Maps.init -> void
GuildWars2.Wvw.Matches.Scores.MatchScores.MatchScores() -> void
GuildWars2.Wvw.Matches.Scores.MatchScores.Scores.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Scores.MatchScores.Scores.init -> void
GuildWars2.Wvw.Matches.Scores.MatchScores.Skirmishes.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.Skirmish!>!
GuildWars2.Wvw.Matches.Scores.MatchScores.Skirmishes.init -> void
GuildWars2.Wvw.Matches.Scores.MatchScores.VictoryPoints.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Scores.MatchScores.VictoryPoints.init -> void
GuildWars2.Wvw.Matches.Skirmish
GuildWars2.Wvw.Matches.Skirmish.<Clone>$() -> GuildWars2.Wvw.Matches.Skirmish!
GuildWars2.Wvw.Matches.Skirmish.Equals(GuildWars2.Wvw.Matches.Skirmish? other) -> bool
GuildWars2.Wvw.Matches.Skirmish.Id.get -> int
GuildWars2.Wvw.Matches.Skirmish.Id.init -> void
GuildWars2.Wvw.Matches.Skirmish.MapScores.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.MapScores!>!
GuildWars2.Wvw.Matches.Skirmish.MapScores.init -> void
GuildWars2.Wvw.Matches.Skirmish.Scores.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Skirmish.Scores.init -> void
GuildWars2.Wvw.Matches.Skirmish.Skirmish() -> void
GuildWars2.Wvw.Matches.Stats.MapSummary
GuildWars2.Wvw.Matches.Stats.MapSummary.<Clone>$() -> GuildWars2.Wvw.Matches.Stats.MapSummary!
GuildWars2.Wvw.Matches.Stats.MapSummary.Deaths.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Stats.MapSummary.Deaths.init -> void
GuildWars2.Wvw.Matches.Stats.MapSummary.Equals(GuildWars2.Wvw.Matches.Stats.MapSummary? other) -> bool
GuildWars2.Wvw.Matches.Stats.MapSummary.Id.get -> int
GuildWars2.Wvw.Matches.Stats.MapSummary.Id.init -> void
GuildWars2.Wvw.Matches.Stats.MapSummary.Kills.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Stats.MapSummary.Kills.init -> void
GuildWars2.Wvw.Matches.Stats.MapSummary.Kind.get -> GuildWars2.Extensible<GuildWars2.Exploration.Maps.MapKind>
GuildWars2.Wvw.Matches.Stats.MapSummary.Kind.init -> void
GuildWars2.Wvw.Matches.Stats.MapSummary.MapSummary() -> void
GuildWars2.Wvw.Matches.Stats.MatchStats
GuildWars2.Wvw.Matches.Stats.MatchStats.<Clone>$() -> GuildWars2.Wvw.Matches.Stats.MatchStats!
GuildWars2.Wvw.Matches.Stats.MatchStats.Deaths.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Stats.MatchStats.Deaths.init -> void
GuildWars2.Wvw.Matches.Stats.MatchStats.Equals(GuildWars2.Wvw.Matches.Stats.MatchStats? other) -> bool
GuildWars2.Wvw.Matches.Stats.MatchStats.Id.get -> string!
GuildWars2.Wvw.Matches.Stats.MatchStats.Id.init -> void
GuildWars2.Wvw.Matches.Stats.MatchStats.Kills.get -> GuildWars2.Wvw.Matches.Distribution!
GuildWars2.Wvw.Matches.Stats.MatchStats.Kills.init -> void
GuildWars2.Wvw.Matches.Stats.MatchStats.Maps.get -> System.Collections.Generic.IReadOnlyCollection<GuildWars2.Wvw.Matches.Stats.MapSummary!>!
GuildWars2.Wvw.Matches.Stats.MatchStats.Maps.init -> void
GuildWars2.Wvw.Matches.Stats.MatchStats.MatchStats() -> void
GuildWars2.Wvw.Matches.Worlds
GuildWars2.Wvw.Matches.Worlds.<Clone>$() -> GuildWars2.Wvw.Matches.Worlds!
GuildWars2.Wvw.Matches.Worlds.Blue.get -> int
GuildWars2.Wvw.Matches.Worlds.Blue.init -> void
GuildWars2.Wvw.Matches.Worlds.Equals(GuildWars2.Wvw.Matches.Worlds? other) -> bool
GuildWars2.Wvw.Matches.Worlds.Green.get -> int
GuildWars2.Wvw.Matches.Worlds.Green.init -> void
GuildWars2.Wvw.Matches.Worlds.Red.get -> int
GuildWars2.Wvw.Matches.Worlds.Red.init -> void
GuildWars2.Wvw.Matches.Worlds.Worlds() -> void
GuildWars2.Wvw.Objectives.Camp
GuildWars2.Wvw.Objectives.Camp.Camp() -> void
GuildWars2.Wvw.Objectives.Camp.Equals(GuildWars2.Wvw.Objectives.Camp? other) -> bool
GuildWars2.Wvw.Objectives.Castle
GuildWars2.Wvw.Objectives.Castle.Castle() -> void
GuildWars2.Wvw.Objectives.Castle.Equals(GuildWars2.Wvw.Objectives.Castle? other) -> bool
GuildWars2.Wvw.Objectives.Keep
GuildWars2.Wvw.Objectives.Keep.Equals(GuildWars2.Wvw.Objectives.Keep? other) -> bool
GuildWars2.Wvw.Objectives.Keep.Keep() -> void
GuildWars2.Wvw.Objectives.Mercenary
GuildWars2.Wvw.Objectives.Mercenary.Equals(GuildWars2.Wvw.Objectives.Mercenary? other) -> bool
GuildWars2.Wvw.Objectives.Mercenary.Mercenary() -> void
GuildWars2.Wvw.Objectives.Objective
GuildWars2.Wvw.Objectives.Objective.ChatLink.get -> string!
GuildWars2.Wvw.Objectives.Objective.ChatLink.init -> void
GuildWars2.Wvw.Objectives.Objective.Coordinates.get -> System.Numerics.Vector3?
GuildWars2.Wvw.Objectives.Objective.Coordinates.init -> void
GuildWars2.Wvw.Objectives.Objective.GetChatLink() -> GuildWars2.Chat.ObjectiveLink!
GuildWars2.Wvw.Objectives.Objective.Id.get -> string!
GuildWars2.Wvw.Objectives.Objective.Id.init -> void
GuildWars2.Wvw.Objectives.Objective.LabelCoordinates.get -> System.Drawing.PointF?
GuildWars2.Wvw.Objectives.Objective.LabelCoordinates.init -> void
GuildWars2.Wvw.Objectives.Objective.MapId.get -> int
GuildWars2.Wvw.Objectives.Objective.MapId.init -> void
GuildWars2.Wvw.Objectives.Objective.MapKind.get -> GuildWars2.Extensible<GuildWars2.Exploration.Maps.MapKind>
GuildWars2.Wvw.Objectives.Objective.MapKind.init -> void
GuildWars2.Wvw.Objectives.Objective.MarkerIconHref.get -> string!
GuildWars2.Wvw.Objectives.Objective.MarkerIconHref.init -> void
GuildWars2.Wvw.Objectives.Objective.MarkerIconUrl.get -> System.Uri?
GuildWars2.Wvw.Objectives.Objective.MarkerIconUrl.init -> void
GuildWars2.Wvw.Objectives.Objective.Name.get -> string!
GuildWars2.Wvw.Objectives.Objective.Name.init -> void
GuildWars2.Wvw.Objectives.Objective.Objective() -> void
GuildWars2.Wvw.Objectives.Objective.Objective(GuildWars2.Wvw.Objectives.Objective! original) -> void
GuildWars2.Wvw.Objectives.Objective.SectorId.get -> int
GuildWars2.Wvw.Objectives.Objective.SectorId.init -> void
GuildWars2.Wvw.Objectives.Objective.UpgradeId.get -> int?
GuildWars2.Wvw.Objectives.Objective.UpgradeId.init -> void
GuildWars2.Wvw.Objectives.Resource
GuildWars2.Wvw.Objectives.Resource.Equals(GuildWars2.Wvw.Objectives.Resource? other) -> bool
GuildWars2.Wvw.Objectives.Resource.Resource() -> void
GuildWars2.Wvw.Objectives.Ruins
GuildWars2.Wvw.Objectives.Ruins.Equals(GuildWars2.Wvw.Objectives.Ruins? other) -> bool
GuildWars2.Wvw.Objectives.Ruins.Ruins() -> void
GuildWars2.Wvw.Objectives.Spawn
GuildWars2.Wvw.Objectives.Spawn.Equals(GuildWars2.Wvw.Objectives.Spawn? other) -> bool
GuildWars2.Wvw.Objectives.Spawn.Spawn() -> void
GuildWars2.Wvw.Objectives.Tower
GuildWars2.Wvw.Objectives.Tower.Equals(GuildWars2.Wvw.Objectives.Tower? other) -> bool
GuildWars2.Wvw.Objectives.Tower.Tower() -> void
GuildWars2.Wvw.Ranks.Rank
GuildWars2.Wvw.Ranks.Rank.<Clone>$() -> GuildWars2.Wvw.Ranks.Rank!
GuildWars2.Wvw.Ranks.Rank.Equals(GuildWars2.Wvw.Ranks.Rank? other) -> bool
GuildWars2.Wvw.Ranks.Rank.Id.get -> int
GuildWars2.Wvw.Ranks.Rank.Id.init -> void
GuildWars2.Wvw.Ranks.Rank.MinRank.get -> int
GuildWars2.Wvw.Ranks.Rank.MinRank.init -> void
GuildWars2.Wvw.Ranks.Rank.Rank() -> void
GuildWars2.Wvw.Ranks.Rank.Title.get -> string!
GuildWars2.Wvw.Ranks.Rank.Title.init -> void
GuildWars2.Wvw.TeamColor
GuildWars2.Wvw.TeamColor.Blue = 1 -> GuildWars2.Wvw.TeamColor
GuildWars2.Wvw.TeamColor.Green = 3 -> GuildWars2.Wvw.TeamColor
GuildWars2.Wvw.TeamColor.Neutral = 0 -> GuildWars2.Wvw.TeamColor
GuildWars2.Wvw.TeamColor.Red = 2 -> GuildWars2.Wvw.TeamColor
GuildWars2.Wvw.Timers.WvwTimer
GuildWars2.Wvw.Timers.WvwTimer.<Clone>$() -> GuildWars2.Wvw.Timers.WvwTimer!
GuildWars2.Wvw.Timers.WvwTimer.Equals(GuildWars2.Wvw.Timers.WvwTimer? other) -> bool
GuildWars2.Wvw.Timers.WvwTimer.Europe.get -> System.DateTimeOffset
GuildWars2.Wvw.Timers.WvwTimer.Europe.init -> void
GuildWars2.Wvw.Timers.WvwTimer.NorthAmerica.get -> System.DateTimeOffset
GuildWars2.Wvw.Timers.WvwTimer.NorthAmerica.init -> void
GuildWars2.Wvw.Timers.WvwTimer.WvwTimer() -> void
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.<Clone>$() -> GuildWars2.Wvw.Upgrades.ObjectiveUpgrade!
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.Equals(GuildWars2.Wvw.Upgrades.ObjectiveUpgrade? other) -> bool
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.Id.get -> int
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.Id.init -> void
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.ObjectiveUpgrade() -> void
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.Tiers.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Wvw.Upgrades.UpgradeTier!>!
GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.Tiers.init -> void
GuildWars2.Wvw.Upgrades.Upgrade
GuildWars2.Wvw.Upgrades.Upgrade.<Clone>$() -> GuildWars2.Wvw.Upgrades.Upgrade!
GuildWars2.Wvw.Upgrades.Upgrade.Description.get -> string!
GuildWars2.Wvw.Upgrades.Upgrade.Description.init -> void
GuildWars2.Wvw.Upgrades.Upgrade.Equals(GuildWars2.Wvw.Upgrades.Upgrade? other) -> bool
GuildWars2.Wvw.Upgrades.Upgrade.IconHref.get -> string!
GuildWars2.Wvw.Upgrades.Upgrade.IconHref.init -> void
GuildWars2.Wvw.Upgrades.Upgrade.IconUrl.get -> System.Uri!
GuildWars2.Wvw.Upgrades.Upgrade.IconUrl.init -> void
GuildWars2.Wvw.Upgrades.Upgrade.Name.get -> string!
GuildWars2.Wvw.Upgrades.Upgrade.Name.init -> void
GuildWars2.Wvw.Upgrades.Upgrade.Upgrade() -> void
GuildWars2.Wvw.Upgrades.UpgradeTier
GuildWars2.Wvw.Upgrades.UpgradeTier.<Clone>$() -> GuildWars2.Wvw.Upgrades.UpgradeTier!
GuildWars2.Wvw.Upgrades.UpgradeTier.Equals(GuildWars2.Wvw.Upgrades.UpgradeTier? other) -> bool
GuildWars2.Wvw.Upgrades.UpgradeTier.Name.get -> string!
GuildWars2.Wvw.Upgrades.UpgradeTier.Name.init -> void
GuildWars2.Wvw.Upgrades.UpgradeTier.Upgrades.get -> System.Collections.Generic.IReadOnlyList<GuildWars2.Wvw.Upgrades.Upgrade!>!
GuildWars2.Wvw.Upgrades.UpgradeTier.Upgrades.init -> void
GuildWars2.Wvw.Upgrades.UpgradeTier.UpgradeTier() -> void
GuildWars2.Wvw.Upgrades.UpgradeTier.YaksRequired.get -> int
GuildWars2.Wvw.Upgrades.UpgradeTier.YaksRequired.init -> void
GuildWars2.Wvw.WvwClient
GuildWars2.Wvw.WvwClient.GetAbilities(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Abilities.Ability!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetAbilitiesByIds(System.Collections.Generic.IEnumerable<int>! abilityIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Abilities.Ability!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetAbilitiesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Abilities.Ability!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetAbilitiesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetAbilityById(int abilityId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Abilities.Ability! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetAccountWvwGuild(string? accessToken, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Guilds.AccountWvwGuild! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetLockoutTimer(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Timers.WvwTimer! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchById(string! matchId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Match! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchByWorldId(int worldId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Match! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatches(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Match!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesByIds(System.Collections.Generic.IEnumerable<string!>! matchIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Match!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Match!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesOverview(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Overview.MatchOverview!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesOverviewByIds(System.Collections.Generic.IEnumerable<string!>! matchIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Overview.MatchOverview!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesOverviewByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Overview.MatchOverview!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesOverviewIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesScores(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Scores.MatchScores!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesScoresByIds(System.Collections.Generic.IEnumerable<string!>! matchIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Scores.MatchScores!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesScoresByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Scores.MatchScores!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesScoresIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesStats(GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Stats.MatchStats!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesStatsByIds(System.Collections.Generic.IEnumerable<string!>! matchIds, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Stats.MatchStats!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesStatsByPage(int pageIndex, int? pageSize = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Matches.Stats.MatchStats!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchesStatsIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchOverviewById(string! matchId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Overview.MatchOverview! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchOverviewByWorldId(int worldId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Overview.MatchOverview! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchScoresById(string! matchId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Scores.MatchScores! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchScoresByWorldId(int worldId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Scores.MatchScores! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchStatsById(string! matchId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Stats.MatchStats! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetMatchStatsByWorldId(int worldId, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Matches.Stats.MatchStats! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetObjectiveById(string! objectiveId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Objectives.Objective! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetObjectives(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Objectives.Objective!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetObjectivesByIds(System.Collections.Generic.IEnumerable<string!>! objectiveIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Objectives.Objective!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetObjectivesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Objectives.Objective!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetObjectivesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<string!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetRankById(int rankId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Ranks.Rank! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetRanks(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Ranks.Rank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetRanksByIds(System.Collections.Generic.IEnumerable<int>! rankIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Ranks.Rank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetRanksByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Ranks.Rank!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetRanksIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetTeamAssignmentTimer(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Timers.WvwTimer! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetUpgradeById(int upgradeId, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(GuildWars2.Wvw.Upgrades.ObjectiveUpgrade! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetUpgrades(GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Upgrades.ObjectiveUpgrade!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetUpgradesByIds(System.Collections.Generic.IEnumerable<int>! upgradeIds, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Upgrades.ObjectiveUpgrade!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetUpgradesByPage(int pageIndex, int? pageSize = null, GuildWars2.Language? language = null, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Upgrades.ObjectiveUpgrade!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetUpgradesIndex(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<int>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.GetWvwGuilds(GuildWars2.Worlds.WorldRegion region, GuildWars2.MissingMemberBehavior missingMemberBehavior = GuildWars2.MissingMemberBehavior.Error, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<GuildWars2.Wvw.Guilds.WvwGuild!>! Value, GuildWars2.MessageContext! Context)>!
GuildWars2.Wvw.WvwClient.WvwClient(System.Net.Http.HttpClient! httpClient) -> void
override abstract GuildWars2.Chat.Link.ToString() -> string!
override GuildWars2.Authorization.ApiKeyInfo.<Clone>$() -> GuildWars2.Authorization.TokenInfo!
override GuildWars2.Authorization.ApiKeyInfo.Equals(object? obj) -> bool
override GuildWars2.Authorization.ApiKeyInfo.GetHashCode() -> int
override GuildWars2.Authorization.ApiKeyInfo.ToString() -> string!
override GuildWars2.Authorization.CreatedSubtoken.Equals(object? obj) -> bool
override GuildWars2.Authorization.CreatedSubtoken.GetHashCode() -> int
override GuildWars2.Authorization.CreatedSubtoken.ToString() -> string!
override GuildWars2.Authorization.SubtokenInfo.<Clone>$() -> GuildWars2.Authorization.TokenInfo!
override GuildWars2.Authorization.SubtokenInfo.Equals(object? obj) -> bool
override GuildWars2.Authorization.SubtokenInfo.GetHashCode() -> int
override GuildWars2.Authorization.SubtokenInfo.ToString() -> string!
override GuildWars2.Authorization.TokenInfo.Equals(object? obj) -> bool
override GuildWars2.Authorization.TokenInfo.GetHashCode() -> int
override GuildWars2.Authorization.TokenInfo.ToString() -> string!
override GuildWars2.BulkProgress.Equals(object? obj) -> bool
override GuildWars2.BulkProgress.GetHashCode() -> int
override GuildWars2.BulkProgress.ToString() -> string!
override GuildWars2.Chat.AchievementLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.AchievementLink.Equals(object? obj) -> bool
override GuildWars2.Chat.AchievementLink.GetHashCode() -> int
override GuildWars2.Chat.AchievementLink.ToString() -> string!
override GuildWars2.Chat.BuildTemplateLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.BuildTemplateLink.Equals(object? obj) -> bool
override GuildWars2.Chat.BuildTemplateLink.GetHashCode() -> int
override GuildWars2.Chat.BuildTemplateLink.ToString() -> string!
override GuildWars2.Chat.CoinLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.CoinLink.Equals(object? obj) -> bool
override GuildWars2.Chat.CoinLink.GetHashCode() -> int
override GuildWars2.Chat.CoinLink.ToString() -> string!
override GuildWars2.Chat.ItemLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.ItemLink.Equals(object? obj) -> bool
override GuildWars2.Chat.ItemLink.GetHashCode() -> int
override GuildWars2.Chat.ItemLink.ToString() -> string!
override GuildWars2.Chat.Legends.Equals(object? obj) -> bool
override GuildWars2.Chat.Legends.GetHashCode() -> int
override GuildWars2.Chat.Legends.ToString() -> string!
override GuildWars2.Chat.Link.Equals(object? obj) -> bool
override GuildWars2.Chat.Link.GetHashCode() -> int
override GuildWars2.Chat.ObjectiveLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.ObjectiveLink.Equals(object? obj) -> bool
override GuildWars2.Chat.ObjectiveLink.GetHashCode() -> int
override GuildWars2.Chat.ObjectiveLink.ToString() -> string!
override GuildWars2.Chat.OutfitLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.OutfitLink.Equals(object? obj) -> bool
override GuildWars2.Chat.OutfitLink.GetHashCode() -> int
override GuildWars2.Chat.OutfitLink.ToString() -> string!
override GuildWars2.Chat.PointOfInterestLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.PointOfInterestLink.Equals(object? obj) -> bool
override GuildWars2.Chat.PointOfInterestLink.GetHashCode() -> int
override GuildWars2.Chat.PointOfInterestLink.ToString() -> string!
override GuildWars2.Chat.RecipeLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.RecipeLink.Equals(object? obj) -> bool
override GuildWars2.Chat.RecipeLink.GetHashCode() -> int
override GuildWars2.Chat.RecipeLink.ToString() -> string!
override GuildWars2.Chat.SkillLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.SkillLink.Equals(object? obj) -> bool
override GuildWars2.Chat.SkillLink.GetHashCode() -> int
override GuildWars2.Chat.SkillLink.ToString() -> string!
override GuildWars2.Chat.SkillPalette.GetHashCode() -> int
override GuildWars2.Chat.SkinLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.SkinLink.Equals(object? obj) -> bool
override GuildWars2.Chat.SkinLink.GetHashCode() -> int
override GuildWars2.Chat.SkinLink.ToString() -> string!
override GuildWars2.Chat.Specialization.GetHashCode() -> int
override GuildWars2.Chat.TranslationLink.<Clone>$() -> GuildWars2.Chat.Link!
override GuildWars2.Chat.TranslationLink.Equals(object? obj) -> bool
override GuildWars2.Chat.TranslationLink.GetHashCode() -> int
override GuildWars2.Chat.TranslationLink.ToString() -> string!
override GuildWars2.Coin.GetHashCode() -> int
override GuildWars2.Coin.ToString() -> string!
override GuildWars2.Collections.ValueDictionary<TKey, TValue>.Equals(object? obj) -> bool
override GuildWars2.Collections.ValueDictionary<TKey, TValue>.GetHashCode() -> int
override GuildWars2.Collections.ValueHashSet<T>.Equals(object? obj) -> bool
override GuildWars2.Collections.ValueHashSet<T>.GetHashCode() -> int
override GuildWars2.Collections.ValueList<T>.Equals(object? obj) -> bool
override GuildWars2.Collections.ValueList<T>.GetHashCode() -> int
override GuildWars2.Commerce.Delivery.DeliveredItem.Equals(object? obj) -> bool
override GuildWars2.Commerce.Delivery.DeliveredItem.GetHashCode() -> int
override GuildWars2.Commerce.Delivery.DeliveredItem.ToString() -> string!
override GuildWars2.Commerce.Delivery.DeliveryBox.Equals(object? obj) -> bool
override GuildWars2.Commerce.Delivery.DeliveryBox.GetHashCode() -> int
override GuildWars2.Commerce.Delivery.DeliveryBox.ToString() -> string!
override GuildWars2.Commerce.Exchange.GemsToGold.Equals(object? obj) -> bool
override GuildWars2.Commerce.Exchange.GemsToGold.GetHashCode() -> int
override GuildWars2.Commerce.Exchange.GemsToGold.ToString() -> string!
override GuildWars2.Commerce.Exchange.GoldToGems.Equals(object? obj) -> bool
override GuildWars2.Commerce.Exchange.GoldToGems.GetHashCode() -> int
override GuildWars2.Commerce.Exchange.GoldToGems.ToString() -> string!
override GuildWars2.Commerce.Listings.OrderBook.Equals(object? obj) -> bool
override GuildWars2.Commerce.Listings.OrderBook.GetHashCode() -> int
override GuildWars2.Commerce.Listings.OrderBook.ToString() -> string!
override GuildWars2.Commerce.Listings.OrderBookLine.Equals(object? obj) -> bool
override GuildWars2.Commerce.Listings.OrderBookLine.GetHashCode() -> int
override GuildWars2.Commerce.Listings.OrderBookLine.ToString() -> string!
override GuildWars2.Commerce.Prices.ItemPrice.Equals(object? obj) -> bool
override GuildWars2.Commerce.Prices.ItemPrice.GetHashCode() -> int
override GuildWars2.Commerce.Prices.ItemPrice.ToString() -> string!
override GuildWars2.Commerce.Transactions.Order.Equals(object? obj) -> bool
override GuildWars2.Commerce.Transactions.Order.GetHashCode() -> int
override GuildWars2.Commerce.Transactions.Order.ToString() -> string!
override GuildWars2.Commerce.Transactions.Transaction.Equals(object? obj) -> bool
override GuildWars2.Commerce.Transactions.Transaction.GetHashCode() -> int
override GuildWars2.Commerce.Transactions.Transaction.ToString() -> string!
override GuildWars2.Exploration.Adventures.Adventure.Equals(object? obj) -> bool
override GuildWars2.Exploration.Adventures.Adventure.GetHashCode() -> int
override GuildWars2.Exploration.Adventures.Adventure.ToString() -> string!
override GuildWars2.Exploration.Continents.Continent.Equals(object? obj) -> bool
override GuildWars2.Exploration.Continents.Continent.GetHashCode() -> int
override GuildWars2.Exploration.Continents.Continent.ToString() -> string!
override GuildWars2.Exploration.Floors.Floor.Equals(object? obj) -> bool
override GuildWars2.Exploration.Floors.Floor.GetHashCode() -> int
override GuildWars2.Exploration.Floors.Floor.ToString() -> string!
override GuildWars2.Exploration.GodShrines.GodShrine.Equals(object? obj) -> bool
override GuildWars2.Exploration.GodShrines.GodShrine.GetHashCode() -> int
override GuildWars2.Exploration.GodShrines.GodShrine.ToString() -> string!
override GuildWars2.Exploration.Hearts.Heart.Equals(object? obj) -> bool
override GuildWars2.Exploration.Hearts.Heart.GetHashCode() -> int
override GuildWars2.Exploration.Hearts.Heart.ToString() -> string!
override GuildWars2.Exploration.HeroChallenges.HeroChallenge.Equals(object? obj) -> bool
override GuildWars2.Exploration.HeroChallenges.HeroChallenge.GetHashCode() -> int
override GuildWars2.Exploration.HeroChallenges.HeroChallenge.ToString() -> string!
override GuildWars2.Exploration.Maps.Map.Equals(object? obj) -> bool
override GuildWars2.Exploration.Maps.Map.GetHashCode() -> int
override GuildWars2.Exploration.Maps.Map.ToString() -> string!
override GuildWars2.Exploration.Maps.MapSummary.Equals(object? obj) -> bool
override GuildWars2.Exploration.Maps.MapSummary.GetHashCode() -> int
override GuildWars2.Exploration.Maps.MapSummary.ToString() -> string!
override GuildWars2.Exploration.MasteryInsights.MasteryInsight.Equals(object? obj) -> bool
override GuildWars2.Exploration.MasteryInsights.MasteryInsight.GetHashCode() -> int
override GuildWars2.Exploration.MasteryInsights.MasteryInsight.ToString() -> string!
override GuildWars2.Exploration.PointsOfInterest.Landmark.<Clone>$() -> GuildWars2.Exploration.PointsOfInterest.PointOfInterest!
override GuildWars2.Exploration.PointsOfInterest.Landmark.Equals(object? obj) -> bool
override GuildWars2.Exploration.PointsOfInterest.Landmark.GetHashCode() -> int
override GuildWars2.Exploration.PointsOfInterest.Landmark.ToString() -> string!
override GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Equals(object? obj) -> bool
override GuildWars2.Exploration.PointsOfInterest.PointOfInterest.GetHashCode() -> int
override GuildWars2.Exploration.PointsOfInterest.PointOfInterest.ToString() -> string!
override GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.<Clone>$() -> GuildWars2.Exploration.PointsOfInterest.PointOfInterest!
override GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.Equals(object? obj) -> bool
override GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.GetHashCode() -> int
override GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.ToString() -> string!
override GuildWars2.Exploration.PointsOfInterest.Vista.<Clone>$() -> GuildWars2.Exploration.PointsOfInterest.PointOfInterest!
override GuildWars2.Exploration.PointsOfInterest.Vista.Equals(object? obj) -> bool
override GuildWars2.Exploration.PointsOfInterest.Vista.GetHashCode() -> int
override GuildWars2.Exploration.PointsOfInterest.Vista.ToString() -> string!
override GuildWars2.Exploration.PointsOfInterest.Waypoint.<Clone>$() -> GuildWars2.Exploration.PointsOfInterest.PointOfInterest!
override GuildWars2.Exploration.PointsOfInterest.Waypoint.Equals(object? obj) -> bool
override GuildWars2.Exploration.PointsOfInterest.Waypoint.GetHashCode() -> int
override GuildWars2.Exploration.PointsOfInterest.Waypoint.ToString() -> string!
override GuildWars2.Exploration.Regions.Region.Equals(object? obj) -> bool
override GuildWars2.Exploration.Regions.Region.GetHashCode() -> int
override GuildWars2.Exploration.Regions.Region.ToString() -> string!
override GuildWars2.Exploration.Sectors.Sector.Equals(object? obj) -> bool
override GuildWars2.Exploration.Sectors.Sector.GetHashCode() -> int
override GuildWars2.Exploration.Sectors.Sector.ToString() -> string!
override GuildWars2.Extensible<TEnum>.Equals(object? obj) -> bool
override GuildWars2.Extensible<TEnum>.GetHashCode() -> int
override GuildWars2.Extensible<TEnum>.ToString() -> string!
override GuildWars2.Files.Asset.Equals(object? obj) -> bool
override GuildWars2.Files.Asset.GetHashCode() -> int
override GuildWars2.Files.Asset.ToString() -> string!
override GuildWars2.Flags.Equals(object? obj) -> bool
override GuildWars2.Flags.GetHashCode() -> int
override GuildWars2.Guilds.Bank.GuildBankSlot.Equals(object? obj) -> bool
override GuildWars2.Guilds.Bank.GuildBankSlot.GetHashCode() -> int
override GuildWars2.Guilds.Bank.GuildBankSlot.ToString() -> string!
override GuildWars2.Guilds.Bank.GuildBankTab.Equals(object? obj) -> bool
override GuildWars2.Guilds.Bank.GuildBankTab.GetHashCode() -> int
override GuildWars2.Guilds.Bank.GuildBankTab.ToString() -> string!
override GuildWars2.Guilds.Emblems.EmblemBackground.Equals(object? obj) -> bool
override GuildWars2.Guilds.Emblems.EmblemBackground.GetHashCode() -> int
override GuildWars2.Guilds.Emblems.EmblemBackground.ToString() -> string!
override GuildWars2.Guilds.Emblems.EmblemForeground.Equals(object? obj) -> bool
override GuildWars2.Guilds.Emblems.EmblemForeground.GetHashCode() -> int
override GuildWars2.Guilds.Emblems.EmblemForeground.ToString() -> string!
override GuildWars2.Guilds.Emblems.GuildEmblem.Equals(object? obj) -> bool
override GuildWars2.Guilds.Emblems.GuildEmblem.GetHashCode() -> int
override GuildWars2.Guilds.Emblems.GuildEmblem.ToString() -> string!
override GuildWars2.Guilds.Emblems.GuildEmblemBackground.Equals(object? obj) -> bool
override GuildWars2.Guilds.Emblems.GuildEmblemBackground.GetHashCode() -> int
override GuildWars2.Guilds.Emblems.GuildEmblemBackground.ToString() -> string!
override GuildWars2.Guilds.Emblems.GuildEmblemFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Guilds.Emblems.GuildEmblemFlags.Equals(object? obj) -> bool
override GuildWars2.Guilds.Emblems.GuildEmblemFlags.GetHashCode() -> int
override GuildWars2.Guilds.Emblems.GuildEmblemForeground.Equals(object? obj) -> bool
override GuildWars2.Guilds.Emblems.GuildEmblemForeground.GetHashCode() -> int
override GuildWars2.Guilds.Emblems.GuildEmblemForeground.ToString() -> string!
override GuildWars2.Guilds.Guild.Equals(object? obj) -> bool
override GuildWars2.Guilds.Guild.GetHashCode() -> int
override GuildWars2.Guilds.Guild.ToString() -> string!
override GuildWars2.Guilds.Logs.GuildBankActivity.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.GuildBankActivity.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.GuildBankActivity.GetHashCode() -> int
override GuildWars2.Guilds.Logs.GuildBankActivity.ToString() -> string!
override GuildWars2.Guilds.Logs.GuildLogEntry.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.GuildLogEntry.GetHashCode() -> int
override GuildWars2.Guilds.Logs.GuildLogEntry.ToString() -> string!
override GuildWars2.Guilds.Logs.GuildMission.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.GuildMission.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.GuildMission.GetHashCode() -> int
override GuildWars2.Guilds.Logs.GuildMission.ToString() -> string!
override GuildWars2.Guilds.Logs.GuildUpgradeActivity.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.GuildUpgradeActivity.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.GuildUpgradeActivity.GetHashCode() -> int
override GuildWars2.Guilds.Logs.GuildUpgradeActivity.ToString() -> string!
override GuildWars2.Guilds.Logs.InfluenceActivity.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.InfluenceActivity.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.InfluenceActivity.GetHashCode() -> int
override GuildWars2.Guilds.Logs.InfluenceActivity.ToString() -> string!
override GuildWars2.Guilds.Logs.InviteDeclined.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.InviteDeclined.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.InviteDeclined.GetHashCode() -> int
override GuildWars2.Guilds.Logs.InviteDeclined.ToString() -> string!
override GuildWars2.Guilds.Logs.MemberInvited.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.MemberInvited.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.MemberInvited.GetHashCode() -> int
override GuildWars2.Guilds.Logs.MemberInvited.ToString() -> string!
override GuildWars2.Guilds.Logs.MemberJoined.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.MemberJoined.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.MemberJoined.GetHashCode() -> int
override GuildWars2.Guilds.Logs.MemberJoined.ToString() -> string!
override GuildWars2.Guilds.Logs.MemberKicked.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.MemberKicked.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.MemberKicked.GetHashCode() -> int
override GuildWars2.Guilds.Logs.MemberKicked.ToString() -> string!
override GuildWars2.Guilds.Logs.NewMessageOfTheDay.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.NewMessageOfTheDay.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.NewMessageOfTheDay.GetHashCode() -> int
override GuildWars2.Guilds.Logs.NewMessageOfTheDay.ToString() -> string!
override GuildWars2.Guilds.Logs.RankChange.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.RankChange.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.RankChange.GetHashCode() -> int
override GuildWars2.Guilds.Logs.RankChange.ToString() -> string!
override GuildWars2.Guilds.Logs.TreasuryDeposit.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
override GuildWars2.Guilds.Logs.TreasuryDeposit.Equals(object? obj) -> bool
override GuildWars2.Guilds.Logs.TreasuryDeposit.GetHashCode() -> int
override GuildWars2.Guilds.Logs.TreasuryDeposit.ToString() -> string!
override GuildWars2.Guilds.Members.GuildMember.Equals(object? obj) -> bool
override GuildWars2.Guilds.Members.GuildMember.GetHashCode() -> int
override GuildWars2.Guilds.Members.GuildMember.ToString() -> string!
override GuildWars2.Guilds.Permissions.GuildPermissionSummary.Equals(object? obj) -> bool
override GuildWars2.Guilds.Permissions.GuildPermissionSummary.GetHashCode() -> int
override GuildWars2.Guilds.Permissions.GuildPermissionSummary.ToString() -> string!
override GuildWars2.Guilds.Ranks.GuildRank.Equals(object? obj) -> bool
override GuildWars2.Guilds.Ranks.GuildRank.GetHashCode() -> int
override GuildWars2.Guilds.Ranks.GuildRank.ToString() -> string!
override GuildWars2.Guilds.Storage.GuildStorageSlot.Equals(object? obj) -> bool
override GuildWars2.Guilds.Storage.GuildStorageSlot.GetHashCode() -> int
override GuildWars2.Guilds.Storage.GuildStorageSlot.ToString() -> string!
override GuildWars2.Guilds.Teams.Game.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.Game.GetHashCode() -> int
override GuildWars2.Guilds.Teams.Game.ToString() -> string!
override GuildWars2.Guilds.Teams.GuildTeam.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.GuildTeam.GetHashCode() -> int
override GuildWars2.Guilds.Teams.GuildTeam.ToString() -> string!
override GuildWars2.Guilds.Teams.GuildTeamMember.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.GuildTeamMember.GetHashCode() -> int
override GuildWars2.Guilds.Teams.GuildTeamMember.ToString() -> string!
override GuildWars2.Guilds.Teams.Ladders.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.Ladders.GetHashCode() -> int
override GuildWars2.Guilds.Teams.Ladders.ToString() -> string!
override GuildWars2.Guilds.Teams.Results.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.Results.GetHashCode() -> int
override GuildWars2.Guilds.Teams.Results.ToString() -> string!
override GuildWars2.Guilds.Teams.Score.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.Score.GetHashCode() -> int
override GuildWars2.Guilds.Teams.Score.ToString() -> string!
override GuildWars2.Guilds.Teams.Season.Equals(object? obj) -> bool
override GuildWars2.Guilds.Teams.Season.GetHashCode() -> int
override GuildWars2.Guilds.Teams.Season.ToString() -> string!
override GuildWars2.Guilds.Treasury.CountNeededForUpgrade.Equals(object? obj) -> bool
override GuildWars2.Guilds.Treasury.CountNeededForUpgrade.GetHashCode() -> int
override GuildWars2.Guilds.Treasury.CountNeededForUpgrade.ToString() -> string!
override GuildWars2.Guilds.Treasury.GuildTreasurySlot.Equals(object? obj) -> bool
override GuildWars2.Guilds.Treasury.GuildTreasurySlot.GetHashCode() -> int
override GuildWars2.Guilds.Treasury.GuildTreasurySlot.ToString() -> string!
override GuildWars2.Guilds.Upgrades.AccumulatingCurrency.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.AccumulatingCurrency.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.AccumulatingCurrency.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.AccumulatingCurrency.ToString() -> string!
override GuildWars2.Guilds.Upgrades.BankBag.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.BankBag.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.BankBag.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.BankBag.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Boost.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Boost.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Boost.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Boost.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Claimable.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Claimable.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Claimable.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Claimable.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Consumable.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Consumable.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Consumable.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Consumable.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Decoration.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Decoration.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Decoration.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Decoration.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildHall.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.GuildHall.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildHall.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildHall.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildHallExpedition.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.GuildHallExpedition.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildHallExpedition.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildHallExpedition.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildUpgrade.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildUpgrade.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildUpgrade.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgradeCost!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgradeCost!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCost.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildUpgradeCost.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildUpgradeCost.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgradeCost!
override GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.ToString() -> string!
override GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgradeCost!
override GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Hub.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Hub.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Hub.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Hub.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Queue.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Queue.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Queue.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Queue.ToString() -> string!
override GuildWars2.Guilds.Upgrades.Unlock.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
override GuildWars2.Guilds.Upgrades.Unlock.Equals(object? obj) -> bool
override GuildWars2.Guilds.Upgrades.Unlock.GetHashCode() -> int
override GuildWars2.Guilds.Upgrades.Unlock.ToString() -> string!
override GuildWars2.Hero.Accounts.AccountLuck.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.AccountLuck.GetHashCode() -> int
override GuildWars2.Hero.Accounts.AccountLuck.ToString() -> string!
override GuildWars2.Hero.Accounts.AccountSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.AccountSummary.GetHashCode() -> int
override GuildWars2.Hero.Accounts.AccountSummary.ToString() -> string!
override GuildWars2.Hero.Accounts.AccountWvwSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.AccountWvwSummary.GetHashCode() -> int
override GuildWars2.Hero.Accounts.AccountWvwSummary.ToString() -> string!
override GuildWars2.Hero.Accounts.Character.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.Character.GetHashCode() -> int
override GuildWars2.Hero.Accounts.Character.ToString() -> string!
override GuildWars2.Hero.Accounts.CharacterFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Accounts.CharacterFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.CharacterFlags.GetHashCode() -> int
override GuildWars2.Hero.Accounts.CharacterSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.CharacterSummary.GetHashCode() -> int
override GuildWars2.Hero.Accounts.CharacterSummary.ToString() -> string!
override GuildWars2.Hero.Accounts.Progression.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.Progression.GetHashCode() -> int
override GuildWars2.Hero.Accounts.Progression.ToString() -> string!
override GuildWars2.Hero.Accounts.WvwAbility.Equals(object? obj) -> bool
override GuildWars2.Hero.Accounts.WvwAbility.GetHashCode() -> int
override GuildWars2.Hero.Accounts.WvwAbility.ToString() -> string!
override GuildWars2.Hero.Achievements.AccountAchievement.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.AccountAchievement.GetHashCode() -> int
override GuildWars2.Hero.Achievements.AccountAchievement.ToString() -> string!
override GuildWars2.Hero.Achievements.Achievement.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Achievement.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Achievement.ToString() -> string!
override GuildWars2.Hero.Achievements.AchievementBit.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.AchievementBit.GetHashCode() -> int
override GuildWars2.Hero.Achievements.AchievementBit.ToString() -> string!
override GuildWars2.Hero.Achievements.AchievementFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Achievements.AchievementFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.AchievementFlags.GetHashCode() -> int
override GuildWars2.Hero.Achievements.AchievementReward.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.AchievementReward.GetHashCode() -> int
override GuildWars2.Hero.Achievements.AchievementReward.ToString() -> string!
override GuildWars2.Hero.Achievements.AchievementTier.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.AchievementTier.GetHashCode() -> int
override GuildWars2.Hero.Achievements.AchievementTier.ToString() -> string!
override GuildWars2.Hero.Achievements.Bits.AchievementItemBit.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementBit!
override GuildWars2.Hero.Achievements.Bits.AchievementItemBit.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Bits.AchievementItemBit.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Bits.AchievementItemBit.ToString() -> string!
override GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementBit!
override GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.ToString() -> string!
override GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementBit!
override GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.ToString() -> string!
override GuildWars2.Hero.Achievements.Bits.AchievementTextBit.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementBit!
override GuildWars2.Hero.Achievements.Bits.AchievementTextBit.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Bits.AchievementTextBit.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Bits.AchievementTextBit.ToString() -> string!
override GuildWars2.Hero.Achievements.Categories.AchievementCategory.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Categories.AchievementCategory.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Categories.AchievementCategory.ToString() -> string!
override GuildWars2.Hero.Achievements.Categories.AchievementFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Achievements.Categories.AchievementFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Categories.AchievementFlags.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Categories.AchievementRef.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Categories.AchievementRef.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Categories.AchievementRef.ToString() -> string!
override GuildWars2.Hero.Achievements.CollectionAchievement.<Clone>$() -> GuildWars2.Hero.Achievements.Achievement!
override GuildWars2.Hero.Achievements.CollectionAchievement.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.CollectionAchievement.GetHashCode() -> int
override GuildWars2.Hero.Achievements.CollectionAchievement.ToString() -> string!
override GuildWars2.Hero.Achievements.Groups.AchievementGroup.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Groups.AchievementGroup.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Groups.AchievementGroup.ToString() -> string!
override GuildWars2.Hero.Achievements.ItemReward.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementReward!
override GuildWars2.Hero.Achievements.ItemReward.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.ItemReward.GetHashCode() -> int
override GuildWars2.Hero.Achievements.ItemReward.ToString() -> string!
override GuildWars2.Hero.Achievements.LevelRequirement.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.LevelRequirement.GetHashCode() -> int
override GuildWars2.Hero.Achievements.LevelRequirement.ToString() -> string!
override GuildWars2.Hero.Achievements.Rewards.CoinsReward.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementReward!
override GuildWars2.Hero.Achievements.Rewards.CoinsReward.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Rewards.CoinsReward.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Rewards.CoinsReward.ToString() -> string!
override GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementReward!
override GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.ToString() -> string!
override GuildWars2.Hero.Achievements.Rewards.TitleReward.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementReward!
override GuildWars2.Hero.Achievements.Rewards.TitleReward.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Rewards.TitleReward.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Rewards.TitleReward.ToString() -> string!
override GuildWars2.Hero.Achievements.Titles.Title.Equals(object? obj) -> bool
override GuildWars2.Hero.Achievements.Titles.Title.GetHashCode() -> int
override GuildWars2.Hero.Achievements.Titles.Title.ToString() -> string!
override GuildWars2.Hero.Banking.Bank.Equals(object? obj) -> bool
override GuildWars2.Hero.Banking.Bank.GetHashCode() -> int
override GuildWars2.Hero.Banking.Bank.ToString() -> string!
override GuildWars2.Hero.Banking.MaterialCategory.Equals(object? obj) -> bool
override GuildWars2.Hero.Banking.MaterialCategory.GetHashCode() -> int
override GuildWars2.Hero.Banking.MaterialCategory.ToString() -> string!
override GuildWars2.Hero.Banking.MaterialSlot.Equals(object? obj) -> bool
override GuildWars2.Hero.Banking.MaterialSlot.GetHashCode() -> int
override GuildWars2.Hero.Banking.MaterialSlot.ToString() -> string!
override GuildWars2.Hero.Banking.MaterialStorage.Equals(object? obj) -> bool
override GuildWars2.Hero.Banking.MaterialStorage.GetHashCode() -> int
override GuildWars2.Hero.Banking.MaterialStorage.ToString() -> string!
override GuildWars2.Hero.Builds.ActionSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.ActionSkill.EqualityContract.get -> System.Type!
override GuildWars2.Hero.Builds.ActionSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.ActionSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.ActionSkill.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Hero.Builds.ActionSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Build.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Build.GetHashCode() -> int
override GuildWars2.Hero.Builds.Build.ToString() -> string!
override GuildWars2.Hero.Builds.BuildTemplate.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.BuildTemplate.GetHashCode() -> int
override GuildWars2.Hero.Builds.BuildTemplate.ToString() -> string!
override GuildWars2.Hero.Builds.Fact.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Fact.GetHashCode() -> int
override GuildWars2.Hero.Builds.Fact.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.AttributeAdjustment.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.AttributeAdjustment.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.AttributeAdjustment.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.AttributeConversion.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.AttributeConversion.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.AttributeConversion.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.AttributeConversion.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Buff.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Buff.EqualityContract.get -> System.Type!
override GuildWars2.Hero.Builds.Facts.Buff.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Buff.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Buff.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Hero.Builds.Facts.Buff.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.ComboField.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.ComboField.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.ComboField.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.ComboField.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.ComboFinisher.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.ComboFinisher.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.ComboFinisher.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.ComboFinisher.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Damage.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Damage.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Damage.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Damage.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Distance.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Distance.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Distance.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Distance.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Duration.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Duration.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Duration.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Duration.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.HealingAdjust.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.HealingAdjust.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.HealingAdjust.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.HealingAdjust.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.NoData.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.NoData.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.NoData.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.NoData.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Number.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Number.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Number.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Number.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Percentage.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Percentage.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Percentage.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Percentage.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.PrefixedBuff.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.PrefixedBuff.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.PrefixedBuff.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.PrefixedBuff.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Radius.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Radius.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Radius.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Radius.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Range.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Range.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Range.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Range.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Recharge.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Recharge.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Recharge.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Recharge.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.StunBreak.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.StunBreak.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.StunBreak.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.StunBreak.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Time.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Time.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Time.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Time.ToString() -> string!
override GuildWars2.Hero.Builds.Facts.Unblockable.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
override GuildWars2.Hero.Builds.Facts.Unblockable.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Facts.Unblockable.GetHashCode() -> int
override GuildWars2.Hero.Builds.Facts.Unblockable.ToString() -> string!
override GuildWars2.Hero.Builds.Legend.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Legend.GetHashCode() -> int
override GuildWars2.Hero.Builds.Legend.ToString() -> string!
override GuildWars2.Hero.Builds.SelectedLegends.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.SelectedLegends.GetHashCode() -> int
override GuildWars2.Hero.Builds.SelectedLegends.ToString() -> string!
override GuildWars2.Hero.Builds.SelectedPets.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.SelectedPets.GetHashCode() -> int
override GuildWars2.Hero.Builds.SelectedPets.ToString() -> string!
override GuildWars2.Hero.Builds.SelectedSpecialization.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.SelectedSpecialization.GetHashCode() -> int
override GuildWars2.Hero.Builds.SelectedSpecialization.ToString() -> string!
override GuildWars2.Hero.Builds.Skill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skill.ToString() -> string!
override GuildWars2.Hero.Builds.SkillBar.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.SkillBar.GetHashCode() -> int
override GuildWars2.Hero.Builds.SkillBar.ToString() -> string!
override GuildWars2.Hero.Builds.SkillFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Builds.SkillFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.SkillFlags.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.BundleSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.BundleSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.BundleSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.BundleSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.EliteSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.EliteSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.EliteSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.EliteSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.HealSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.HealSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.HealSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.HealSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.LockedSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.LockedSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.LockedSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.LockedSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.MonsterSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.MonsterSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.MonsterSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.MonsterSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.PetSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.PetSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.PetSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.PetSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.ProfessionSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.ProfessionSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.ProfessionSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.ProfessionSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.ToolbeltSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.ToolbeltSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.ToolbeltSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.ToolbeltSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.UtilitySkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.UtilitySkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.UtilitySkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.UtilitySkill.ToString() -> string!
override GuildWars2.Hero.Builds.Skills.WeaponSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.Skills.WeaponSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Skills.WeaponSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Skills.WeaponSkill.ToString() -> string!
override GuildWars2.Hero.Builds.SlotSkill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
override GuildWars2.Hero.Builds.SlotSkill.EqualityContract.get -> System.Type!
override GuildWars2.Hero.Builds.SlotSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.SlotSkill.GetHashCode() -> int
override GuildWars2.Hero.Builds.SlotSkill.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Hero.Builds.SlotSkill.ToString() -> string!
override GuildWars2.Hero.Builds.Specialization.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Specialization.GetHashCode() -> int
override GuildWars2.Hero.Builds.Specialization.ToString() -> string!
override GuildWars2.Hero.Builds.Subskill.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Subskill.GetHashCode() -> int
override GuildWars2.Hero.Builds.Subskill.ToString() -> string!
override GuildWars2.Hero.Builds.Trait.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.Trait.GetHashCode() -> int
override GuildWars2.Hero.Builds.Trait.ToString() -> string!
override GuildWars2.Hero.Builds.TraitedFact.Equals(object? obj) -> bool
override GuildWars2.Hero.Builds.TraitedFact.GetHashCode() -> int
override GuildWars2.Hero.Builds.TraitedFact.ToString() -> string!
override GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.ToString() -> string!
override GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.ToString() -> string!
override GuildWars2.Hero.Crafting.GuildIngredient.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.GuildIngredient.GetHashCode() -> int
override GuildWars2.Hero.Crafting.GuildIngredient.ToString() -> string!
override GuildWars2.Hero.Crafting.Ingredient.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Ingredient.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Ingredient.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.AxeRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.AxeRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.AxeRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.AxeRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.BagRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.BagRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.BagRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.BagRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.BootsRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.BootsRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.BootsRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.BootsRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.BulkRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.BulkRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.BulkRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.BulkRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.CoatRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.CoatRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.CoatRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.CoatRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.DessertRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.DessertRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.DessertRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.DessertRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.DyeRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.DyeRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.DyeRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.DyeRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.EarringRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.EarringRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.EarringRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.EarringRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.FeastRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.FeastRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.FeastRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.FeastRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.FocusRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.FocusRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.FocusRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.FocusRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.HammerRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.HammerRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.HammerRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.HammerRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.MaceRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.MaceRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.MaceRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.MaceRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.MealRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.MealRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.MealRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.MealRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.PistolRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.PistolRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.PistolRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.PistolRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.PotionRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.PotionRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.PotionRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.PotionRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.Recipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.Recipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.Recipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.RecipeFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Crafting.Recipes.RecipeFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.RecipeFlags.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.RifleRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.RifleRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.RifleRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.RifleRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.RingRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.RingRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.RingRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.RingRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.SnackRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.SnackRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.SnackRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.SnackRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.SoupRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.SoupRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.SoupRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.SoupRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.SpearRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.SpearRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.SpearRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.SpearRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.StaffRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.StaffRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.StaffRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.StaffRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.SwordRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.SwordRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.SwordRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.SwordRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.TorchRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.TorchRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.TorchRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.TorchRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.TridentRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.TridentRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.TridentRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.TridentRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.ToString() -> string!
override GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
override GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.Equals(object? obj) -> bool
override GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.GetHashCode() -> int
override GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.ToString() -> string!
override GuildWars2.Hero.Emotes.Emote.Equals(object? obj) -> bool
override GuildWars2.Hero.Emotes.Emote.GetHashCode() -> int
override GuildWars2.Hero.Emotes.Emote.ToString() -> string!
override GuildWars2.Hero.Equipment.Dyes.ColorInfo.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Dyes.ColorInfo.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Dyes.ColorInfo.ToString() -> string!
override GuildWars2.Hero.Equipment.Dyes.DyeColor.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Dyes.DyeColor.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Dyes.DyeColor.ToString() -> string!
override GuildWars2.Hero.Equipment.DyeSlot.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.DyeSlot.GetHashCode() -> int
override GuildWars2.Hero.Equipment.DyeSlot.ToString() -> string!
override GuildWars2.Hero.Equipment.Finishers.Finisher.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Finishers.Finisher.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Finishers.Finisher.ToString() -> string!
override GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.ToString() -> string!
override GuildWars2.Hero.Equipment.Gliders.GliderSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Gliders.GliderSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Gliders.GliderSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.GetHashCode() -> int
override GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.ToString() -> string!
override GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Miniatures.Miniature.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Miniatures.Miniature.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Miniatures.Miniature.ToString() -> string!
override GuildWars2.Hero.Equipment.Mounts.Mount.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Mounts.Mount.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Mounts.Mount.ToString() -> string!
override GuildWars2.Hero.Equipment.Mounts.MountSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Mounts.MountSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Mounts.MountSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Mounts.SkillReference.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Mounts.SkillReference.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Mounts.SkillReference.ToString() -> string!
override GuildWars2.Hero.Equipment.Novelties.Novelty.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Novelties.Novelty.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Novelties.Novelty.ToString() -> string!
override GuildWars2.Hero.Equipment.Outfits.Outfit.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Outfits.Outfit.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Outfits.Outfit.ToString() -> string!
override GuildWars2.Hero.Equipment.SelectedAttributeCombination.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.SelectedAttributeCombination.GetHashCode() -> int
override GuildWars2.Hero.Equipment.SelectedAttributeCombination.ToString() -> string!
override GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.ToString() -> string!
override GuildWars2.Hero.Equipment.Templates.CharacterEquipment.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Templates.CharacterEquipment.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Templates.CharacterEquipment.ToString() -> string!
override GuildWars2.Hero.Equipment.Templates.EquipmentItem.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Templates.EquipmentItem.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Templates.EquipmentItem.ToString() -> string!
override GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.ToString() -> string!
override GuildWars2.Hero.Equipment.Templates.LegendaryItem.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Templates.LegendaryItem.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Templates.LegendaryItem.ToString() -> string!
override GuildWars2.Hero.Equipment.Templates.PvpEquipment.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Templates.PvpEquipment.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Templates.PvpEquipment.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.EqualityContract.get -> System.Type!
override GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.EqualityContract.get -> System.Type!
override GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ToySkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ToySkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ToySkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ToySkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.ToString() -> string!
override GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
override GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.EqualityContract.get -> System.Type!
override GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.Equals(object? obj) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.GetHashCode() -> int
override GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.ToString() -> string!
override GuildWars2.Hero.Inventories.Bag.Equals(object? obj) -> bool
override GuildWars2.Hero.Inventories.Bag.GetHashCode() -> int
override GuildWars2.Hero.Inventories.Bag.ToString() -> string!
override GuildWars2.Hero.Inventories.Baggage.Equals(object? obj) -> bool
override GuildWars2.Hero.Inventories.Baggage.GetHashCode() -> int
override GuildWars2.Hero.Inventories.Baggage.ToString() -> string!
override GuildWars2.Hero.Inventories.Inventory.Equals(object? obj) -> bool
override GuildWars2.Hero.Inventories.Inventory.GetHashCode() -> int
override GuildWars2.Hero.Inventories.Inventory.ToString() -> string!
override GuildWars2.Hero.Inventories.ItemSlot.Equals(object? obj) -> bool
override GuildWars2.Hero.Inventories.ItemSlot.GetHashCode() -> int
override GuildWars2.Hero.Inventories.ItemSlot.ToString() -> string!
override GuildWars2.Hero.Masteries.Mastery.Equals(object? obj) -> bool
override GuildWars2.Hero.Masteries.Mastery.GetHashCode() -> int
override GuildWars2.Hero.Masteries.Mastery.ToString() -> string!
override GuildWars2.Hero.Masteries.MasteryPointsProgress.Equals(object? obj) -> bool
override GuildWars2.Hero.Masteries.MasteryPointsProgress.GetHashCode() -> int
override GuildWars2.Hero.Masteries.MasteryPointsProgress.ToString() -> string!
override GuildWars2.Hero.Masteries.MasteryPointsTotal.Equals(object? obj) -> bool
override GuildWars2.Hero.Masteries.MasteryPointsTotal.GetHashCode() -> int
override GuildWars2.Hero.Masteries.MasteryPointsTotal.ToString() -> string!
override GuildWars2.Hero.Masteries.MasteryTrack.Equals(object? obj) -> bool
override GuildWars2.Hero.Masteries.MasteryTrack.GetHashCode() -> int
override GuildWars2.Hero.Masteries.MasteryTrack.ToString() -> string!
override GuildWars2.Hero.Masteries.MasteryTrackProgress.Equals(object? obj) -> bool
override GuildWars2.Hero.Masteries.MasteryTrackProgress.GetHashCode() -> int
override GuildWars2.Hero.Masteries.MasteryTrackProgress.ToString() -> string!
override GuildWars2.Hero.Races.Race.Equals(object? obj) -> bool
override GuildWars2.Hero.Races.Race.GetHashCode() -> int
override GuildWars2.Hero.Races.Race.ToString() -> string!
override GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.ToString() -> string!
override GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.ToString() -> string!
override GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.ToString() -> string!
override GuildWars2.Hero.StoryJournal.Stories.Chapter.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.Stories.Chapter.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.Stories.Chapter.ToString() -> string!
override GuildWars2.Hero.StoryJournal.Stories.Objective.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.Stories.Objective.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.Stories.Objective.ToString() -> string!
override GuildWars2.Hero.StoryJournal.Stories.Story.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.Stories.Story.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.Stories.Story.ToString() -> string!
override GuildWars2.Hero.StoryJournal.Stories.StoryFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.StoryJournal.Stories.StoryFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.Stories.StoryFlags.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.Stories.Storyline.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.Stories.Storyline.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.Stories.Storyline.ToString() -> string!
override GuildWars2.Hero.StoryJournal.Stories.StoryStep.Equals(object? obj) -> bool
override GuildWars2.Hero.StoryJournal.Stories.StoryStep.GetHashCode() -> int
override GuildWars2.Hero.StoryJournal.Stories.StoryStep.ToString() -> string!
override GuildWars2.Hero.Training.CharacterTraining.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.CharacterTraining.GetHashCode() -> int
override GuildWars2.Hero.Training.CharacterTraining.ToString() -> string!
override GuildWars2.Hero.Training.Objectives.SkillObjective.<Clone>$() -> GuildWars2.Hero.Training.TrainingObjective!
override GuildWars2.Hero.Training.Objectives.SkillObjective.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Objectives.SkillObjective.GetHashCode() -> int
override GuildWars2.Hero.Training.Objectives.SkillObjective.ToString() -> string!
override GuildWars2.Hero.Training.Objectives.TraitObjective.<Clone>$() -> GuildWars2.Hero.Training.TrainingObjective!
override GuildWars2.Hero.Training.Objectives.TraitObjective.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Objectives.TraitObjective.GetHashCode() -> int
override GuildWars2.Hero.Training.Objectives.TraitObjective.ToString() -> string!
override GuildWars2.Hero.Training.Profession.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Profession.GetHashCode() -> int
override GuildWars2.Hero.Training.Profession.ToString() -> string!
override GuildWars2.Hero.Training.ProfessionFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Training.ProfessionFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.ProfessionFlags.GetHashCode() -> int
override GuildWars2.Hero.Training.Skills.EliteSkillSummary.<Clone>$() -> GuildWars2.Hero.Training.SkillSummary!
override GuildWars2.Hero.Training.Skills.EliteSkillSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Skills.EliteSkillSummary.GetHashCode() -> int
override GuildWars2.Hero.Training.Skills.EliteSkillSummary.ToString() -> string!
override GuildWars2.Hero.Training.Skills.HealingSkillSummary.<Clone>$() -> GuildWars2.Hero.Training.SkillSummary!
override GuildWars2.Hero.Training.Skills.HealingSkillSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Skills.HealingSkillSummary.GetHashCode() -> int
override GuildWars2.Hero.Training.Skills.HealingSkillSummary.ToString() -> string!
override GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.<Clone>$() -> GuildWars2.Hero.Training.SkillSummary!
override GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.GetHashCode() -> int
override GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.ToString() -> string!
override GuildWars2.Hero.Training.Skills.UtilitySkillSummary.<Clone>$() -> GuildWars2.Hero.Training.SkillSummary!
override GuildWars2.Hero.Training.Skills.UtilitySkillSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Skills.UtilitySkillSummary.GetHashCode() -> int
override GuildWars2.Hero.Training.Skills.UtilitySkillSummary.ToString() -> string!
override GuildWars2.Hero.Training.SkillSummary.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.SkillSummary.GetHashCode() -> int
override GuildWars2.Hero.Training.SkillSummary.ToString() -> string!
override GuildWars2.Hero.Training.Training.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.Training.GetHashCode() -> int
override GuildWars2.Hero.Training.Training.ToString() -> string!
override GuildWars2.Hero.Training.TrainingObjective.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.TrainingObjective.GetHashCode() -> int
override GuildWars2.Hero.Training.TrainingObjective.ToString() -> string!
override GuildWars2.Hero.Training.TrainingProgress.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.TrainingProgress.GetHashCode() -> int
override GuildWars2.Hero.Training.TrainingProgress.ToString() -> string!
override GuildWars2.Hero.Training.WeaponFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Hero.Training.WeaponFlags.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.WeaponFlags.GetHashCode() -> int
override GuildWars2.Hero.Training.WeaponProficiency.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.WeaponProficiency.GetHashCode() -> int
override GuildWars2.Hero.Training.WeaponProficiency.ToString() -> string!
override GuildWars2.Hero.Training.WeaponSkill.Equals(object? obj) -> bool
override GuildWars2.Hero.Training.WeaponSkill.GetHashCode() -> int
override GuildWars2.Hero.Training.WeaponSkill.ToString() -> string!
override GuildWars2.Hero.Wallet.Currency.Equals(object? obj) -> bool
override GuildWars2.Hero.Wallet.Currency.GetHashCode() -> int
override GuildWars2.Hero.Wallet.Currency.ToString() -> string!
override GuildWars2.Hero.Wallet.CurrencyAmount.Equals(object? obj) -> bool
override GuildWars2.Hero.Wallet.CurrencyAmount.GetHashCode() -> int
override GuildWars2.Hero.Wallet.CurrencyAmount.ToString() -> string!
override GuildWars2.Http.QueryBuilder.ToString() -> string!
override GuildWars2.Http.WebLinks.LinkHeader.ToString() -> string!
override GuildWars2.Http.WebLinks.LinkValue.ToString() -> string!
override GuildWars2.Hyperlink.GetHashCode() -> int
override GuildWars2.Items.Accessory.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Accessory.Equals(object? obj) -> bool
override GuildWars2.Items.Accessory.GetHashCode() -> int
override GuildWars2.Items.Accessory.ToString() -> string!
override GuildWars2.Items.Amulet.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Amulet.Equals(object? obj) -> bool
override GuildWars2.Items.Amulet.GetHashCode() -> int
override GuildWars2.Items.Amulet.ToString() -> string!
override GuildWars2.Items.AppearanceChanger.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.AppearanceChanger.Equals(object? obj) -> bool
override GuildWars2.Items.AppearanceChanger.GetHashCode() -> int
override GuildWars2.Items.AppearanceChanger.ToString() -> string!
override GuildWars2.Items.Armor.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Armor.EqualityContract.get -> System.Type!
override GuildWars2.Items.Armor.Equals(object? obj) -> bool
override GuildWars2.Items.Armor.GetHashCode() -> int
override GuildWars2.Items.Armor.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Armor.ToString() -> string!
override GuildWars2.Items.Axe.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Axe.Equals(object? obj) -> bool
override GuildWars2.Items.Axe.GetHashCode() -> int
override GuildWars2.Items.Axe.ToString() -> string!
override GuildWars2.Items.Backpack.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Backpack.Equals(object? obj) -> bool
override GuildWars2.Items.Backpack.GetHashCode() -> int
override GuildWars2.Items.Backpack.ToString() -> string!
override GuildWars2.Items.Bag.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Bag.Equals(object? obj) -> bool
override GuildWars2.Items.Bag.GetHashCode() -> int
override GuildWars2.Items.Bag.ToString() -> string!
override GuildWars2.Items.BagSlotExpansion.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.BagSlotExpansion.Equals(object? obj) -> bool
override GuildWars2.Items.BagSlotExpansion.GetHashCode() -> int
override GuildWars2.Items.BagSlotExpansion.ToString() -> string!
override GuildWars2.Items.Bait.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Bait.Equals(object? obj) -> bool
override GuildWars2.Items.Bait.GetHashCode() -> int
override GuildWars2.Items.Bait.ToString() -> string!
override GuildWars2.Items.BankTabExpansion.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.BankTabExpansion.Equals(object? obj) -> bool
override GuildWars2.Items.BankTabExpansion.GetHashCode() -> int
override GuildWars2.Items.BankTabExpansion.ToString() -> string!
override GuildWars2.Items.BlackLionChest.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.BlackLionChest.Equals(object? obj) -> bool
override GuildWars2.Items.BlackLionChest.GetHashCode() -> int
override GuildWars2.Items.BlackLionChest.ToString() -> string!
override GuildWars2.Items.BlackLionChestKey.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.BlackLionChestKey.Equals(object? obj) -> bool
override GuildWars2.Items.BlackLionChestKey.GetHashCode() -> int
override GuildWars2.Items.BlackLionChestKey.ToString() -> string!
override GuildWars2.Items.Boots.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Boots.Equals(object? obj) -> bool
override GuildWars2.Items.Boots.GetHashCode() -> int
override GuildWars2.Items.Boots.ToString() -> string!
override GuildWars2.Items.Booze.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Booze.Equals(object? obj) -> bool
override GuildWars2.Items.Booze.GetHashCode() -> int
override GuildWars2.Items.Booze.ToString() -> string!
override GuildWars2.Items.Buff.Equals(object? obj) -> bool
override GuildWars2.Items.Buff.GetHashCode() -> int
override GuildWars2.Items.Buff.ToString() -> string!
override GuildWars2.Items.BuildStorageExpansion.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.BuildStorageExpansion.Equals(object? obj) -> bool
override GuildWars2.Items.BuildStorageExpansion.GetHashCode() -> int
override GuildWars2.Items.BuildStorageExpansion.ToString() -> string!
override GuildWars2.Items.BuildTemplateExpansion.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.BuildTemplateExpansion.Equals(object? obj) -> bool
override GuildWars2.Items.BuildTemplateExpansion.GetHashCode() -> int
override GuildWars2.Items.BuildTemplateExpansion.ToString() -> string!
override GuildWars2.Items.Coat.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Coat.Equals(object? obj) -> bool
override GuildWars2.Items.Coat.GetHashCode() -> int
override GuildWars2.Items.Coat.ToString() -> string!
override GuildWars2.Items.Consumable.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Consumable.EqualityContract.get -> System.Type!
override GuildWars2.Items.Consumable.Equals(object? obj) -> bool
override GuildWars2.Items.Consumable.GetHashCode() -> int
override GuildWars2.Items.Consumable.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Consumable.ToString() -> string!
override GuildWars2.Items.Container.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Container.EqualityContract.get -> System.Type!
override GuildWars2.Items.Container.Equals(object? obj) -> bool
override GuildWars2.Items.Container.GetHashCode() -> int
override GuildWars2.Items.Container.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Container.ToString() -> string!
override GuildWars2.Items.ContentUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.ContentUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.ContentUnlocker.GetHashCode() -> int
override GuildWars2.Items.ContentUnlocker.ToString() -> string!
override GuildWars2.Items.ContractNpc.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.ContractNpc.Equals(object? obj) -> bool
override GuildWars2.Items.ContractNpc.GetHashCode() -> int
override GuildWars2.Items.ContractNpc.ToString() -> string!
override GuildWars2.Items.CraftingMaterial.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.CraftingMaterial.Equals(object? obj) -> bool
override GuildWars2.Items.CraftingMaterial.GetHashCode() -> int
override GuildWars2.Items.CraftingMaterial.ToString() -> string!
override GuildWars2.Items.Currency.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Currency.Equals(object? obj) -> bool
override GuildWars2.Items.Currency.GetHashCode() -> int
override GuildWars2.Items.Currency.ToString() -> string!
override GuildWars2.Items.Dagger.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Dagger.Equals(object? obj) -> bool
override GuildWars2.Items.Dagger.GetHashCode() -> int
override GuildWars2.Items.Dagger.ToString() -> string!
override GuildWars2.Items.Dye.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Dye.Equals(object? obj) -> bool
override GuildWars2.Items.Dye.GetHashCode() -> int
override GuildWars2.Items.Dye.ToString() -> string!
override GuildWars2.Items.Effect.Equals(object? obj) -> bool
override GuildWars2.Items.Effect.GetHashCode() -> int
override GuildWars2.Items.Effect.ToString() -> string!
override GuildWars2.Items.EquipmentTemplateExpansion.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.EquipmentTemplateExpansion.Equals(object? obj) -> bool
override GuildWars2.Items.EquipmentTemplateExpansion.GetHashCode() -> int
override GuildWars2.Items.EquipmentTemplateExpansion.ToString() -> string!
override GuildWars2.Items.FishingRod.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.FishingRod.Equals(object? obj) -> bool
override GuildWars2.Items.FishingRod.GetHashCode() -> int
override GuildWars2.Items.FishingRod.ToString() -> string!
override GuildWars2.Items.Focus.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Focus.Equals(object? obj) -> bool
override GuildWars2.Items.Focus.GetHashCode() -> int
override GuildWars2.Items.Focus.ToString() -> string!
override GuildWars2.Items.Food.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Food.Equals(object? obj) -> bool
override GuildWars2.Items.Food.GetHashCode() -> int
override GuildWars2.Items.Food.ToString() -> string!
override GuildWars2.Items.GatheringTool.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.GatheringTool.EqualityContract.get -> System.Type!
override GuildWars2.Items.GatheringTool.Equals(object? obj) -> bool
override GuildWars2.Items.GatheringTool.GetHashCode() -> int
override GuildWars2.Items.GatheringTool.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.GatheringTool.ToString() -> string!
override GuildWars2.Items.Gem.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Gem.Equals(object? obj) -> bool
override GuildWars2.Items.Gem.GetHashCode() -> int
override GuildWars2.Items.Gem.ToString() -> string!
override GuildWars2.Items.GenericConsumable.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.GenericConsumable.Equals(object? obj) -> bool
override GuildWars2.Items.GenericConsumable.GetHashCode() -> int
override GuildWars2.Items.GenericConsumable.ToString() -> string!
override GuildWars2.Items.GiftBox.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.GiftBox.Equals(object? obj) -> bool
override GuildWars2.Items.GiftBox.GetHashCode() -> int
override GuildWars2.Items.GiftBox.ToString() -> string!
override GuildWars2.Items.Gizmo.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Gizmo.EqualityContract.get -> System.Type!
override GuildWars2.Items.Gizmo.Equals(object? obj) -> bool
override GuildWars2.Items.Gizmo.GetHashCode() -> int
override GuildWars2.Items.Gizmo.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Gizmo.ToString() -> string!
override GuildWars2.Items.GliderSkinUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.GliderSkinUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.GliderSkinUnlocker.GetHashCode() -> int
override GuildWars2.Items.GliderSkinUnlocker.ToString() -> string!
override GuildWars2.Items.Gloves.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Gloves.Equals(object? obj) -> bool
override GuildWars2.Items.Gloves.GetHashCode() -> int
override GuildWars2.Items.Gloves.ToString() -> string!
override GuildWars2.Items.Greatsword.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Greatsword.Equals(object? obj) -> bool
override GuildWars2.Items.Greatsword.GetHashCode() -> int
override GuildWars2.Items.Greatsword.ToString() -> string!
override GuildWars2.Items.Greatsword.TwoHanded.get -> bool
override GuildWars2.Items.HalloweenConsumable.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.HalloweenConsumable.Equals(object? obj) -> bool
override GuildWars2.Items.HalloweenConsumable.GetHashCode() -> int
override GuildWars2.Items.HalloweenConsumable.ToString() -> string!
override GuildWars2.Items.Hammer.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Hammer.Equals(object? obj) -> bool
override GuildWars2.Items.Hammer.GetHashCode() -> int
override GuildWars2.Items.Hammer.ToString() -> string!
override GuildWars2.Items.Hammer.TwoHanded.get -> bool
override GuildWars2.Items.HarpoonGun.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.HarpoonGun.Equals(object? obj) -> bool
override GuildWars2.Items.HarpoonGun.GetHashCode() -> int
override GuildWars2.Items.HarpoonGun.ToString() -> string!
override GuildWars2.Items.HarpoonGun.TwoHanded.get -> bool
override GuildWars2.Items.HarvestingSickle.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.HarvestingSickle.Equals(object? obj) -> bool
override GuildWars2.Items.HarvestingSickle.GetHashCode() -> int
override GuildWars2.Items.HarvestingSickle.ToString() -> string!
override GuildWars2.Items.Helm.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Helm.Equals(object? obj) -> bool
override GuildWars2.Items.Helm.GetHashCode() -> int
override GuildWars2.Items.Helm.ToString() -> string!
override GuildWars2.Items.HelmAquatic.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.HelmAquatic.Equals(object? obj) -> bool
override GuildWars2.Items.HelmAquatic.GetHashCode() -> int
override GuildWars2.Items.HelmAquatic.ToString() -> string!
override GuildWars2.Items.ImmediateContainer.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.ImmediateContainer.Equals(object? obj) -> bool
override GuildWars2.Items.ImmediateContainer.GetHashCode() -> int
override GuildWars2.Items.ImmediateContainer.ToString() -> string!
override GuildWars2.Items.InfusionSlot.Equals(object? obj) -> bool
override GuildWars2.Items.InfusionSlot.GetHashCode() -> int
override GuildWars2.Items.InfusionSlot.ToString() -> string!
override GuildWars2.Items.InfusionSlotFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Items.InfusionSlotFlags.Equals(object? obj) -> bool
override GuildWars2.Items.InfusionSlotFlags.GetHashCode() -> int
override GuildWars2.Items.InfusionSlotUpgradePath.Equals(object? obj) -> bool
override GuildWars2.Items.InfusionSlotUpgradePath.GetHashCode() -> int
override GuildWars2.Items.InfusionSlotUpgradePath.ToString() -> string!
override GuildWars2.Items.InfusionSlotUpgradeSource.Equals(object? obj) -> bool
override GuildWars2.Items.InfusionSlotUpgradeSource.GetHashCode() -> int
override GuildWars2.Items.InfusionSlotUpgradeSource.ToString() -> string!
override GuildWars2.Items.Item.Equals(object? obj) -> bool
override GuildWars2.Items.Item.GetHashCode() -> int
override GuildWars2.Items.Item.ToString() -> string!
override GuildWars2.Items.ItemFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Items.ItemFlags.Equals(object? obj) -> bool
override GuildWars2.Items.ItemFlags.GetHashCode() -> int
override GuildWars2.Items.ItemRestriction.Equals(object? obj) -> bool
override GuildWars2.Items.ItemRestriction.GetHashCode() -> int
override GuildWars2.Items.ItemRestriction.ToString() -> string!
override GuildWars2.Items.JadeBotSkinUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.JadeBotSkinUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.JadeBotSkinUnlocker.GetHashCode() -> int
override GuildWars2.Items.JadeBotSkinUnlocker.ToString() -> string!
override GuildWars2.Items.JadeTechModule.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.JadeTechModule.Equals(object? obj) -> bool
override GuildWars2.Items.JadeTechModule.GetHashCode() -> int
override GuildWars2.Items.JadeTechModule.ToString() -> string!
override GuildWars2.Items.LargeBundle.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.LargeBundle.Equals(object? obj) -> bool
override GuildWars2.Items.LargeBundle.GetHashCode() -> int
override GuildWars2.Items.LargeBundle.ToString() -> string!
override GuildWars2.Items.LargeBundle.TwoHanded.get -> bool
override GuildWars2.Items.Leggings.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Leggings.Equals(object? obj) -> bool
override GuildWars2.Items.Leggings.GetHashCode() -> int
override GuildWars2.Items.Leggings.ToString() -> string!
override GuildWars2.Items.LoggingAxe.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.LoggingAxe.Equals(object? obj) -> bool
override GuildWars2.Items.LoggingAxe.GetHashCode() -> int
override GuildWars2.Items.LoggingAxe.ToString() -> string!
override GuildWars2.Items.Longbow.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Longbow.Equals(object? obj) -> bool
override GuildWars2.Items.Longbow.GetHashCode() -> int
override GuildWars2.Items.Longbow.ToString() -> string!
override GuildWars2.Items.Longbow.TwoHanded.get -> bool
override GuildWars2.Items.Lure.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Lure.Equals(object? obj) -> bool
override GuildWars2.Items.Lure.GetHashCode() -> int
override GuildWars2.Items.Lure.ToString() -> string!
override GuildWars2.Items.Mace.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Mace.Equals(object? obj) -> bool
override GuildWars2.Items.Mace.GetHashCode() -> int
override GuildWars2.Items.Mace.ToString() -> string!
override GuildWars2.Items.Miniature.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Miniature.Equals(object? obj) -> bool
override GuildWars2.Items.Miniature.GetHashCode() -> int
override GuildWars2.Items.Miniature.ToString() -> string!
override GuildWars2.Items.MiniatureUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.MiniatureUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.MiniatureUnlocker.GetHashCode() -> int
override GuildWars2.Items.MiniatureUnlocker.ToString() -> string!
override GuildWars2.Items.MiningPick.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.MiningPick.Equals(object? obj) -> bool
override GuildWars2.Items.MiningPick.GetHashCode() -> int
override GuildWars2.Items.MiningPick.ToString() -> string!
override GuildWars2.Items.MistChampionSkinUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.MistChampionSkinUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.MistChampionSkinUnlocker.GetHashCode() -> int
override GuildWars2.Items.MistChampionSkinUnlocker.ToString() -> string!
override GuildWars2.Items.MountLicense.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.MountLicense.Equals(object? obj) -> bool
override GuildWars2.Items.MountLicense.GetHashCode() -> int
override GuildWars2.Items.MountLicense.ToString() -> string!
override GuildWars2.Items.MountSkinUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.MountSkinUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.MountSkinUnlocker.GetHashCode() -> int
override GuildWars2.Items.MountSkinUnlocker.ToString() -> string!
override GuildWars2.Items.OutfitUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.OutfitUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.OutfitUnlocker.GetHashCode() -> int
override GuildWars2.Items.OutfitUnlocker.ToString() -> string!
override GuildWars2.Items.Pistol.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Pistol.Equals(object? obj) -> bool
override GuildWars2.Items.Pistol.GetHashCode() -> int
override GuildWars2.Items.Pistol.ToString() -> string!
override GuildWars2.Items.PowerCore.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.PowerCore.Equals(object? obj) -> bool
override GuildWars2.Items.PowerCore.GetHashCode() -> int
override GuildWars2.Items.PowerCore.ToString() -> string!
override GuildWars2.Items.RandomUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.RandomUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.RandomUnlocker.GetHashCode() -> int
override GuildWars2.Items.RandomUnlocker.ToString() -> string!
override GuildWars2.Items.RecipeSheet.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.RecipeSheet.Equals(object? obj) -> bool
override GuildWars2.Items.RecipeSheet.GetHashCode() -> int
override GuildWars2.Items.RecipeSheet.ToString() -> string!
override GuildWars2.Items.Relic.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Relic.Equals(object? obj) -> bool
override GuildWars2.Items.Relic.GetHashCode() -> int
override GuildWars2.Items.Relic.ToString() -> string!
override GuildWars2.Items.RentableContractNpc.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.RentableContractNpc.Equals(object? obj) -> bool
override GuildWars2.Items.RentableContractNpc.GetHashCode() -> int
override GuildWars2.Items.RentableContractNpc.ToString() -> string!
override GuildWars2.Items.Rifle.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Rifle.Equals(object? obj) -> bool
override GuildWars2.Items.Rifle.GetHashCode() -> int
override GuildWars2.Items.Rifle.ToString() -> string!
override GuildWars2.Items.Rifle.TwoHanded.get -> bool
override GuildWars2.Items.Ring.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Ring.Equals(object? obj) -> bool
override GuildWars2.Items.Ring.GetHashCode() -> int
override GuildWars2.Items.Ring.ToString() -> string!
override GuildWars2.Items.Rune.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Rune.Equals(object? obj) -> bool
override GuildWars2.Items.Rune.GetHashCode() -> int
override GuildWars2.Items.Rune.ToString() -> string!
override GuildWars2.Items.SalvageTool.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.SalvageTool.Equals(object? obj) -> bool
override GuildWars2.Items.SalvageTool.GetHashCode() -> int
override GuildWars2.Items.SalvageTool.ToString() -> string!
override GuildWars2.Items.Scepter.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Scepter.Equals(object? obj) -> bool
override GuildWars2.Items.Scepter.GetHashCode() -> int
override GuildWars2.Items.Scepter.ToString() -> string!
override GuildWars2.Items.Service.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Service.Equals(object? obj) -> bool
override GuildWars2.Items.Service.GetHashCode() -> int
override GuildWars2.Items.Service.ToString() -> string!
override GuildWars2.Items.SharedInventorySlot.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.SharedInventorySlot.Equals(object? obj) -> bool
override GuildWars2.Items.SharedInventorySlot.GetHashCode() -> int
override GuildWars2.Items.SharedInventorySlot.ToString() -> string!
override GuildWars2.Items.Shield.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Shield.Equals(object? obj) -> bool
override GuildWars2.Items.Shield.GetHashCode() -> int
override GuildWars2.Items.Shield.ToString() -> string!
override GuildWars2.Items.Shortbow.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Shortbow.Equals(object? obj) -> bool
override GuildWars2.Items.Shortbow.GetHashCode() -> int
override GuildWars2.Items.Shortbow.ToString() -> string!
override GuildWars2.Items.Shortbow.TwoHanded.get -> bool
override GuildWars2.Items.Shoulders.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Shoulders.Equals(object? obj) -> bool
override GuildWars2.Items.Shoulders.GetHashCode() -> int
override GuildWars2.Items.Shoulders.ToString() -> string!
override GuildWars2.Items.Sigil.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Sigil.Equals(object? obj) -> bool
override GuildWars2.Items.Sigil.GetHashCode() -> int
override GuildWars2.Items.Sigil.ToString() -> string!
override GuildWars2.Items.SmallBundle.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.SmallBundle.Equals(object? obj) -> bool
override GuildWars2.Items.SmallBundle.GetHashCode() -> int
override GuildWars2.Items.SmallBundle.ToString() -> string!
override GuildWars2.Items.Spear.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Spear.Equals(object? obj) -> bool
override GuildWars2.Items.Spear.GetHashCode() -> int
override GuildWars2.Items.Spear.ToString() -> string!
override GuildWars2.Items.Spear.TwoHanded.get -> bool
override GuildWars2.Items.Staff.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Staff.Equals(object? obj) -> bool
override GuildWars2.Items.Staff.GetHashCode() -> int
override GuildWars2.Items.Staff.ToString() -> string!
override GuildWars2.Items.Staff.TwoHanded.get -> bool
override GuildWars2.Items.Stats.Attribute.Equals(object? obj) -> bool
override GuildWars2.Items.Stats.Attribute.GetHashCode() -> int
override GuildWars2.Items.Stats.Attribute.ToString() -> string!
override GuildWars2.Items.Stats.AttributeCombination.Equals(object? obj) -> bool
override GuildWars2.Items.Stats.AttributeCombination.GetHashCode() -> int
override GuildWars2.Items.Stats.AttributeCombination.ToString() -> string!
override GuildWars2.Items.StorageExpander.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.StorageExpander.Equals(object? obj) -> bool
override GuildWars2.Items.StorageExpander.GetHashCode() -> int
override GuildWars2.Items.StorageExpander.ToString() -> string!
override GuildWars2.Items.Sword.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Sword.Equals(object? obj) -> bool
override GuildWars2.Items.Sword.GetHashCode() -> int
override GuildWars2.Items.Sword.ToString() -> string!
override GuildWars2.Items.TeleportToFriend.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.TeleportToFriend.Equals(object? obj) -> bool
override GuildWars2.Items.TeleportToFriend.GetHashCode() -> int
override GuildWars2.Items.TeleportToFriend.ToString() -> string!
override GuildWars2.Items.Torch.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Torch.Equals(object? obj) -> bool
override GuildWars2.Items.Torch.GetHashCode() -> int
override GuildWars2.Items.Torch.ToString() -> string!
override GuildWars2.Items.Toy.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Toy.Equals(object? obj) -> bool
override GuildWars2.Items.Toy.GetHashCode() -> int
override GuildWars2.Items.Toy.ToString() -> string!
override GuildWars2.Items.ToyTwoHanded.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.ToyTwoHanded.Equals(object? obj) -> bool
override GuildWars2.Items.ToyTwoHanded.GetHashCode() -> int
override GuildWars2.Items.ToyTwoHanded.ToString() -> string!
override GuildWars2.Items.ToyTwoHanded.TwoHanded.get -> bool
override GuildWars2.Items.Transmutation.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Transmutation.Equals(object? obj) -> bool
override GuildWars2.Items.Transmutation.GetHashCode() -> int
override GuildWars2.Items.Transmutation.ToString() -> string!
override GuildWars2.Items.Trident.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Trident.Equals(object? obj) -> bool
override GuildWars2.Items.Trident.GetHashCode() -> int
override GuildWars2.Items.Trident.ToString() -> string!
override GuildWars2.Items.Trident.TwoHanded.get -> bool
override GuildWars2.Items.Trinket.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Trinket.EqualityContract.get -> System.Type!
override GuildWars2.Items.Trinket.Equals(object? obj) -> bool
override GuildWars2.Items.Trinket.GetHashCode() -> int
override GuildWars2.Items.Trinket.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Trinket.ToString() -> string!
override GuildWars2.Items.Trophy.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Trophy.Equals(object? obj) -> bool
override GuildWars2.Items.Trophy.GetHashCode() -> int
override GuildWars2.Items.Trophy.ToString() -> string!
override GuildWars2.Items.UnlimitedConsumable.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.UnlimitedConsumable.Equals(object? obj) -> bool
override GuildWars2.Items.UnlimitedConsumable.GetHashCode() -> int
override GuildWars2.Items.UnlimitedConsumable.ToString() -> string!
override GuildWars2.Items.Unlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Unlocker.EqualityContract.get -> System.Type!
override GuildWars2.Items.Unlocker.Equals(object? obj) -> bool
override GuildWars2.Items.Unlocker.GetHashCode() -> int
override GuildWars2.Items.Unlocker.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Unlocker.ToString() -> string!
override GuildWars2.Items.UpgradeComponent.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.UpgradeComponent.EqualityContract.get -> System.Type!
override GuildWars2.Items.UpgradeComponent.Equals(object? obj) -> bool
override GuildWars2.Items.UpgradeComponent.GetHashCode() -> int
override GuildWars2.Items.UpgradeComponent.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.UpgradeComponent.ToString() -> string!
override GuildWars2.Items.UpgradeComponentFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Items.UpgradeComponentFlags.Equals(object? obj) -> bool
override GuildWars2.Items.UpgradeComponentFlags.GetHashCode() -> int
override GuildWars2.Items.UpgradeExtractor.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.UpgradeExtractor.Equals(object? obj) -> bool
override GuildWars2.Items.UpgradeExtractor.GetHashCode() -> int
override GuildWars2.Items.UpgradeExtractor.ToString() -> string!
override GuildWars2.Items.Utility.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Utility.Equals(object? obj) -> bool
override GuildWars2.Items.Utility.GetHashCode() -> int
override GuildWars2.Items.Utility.ToString() -> string!
override GuildWars2.Items.Warhorn.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Warhorn.Equals(object? obj) -> bool
override GuildWars2.Items.Warhorn.GetHashCode() -> int
override GuildWars2.Items.Warhorn.ToString() -> string!
override GuildWars2.Items.Weapon.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.Weapon.EqualityContract.get -> System.Type!
override GuildWars2.Items.Weapon.Equals(object? obj) -> bool
override GuildWars2.Items.Weapon.GetHashCode() -> int
override GuildWars2.Items.Weapon.PrintMembers(System.Text.StringBuilder! builder) -> bool
override GuildWars2.Items.Weapon.ToString() -> string!
override GuildWars2.Language.ToString() -> string!
override GuildWars2.Link.Equals(object? obj) -> bool
override GuildWars2.Link.GetHashCode() -> int
override GuildWars2.Link.ToString() -> string!
override GuildWars2.Logos.Logo.Equals(object? obj) -> bool
override GuildWars2.Logos.Logo.GetHashCode() -> int
override GuildWars2.Logos.Logo.ToString() -> string!
override GuildWars2.Markup.ColoredTextNode.Type.get -> GuildWars2.Markup.MarkupNodeType
override GuildWars2.Markup.LineBreakNode.Type.get -> GuildWars2.Markup.MarkupNodeType
override GuildWars2.Markup.MarkupNode.ToString() -> string!
override GuildWars2.Markup.MarkupToken.Equals(object? obj) -> bool
override GuildWars2.Markup.MarkupToken.GetHashCode() -> int
override GuildWars2.Markup.MarkupToken.ToString() -> string!
override GuildWars2.Markup.RootNode.Type.get -> GuildWars2.Markup.MarkupNodeType
override GuildWars2.Markup.TextNode.Type.get -> GuildWars2.Markup.MarkupNodeType
override GuildWars2.MessageContext.Equals(object? obj) -> bool
override GuildWars2.MessageContext.GetHashCode() -> int
override GuildWars2.MessageContext.ToString() -> string!
override GuildWars2.Metadata.ApiVersion.Equals(object? obj) -> bool
override GuildWars2.Metadata.ApiVersion.GetHashCode() -> int
override GuildWars2.Metadata.ApiVersion.ToString() -> string!
override GuildWars2.Metadata.Build.Equals(object? obj) -> bool
override GuildWars2.Metadata.Build.GetHashCode() -> int
override GuildWars2.Metadata.Build.ToString() -> string!
override GuildWars2.Metadata.Route.Equals(object? obj) -> bool
override GuildWars2.Metadata.Route.GetHashCode() -> int
override GuildWars2.Metadata.Route.ToString() -> string!
override GuildWars2.Metadata.Schema.Equals(object? obj) -> bool
override GuildWars2.Metadata.Schema.GetHashCode() -> int
override GuildWars2.Metadata.Schema.ToString() -> string!
override GuildWars2.Mumble.Context.GetHashCode() -> int
override GuildWars2.Mumble.GameTick.GetHashCode() -> int
override GuildWars2.Mumble.Identity.Equals(object? obj) -> bool
override GuildWars2.Mumble.Identity.GetHashCode() -> int
override GuildWars2.Mumble.Identity.ToString() -> string!
override GuildWars2.Pve.Dungeons.Dungeon.Equals(object? obj) -> bool
override GuildWars2.Pve.Dungeons.Dungeon.GetHashCode() -> int
override GuildWars2.Pve.Dungeons.Dungeon.ToString() -> string!
override GuildWars2.Pve.Dungeons.DungeonPath.Equals(object? obj) -> bool
override GuildWars2.Pve.Dungeons.DungeonPath.GetHashCode() -> int
override GuildWars2.Pve.Dungeons.DungeonPath.ToString() -> string!
override GuildWars2.Pve.Home.Cats.Cat.Equals(object? obj) -> bool
override GuildWars2.Pve.Home.Cats.Cat.GetHashCode() -> int
override GuildWars2.Pve.Home.Cats.Cat.ToString() -> string!
override GuildWars2.Pve.Home.Decorations.Decoration.Equals(object? obj) -> bool
override GuildWars2.Pve.Home.Decorations.Decoration.GetHashCode() -> int
override GuildWars2.Pve.Home.Decorations.Decoration.ToString() -> string!
override GuildWars2.Pve.Home.Decorations.DecorationCategory.Equals(object? obj) -> bool
override GuildWars2.Pve.Home.Decorations.DecorationCategory.GetHashCode() -> int
override GuildWars2.Pve.Home.Decorations.DecorationCategory.ToString() -> string!
override GuildWars2.Pve.Home.Decorations.Glyph.Equals(object? obj) -> bool
override GuildWars2.Pve.Home.Decorations.Glyph.GetHashCode() -> int
override GuildWars2.Pve.Home.Decorations.Glyph.ToString() -> string!
override GuildWars2.Pve.Home.Decorations.UnlockedDecoration.Equals(object? obj) -> bool
override GuildWars2.Pve.Home.Decorations.UnlockedDecoration.GetHashCode() -> int
override GuildWars2.Pve.Home.Decorations.UnlockedDecoration.ToString() -> string!
override GuildWars2.Pve.Home.Nodes.Node.Equals(object? obj) -> bool
override GuildWars2.Pve.Home.Nodes.Node.GetHashCode() -> int
override GuildWars2.Pve.Home.Nodes.Node.ToString() -> string!
override GuildWars2.Pve.MapChests.MapChest.Equals(object? obj) -> bool
override GuildWars2.Pve.MapChests.MapChest.GetHashCode() -> int
override GuildWars2.Pve.MapChests.MapChest.ToString() -> string!
override GuildWars2.Pve.Pets.Pet.Equals(object? obj) -> bool
override GuildWars2.Pve.Pets.Pet.GetHashCode() -> int
override GuildWars2.Pve.Pets.Pet.ToString() -> string!
override GuildWars2.Pve.Pets.PetSkill.Equals(object? obj) -> bool
override GuildWars2.Pve.Pets.PetSkill.GetHashCode() -> int
override GuildWars2.Pve.Pets.PetSkill.ToString() -> string!
override GuildWars2.Pve.Raids.Encounter.Equals(object? obj) -> bool
override GuildWars2.Pve.Raids.Encounter.GetHashCode() -> int
override GuildWars2.Pve.Raids.Encounter.ToString() -> string!
override GuildWars2.Pve.Raids.Raid.Equals(object? obj) -> bool
override GuildWars2.Pve.Raids.Raid.GetHashCode() -> int
override GuildWars2.Pve.Raids.Raid.ToString() -> string!
override GuildWars2.Pve.Raids.RaidWing.Equals(object? obj) -> bool
override GuildWars2.Pve.Raids.RaidWing.GetHashCode() -> int
override GuildWars2.Pve.Raids.RaidWing.ToString() -> string!
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.Equals(object? obj) -> bool
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.GetHashCode() -> int
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.ToString() -> string!
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.Equals(object? obj) -> bool
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.GetHashCode() -> int
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.ToString() -> string!
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.Equals(object? obj) -> bool
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.GetHashCode() -> int
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.ToString() -> string!
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.Equals(object? obj) -> bool
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.GetHashCode() -> int
override GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.ToString() -> string!
override GuildWars2.Pvp.Amulets.Amulet.Equals(object? obj) -> bool
override GuildWars2.Pvp.Amulets.Amulet.GetHashCode() -> int
override GuildWars2.Pvp.Amulets.Amulet.ToString() -> string!
override GuildWars2.Pvp.Games.Game.Equals(object? obj) -> bool
override GuildWars2.Pvp.Games.Game.GetHashCode() -> int
override GuildWars2.Pvp.Games.Game.ToString() -> string!
override GuildWars2.Pvp.Games.Score.Equals(object? obj) -> bool
override GuildWars2.Pvp.Games.Score.GetHashCode() -> int
override GuildWars2.Pvp.Games.Score.ToString() -> string!
override GuildWars2.Pvp.MistChampions.MistChampion.Equals(object? obj) -> bool
override GuildWars2.Pvp.MistChampions.MistChampion.GetHashCode() -> int
override GuildWars2.Pvp.MistChampions.MistChampion.ToString() -> string!
override GuildWars2.Pvp.MistChampions.MistChampionSkin.Equals(object? obj) -> bool
override GuildWars2.Pvp.MistChampions.MistChampionSkin.GetHashCode() -> int
override GuildWars2.Pvp.MistChampions.MistChampionSkin.ToString() -> string!
override GuildWars2.Pvp.MistChampions.MistChampionStats.Equals(object? obj) -> bool
override GuildWars2.Pvp.MistChampions.MistChampionStats.GetHashCode() -> int
override GuildWars2.Pvp.MistChampions.MistChampionStats.ToString() -> string!
override GuildWars2.Pvp.Ranks.Level.Equals(object? obj) -> bool
override GuildWars2.Pvp.Ranks.Level.GetHashCode() -> int
override GuildWars2.Pvp.Ranks.Level.ToString() -> string!
override GuildWars2.Pvp.Ranks.Rank.Equals(object? obj) -> bool
override GuildWars2.Pvp.Ranks.Rank.GetHashCode() -> int
override GuildWars2.Pvp.Ranks.Rank.ToString() -> string!
override GuildWars2.Pvp.Seasons.Division.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.Division.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.Division.ToString() -> string!
override GuildWars2.Pvp.Seasons.DivisionFlags.<Clone>$() -> GuildWars2.Flags!
override GuildWars2.Pvp.Seasons.DivisionFlags.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.DivisionFlags.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.DivisionTier.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.DivisionTier.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.DivisionTier.ToString() -> string!
override GuildWars2.Pvp.Seasons.Leaderboard.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.Leaderboard.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.Leaderboard.ToString() -> string!
override GuildWars2.Pvp.Seasons.LeaderboardEntry.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.LeaderboardEntry.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.LeaderboardEntry.ToString() -> string!
override GuildWars2.Pvp.Seasons.LeaderboardGroup.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.LeaderboardGroup.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.LeaderboardGroup.ToString() -> string!
override GuildWars2.Pvp.Seasons.LeaderboardScoring.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.LeaderboardScoring.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.LeaderboardScoring.ToString() -> string!
override GuildWars2.Pvp.Seasons.LeaderboardSetting.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.LeaderboardSetting.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.LeaderboardSetting.ToString() -> string!
override GuildWars2.Pvp.Seasons.LeaderboardTier.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.LeaderboardTier.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.LeaderboardTier.ToString() -> string!
override GuildWars2.Pvp.Seasons.LeaderboardTierRange.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.LeaderboardTierRange.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.LeaderboardTierRange.ToString() -> string!
override GuildWars2.Pvp.Seasons.Score.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.Score.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.Score.ToString() -> string!
override GuildWars2.Pvp.Seasons.Season.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.Season.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.Season.ToString() -> string!
override GuildWars2.Pvp.Seasons.SkillBadge.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.SkillBadge.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.SkillBadge.ToString() -> string!
override GuildWars2.Pvp.Seasons.SkillBadgeTier.Equals(object? obj) -> bool
override GuildWars2.Pvp.Seasons.SkillBadgeTier.GetHashCode() -> int
override GuildWars2.Pvp.Seasons.SkillBadgeTier.ToString() -> string!
override GuildWars2.Pvp.Standings.BestStanding.Equals(object? obj) -> bool
override GuildWars2.Pvp.Standings.BestStanding.GetHashCode() -> int
override GuildWars2.Pvp.Standings.BestStanding.ToString() -> string!
override GuildWars2.Pvp.Standings.CurrentStanding.Equals(object? obj) -> bool
override GuildWars2.Pvp.Standings.CurrentStanding.GetHashCode() -> int
override GuildWars2.Pvp.Standings.CurrentStanding.ToString() -> string!
override GuildWars2.Pvp.Standings.Standing.Equals(object? obj) -> bool
override GuildWars2.Pvp.Standings.Standing.GetHashCode() -> int
override GuildWars2.Pvp.Standings.Standing.ToString() -> string!
override GuildWars2.Pvp.Stats.AccountStats.Equals(object? obj) -> bool
override GuildWars2.Pvp.Stats.AccountStats.GetHashCode() -> int
override GuildWars2.Pvp.Stats.AccountStats.ToString() -> string!
override GuildWars2.Pvp.Stats.Ladders.Equals(object? obj) -> bool
override GuildWars2.Pvp.Stats.Ladders.GetHashCode() -> int
override GuildWars2.Pvp.Stats.Ladders.ToString() -> string!
override GuildWars2.Pvp.Stats.Results.Equals(object? obj) -> bool
override GuildWars2.Pvp.Stats.Results.GetHashCode() -> int
override GuildWars2.Pvp.Stats.Results.ToString() -> string!
override GuildWars2.Quaggans.Quaggan.Equals(object? obj) -> bool
override GuildWars2.Quaggans.Quaggan.GetHashCode() -> int
override GuildWars2.Quaggans.Quaggan.ToString() -> string!
override GuildWars2.SchemaVersion.ToString() -> string!
override GuildWars2.WizardsVault.AstralRewards.AstralReward.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.AstralRewards.AstralReward.GetHashCode() -> int
override GuildWars2.WizardsVault.AstralRewards.AstralReward.ToString() -> string!
override GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.GetHashCode() -> int
override GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.ToString() -> string!
override GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.GetHashCode() -> int
override GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.ToString() -> string!
override GuildWars2.WizardsVault.Objectives.Objective.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.Objectives.Objective.GetHashCode() -> int
override GuildWars2.WizardsVault.Objectives.Objective.ToString() -> string!
override GuildWars2.WizardsVault.Objectives.ObjectiveProgress.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.Objectives.ObjectiveProgress.GetHashCode() -> int
override GuildWars2.WizardsVault.Objectives.ObjectiveProgress.ToString() -> string!
override GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.GetHashCode() -> int
override GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.ToString() -> string!
override GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.GetHashCode() -> int
override GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.ToString() -> string!
override GuildWars2.WizardsVault.Seasons.Season.Equals(object? obj) -> bool
override GuildWars2.WizardsVault.Seasons.Season.GetHashCode() -> int
override GuildWars2.WizardsVault.Seasons.Season.ToString() -> string!
override GuildWars2.Worlds.World.Equals(object? obj) -> bool
override GuildWars2.Worlds.World.GetHashCode() -> int
override GuildWars2.Worlds.World.ToString() -> string!
override GuildWars2.Wvw.Abilities.Ability.Equals(object? obj) -> bool
override GuildWars2.Wvw.Abilities.Ability.GetHashCode() -> int
override GuildWars2.Wvw.Abilities.Ability.ToString() -> string!
override GuildWars2.Wvw.Abilities.AbilityRank.Equals(object? obj) -> bool
override GuildWars2.Wvw.Abilities.AbilityRank.GetHashCode() -> int
override GuildWars2.Wvw.Abilities.AbilityRank.ToString() -> string!
override GuildWars2.Wvw.Guilds.AccountWvwGuild.Equals(object? obj) -> bool
override GuildWars2.Wvw.Guilds.AccountWvwGuild.GetHashCode() -> int
override GuildWars2.Wvw.Guilds.AccountWvwGuild.ToString() -> string!
override GuildWars2.Wvw.Guilds.WvwGuild.Equals(object? obj) -> bool
override GuildWars2.Wvw.Guilds.WvwGuild.GetHashCode() -> int
override GuildWars2.Wvw.Guilds.WvwGuild.ToString() -> string!
override GuildWars2.Wvw.Matches.AllWorlds.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.AllWorlds.GetHashCode() -> int
override GuildWars2.Wvw.Matches.AllWorlds.ToString() -> string!
override GuildWars2.Wvw.Matches.Bonus.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Bonus.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Bonus.ToString() -> string!
override GuildWars2.Wvw.Matches.Distribution.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Distribution.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Distribution.ToString() -> string!
override GuildWars2.Wvw.Matches.Map.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Map.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Map.ToString() -> string!
override GuildWars2.Wvw.Matches.MapScores.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.MapScores.GetHashCode() -> int
override GuildWars2.Wvw.Matches.MapScores.ToString() -> string!
override GuildWars2.Wvw.Matches.Match.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Match.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Match.ToString() -> string!
override GuildWars2.Wvw.Matches.Overview.MatchOverview.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Overview.MatchOverview.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Overview.MatchOverview.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedCamp.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedCamp.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedCamp.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedCamp.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedCastle.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedCastle.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedCastle.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedCastle.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedKeep.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedKeep.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedKeep.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedKeep.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedMercenary.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedMercenary.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedMercenary.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedMercenary.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedObjective.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedObjective.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedObjective.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedRuins.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedRuins.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedRuins.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedRuins.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedSpawn.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedSpawn.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedSpawn.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedSpawn.ToString() -> string!
override GuildWars2.Wvw.Matches.OwnedTower.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
override GuildWars2.Wvw.Matches.OwnedTower.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.OwnedTower.GetHashCode() -> int
override GuildWars2.Wvw.Matches.OwnedTower.ToString() -> string!
override GuildWars2.Wvw.Matches.Scores.MapSummary.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Scores.MapSummary.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Scores.MapSummary.ToString() -> string!
override GuildWars2.Wvw.Matches.Scores.MatchScores.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Scores.MatchScores.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Scores.MatchScores.ToString() -> string!
override GuildWars2.Wvw.Matches.Skirmish.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Skirmish.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Skirmish.ToString() -> string!
override GuildWars2.Wvw.Matches.Stats.MapSummary.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Stats.MapSummary.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Stats.MapSummary.ToString() -> string!
override GuildWars2.Wvw.Matches.Stats.MatchStats.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Stats.MatchStats.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Stats.MatchStats.ToString() -> string!
override GuildWars2.Wvw.Matches.Worlds.Equals(object? obj) -> bool
override GuildWars2.Wvw.Matches.Worlds.GetHashCode() -> int
override GuildWars2.Wvw.Matches.Worlds.ToString() -> string!
override GuildWars2.Wvw.Objectives.Camp.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Camp.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Camp.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Camp.ToString() -> string!
override GuildWars2.Wvw.Objectives.Castle.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Castle.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Castle.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Castle.ToString() -> string!
override GuildWars2.Wvw.Objectives.Keep.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Keep.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Keep.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Keep.ToString() -> string!
override GuildWars2.Wvw.Objectives.Mercenary.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Mercenary.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Mercenary.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Mercenary.ToString() -> string!
override GuildWars2.Wvw.Objectives.Objective.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Objective.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Objective.ToString() -> string!
override GuildWars2.Wvw.Objectives.Resource.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Resource.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Resource.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Resource.ToString() -> string!
override GuildWars2.Wvw.Objectives.Ruins.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Ruins.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Ruins.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Ruins.ToString() -> string!
override GuildWars2.Wvw.Objectives.Spawn.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Spawn.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Spawn.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Spawn.ToString() -> string!
override GuildWars2.Wvw.Objectives.Tower.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
override GuildWars2.Wvw.Objectives.Tower.Equals(object? obj) -> bool
override GuildWars2.Wvw.Objectives.Tower.GetHashCode() -> int
override GuildWars2.Wvw.Objectives.Tower.ToString() -> string!
override GuildWars2.Wvw.Ranks.Rank.Equals(object? obj) -> bool
override GuildWars2.Wvw.Ranks.Rank.GetHashCode() -> int
override GuildWars2.Wvw.Ranks.Rank.ToString() -> string!
override GuildWars2.Wvw.Timers.WvwTimer.Equals(object? obj) -> bool
override GuildWars2.Wvw.Timers.WvwTimer.GetHashCode() -> int
override GuildWars2.Wvw.Timers.WvwTimer.ToString() -> string!
override GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.Equals(object? obj) -> bool
override GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.GetHashCode() -> int
override GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.ToString() -> string!
override GuildWars2.Wvw.Upgrades.Upgrade.Equals(object? obj) -> bool
override GuildWars2.Wvw.Upgrades.Upgrade.GetHashCode() -> int
override GuildWars2.Wvw.Upgrades.Upgrade.ToString() -> string!
override GuildWars2.Wvw.Upgrades.UpgradeTier.Equals(object? obj) -> bool
override GuildWars2.Wvw.Upgrades.UpgradeTier.GetHashCode() -> int
override GuildWars2.Wvw.Upgrades.UpgradeTier.ToString() -> string!
override sealed GuildWars2.Authorization.ApiKeyInfo.Equals(GuildWars2.Authorization.TokenInfo? other) -> bool
override sealed GuildWars2.Authorization.SubtokenInfo.Equals(GuildWars2.Authorization.TokenInfo? other) -> bool
override sealed GuildWars2.Chat.AchievementLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.BuildTemplateLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.CoinLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.ItemLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.ObjectiveLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.OutfitLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.PointOfInterestLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.RecipeLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.SkillLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.SkinLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Chat.TranslationLink.Equals(GuildWars2.Chat.Link? other) -> bool
override sealed GuildWars2.Exploration.PointsOfInterest.Landmark.Equals(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? other) -> bool
override sealed GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.Equals(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? other) -> bool
override sealed GuildWars2.Exploration.PointsOfInterest.Vista.Equals(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? other) -> bool
override sealed GuildWars2.Exploration.PointsOfInterest.Waypoint.Equals(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? other) -> bool
override sealed GuildWars2.Flags.ToString() -> string!
override sealed GuildWars2.Guilds.Emblems.GuildEmblemFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Guilds.Logs.GuildBankActivity.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.GuildMission.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.GuildUpgradeActivity.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.InfluenceActivity.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.InviteDeclined.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.MemberInvited.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.MemberJoined.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.MemberKicked.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.NewMessageOfTheDay.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.RankChange.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Logs.TreasuryDeposit.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.AccumulatingCurrency.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.BankBag.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Boost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Claimable.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Consumable.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Decoration.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.GuildHall.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.GuildHallExpedition.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Hub.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Queue.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Guilds.Upgrades.Unlock.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
override sealed GuildWars2.Hero.Accounts.CharacterFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Achievements.AchievementFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Achievements.Bits.AchievementItemBit.Equals(GuildWars2.Hero.Achievements.AchievementBit? other) -> bool
override sealed GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.Equals(GuildWars2.Hero.Achievements.AchievementBit? other) -> bool
override sealed GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.Equals(GuildWars2.Hero.Achievements.AchievementBit? other) -> bool
override sealed GuildWars2.Hero.Achievements.Bits.AchievementTextBit.Equals(GuildWars2.Hero.Achievements.AchievementBit? other) -> bool
override sealed GuildWars2.Hero.Achievements.Categories.AchievementFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Achievements.CollectionAchievement.Equals(GuildWars2.Hero.Achievements.Achievement? other) -> bool
override sealed GuildWars2.Hero.Achievements.ItemReward.Equals(GuildWars2.Hero.Achievements.AchievementReward? other) -> bool
override sealed GuildWars2.Hero.Achievements.Rewards.CoinsReward.Equals(GuildWars2.Hero.Achievements.AchievementReward? other) -> bool
override sealed GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.Equals(GuildWars2.Hero.Achievements.AchievementReward? other) -> bool
override sealed GuildWars2.Hero.Achievements.Rewards.TitleReward.Equals(GuildWars2.Hero.Achievements.AchievementReward? other) -> bool
override sealed GuildWars2.Hero.Builds.ActionSkill.Equals(GuildWars2.Hero.Builds.Skill? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.AttributeAdjustment.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.AttributeConversion.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Buff.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.ComboField.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.ComboFinisher.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Damage.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Distance.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Duration.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.HealingAdjust.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.NoData.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Number.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Percentage.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.PrefixedBuff.Equals(GuildWars2.Hero.Builds.Facts.Buff? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Radius.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Range.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Recharge.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.StunBreak.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Time.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.Facts.Unblockable.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
override sealed GuildWars2.Hero.Builds.SkillFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.BundleSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.EliteSkill.Equals(GuildWars2.Hero.Builds.SlotSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.HealSkill.Equals(GuildWars2.Hero.Builds.SlotSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.LockedSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.MonsterSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.PetSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.ProfessionSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.ToolbeltSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.UtilitySkill.Equals(GuildWars2.Hero.Builds.SlotSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.Skills.WeaponSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Builds.SlotSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.AxeRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.BagRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.BootsRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.BulkRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.CoatRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.DessertRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.DyeRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.EarringRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.FeastRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.FocusRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.HammerRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.MaceRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.MealRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.PistolRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.PotionRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.RecipeFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.RifleRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.RingRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.SnackRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.SoupRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.SpearRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.StaffRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.SwordRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.TorchRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.TridentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
override sealed GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ToySkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
override sealed GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? other) -> bool
override sealed GuildWars2.Hero.StoryJournal.Stories.StoryFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Training.Objectives.SkillObjective.Equals(GuildWars2.Hero.Training.TrainingObjective? other) -> bool
override sealed GuildWars2.Hero.Training.Objectives.TraitObjective.Equals(GuildWars2.Hero.Training.TrainingObjective? other) -> bool
override sealed GuildWars2.Hero.Training.ProfessionFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Hero.Training.Skills.EliteSkillSummary.Equals(GuildWars2.Hero.Training.SkillSummary? other) -> bool
override sealed GuildWars2.Hero.Training.Skills.HealingSkillSummary.Equals(GuildWars2.Hero.Training.SkillSummary? other) -> bool
override sealed GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.Equals(GuildWars2.Hero.Training.SkillSummary? other) -> bool
override sealed GuildWars2.Hero.Training.Skills.UtilitySkillSummary.Equals(GuildWars2.Hero.Training.SkillSummary? other) -> bool
override sealed GuildWars2.Hero.Training.WeaponFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Items.Accessory.Equals(GuildWars2.Items.Trinket? other) -> bool
override sealed GuildWars2.Items.Amulet.Equals(GuildWars2.Items.Trinket? other) -> bool
override sealed GuildWars2.Items.AppearanceChanger.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Armor.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Axe.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Backpack.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Bag.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.BagSlotExpansion.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Bait.Equals(GuildWars2.Items.GatheringTool? other) -> bool
override sealed GuildWars2.Items.BankTabExpansion.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.BlackLionChest.Equals(GuildWars2.Items.Container? other) -> bool
override sealed GuildWars2.Items.BlackLionChestKey.Equals(GuildWars2.Items.Gizmo? other) -> bool
override sealed GuildWars2.Items.Boots.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.Booze.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.BuildStorageExpansion.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.BuildTemplateExpansion.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Coat.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.Consumable.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Container.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.ContentUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.ContractNpc.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.CraftingMaterial.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Currency.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Dagger.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Dye.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.EquipmentTemplateExpansion.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.FishingRod.Equals(GuildWars2.Items.GatheringTool? other) -> bool
override sealed GuildWars2.Items.Focus.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Food.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.GatheringTool.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Gem.Equals(GuildWars2.Items.UpgradeComponent? other) -> bool
override sealed GuildWars2.Items.GenericConsumable.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.GiftBox.Equals(GuildWars2.Items.Container? other) -> bool
override sealed GuildWars2.Items.Gizmo.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.GliderSkinUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Gloves.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.Greatsword.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.HalloweenConsumable.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Hammer.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.HarpoonGun.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.HarvestingSickle.Equals(GuildWars2.Items.GatheringTool? other) -> bool
override sealed GuildWars2.Items.Helm.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.HelmAquatic.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.ImmediateContainer.Equals(GuildWars2.Items.Container? other) -> bool
override sealed GuildWars2.Items.InfusionSlotFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Items.ItemFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Items.JadeBotSkinUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.JadeTechModule.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.LargeBundle.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Leggings.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.LoggingAxe.Equals(GuildWars2.Items.GatheringTool? other) -> bool
override sealed GuildWars2.Items.Longbow.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Lure.Equals(GuildWars2.Items.GatheringTool? other) -> bool
override sealed GuildWars2.Items.Mace.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Miniature.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.MiniatureUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.MiningPick.Equals(GuildWars2.Items.GatheringTool? other) -> bool
override sealed GuildWars2.Items.MistChampionSkinUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.MountLicense.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.MountSkinUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.OutfitUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Pistol.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.PowerCore.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.RandomUnlocker.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.RecipeSheet.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Relic.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.RentableContractNpc.Equals(GuildWars2.Items.Gizmo? other) -> bool
override sealed GuildWars2.Items.Rifle.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Ring.Equals(GuildWars2.Items.Trinket? other) -> bool
override sealed GuildWars2.Items.Rune.Equals(GuildWars2.Items.UpgradeComponent? other) -> bool
override sealed GuildWars2.Items.SalvageTool.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Scepter.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Service.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.SharedInventorySlot.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Shield.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Shortbow.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Shoulders.Equals(GuildWars2.Items.Armor? other) -> bool
override sealed GuildWars2.Items.Sigil.Equals(GuildWars2.Items.UpgradeComponent? other) -> bool
override sealed GuildWars2.Items.SmallBundle.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Spear.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Staff.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.StorageExpander.Equals(GuildWars2.Items.Unlocker? other) -> bool
override sealed GuildWars2.Items.Sword.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.TeleportToFriend.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Torch.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Toy.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.ToyTwoHanded.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Transmutation.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Trident.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Trinket.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.Trophy.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.UnlimitedConsumable.Equals(GuildWars2.Items.Gizmo? other) -> bool
override sealed GuildWars2.Items.Unlocker.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.UpgradeComponent.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Items.UpgradeComponentFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Items.UpgradeExtractor.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Utility.Equals(GuildWars2.Items.Consumable? other) -> bool
override sealed GuildWars2.Items.Warhorn.Equals(GuildWars2.Items.Weapon? other) -> bool
override sealed GuildWars2.Items.Weapon.Equals(GuildWars2.Items.Item? other) -> bool
override sealed GuildWars2.Pvp.Seasons.DivisionFlags.Equals(GuildWars2.Flags? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedCamp.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedCastle.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedKeep.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedMercenary.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedRuins.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedSpawn.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Matches.OwnedTower.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Camp.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Castle.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Keep.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Mercenary.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Resource.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Ruins.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Spawn.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
override sealed GuildWars2.Wvw.Objectives.Tower.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
readonly GuildWars2.Mumble.Context.BuildId -> uint
readonly GuildWars2.Mumble.Context.CompassHeight -> ushort
readonly GuildWars2.Mumble.Context.CompassRotation -> float
readonly GuildWars2.Mumble.Context.CompassWidth -> ushort
readonly GuildWars2.Mumble.Context.Instance -> uint
readonly GuildWars2.Mumble.Context.MapCenterX -> float
readonly GuildWars2.Mumble.Context.MapCenterY -> float
readonly GuildWars2.Mumble.Context.MapId -> uint
readonly GuildWars2.Mumble.Context.MapScale -> float
readonly GuildWars2.Mumble.Context.MapType -> GuildWars2.Mumble.MapType
readonly GuildWars2.Mumble.Context.PlayerX -> float
readonly GuildWars2.Mumble.Context.PlayerY -> float
readonly GuildWars2.Mumble.Context.ProcessId -> uint
readonly GuildWars2.Mumble.Context.ShardId -> uint
readonly GuildWars2.Mumble.Context.UiState -> GuildWars2.Mumble.UiState
readonly GuildWars2.Mumble.GameTick.AvatarFront -> System.Numerics.Vector3
readonly GuildWars2.Mumble.GameTick.AvatarPosition -> System.Numerics.Vector3
readonly GuildWars2.Mumble.GameTick.AvatarTop -> System.Numerics.Vector3
readonly GuildWars2.Mumble.GameTick.CameraFront -> System.Numerics.Vector3
readonly GuildWars2.Mumble.GameTick.CameraPosition -> System.Numerics.Vector3
readonly GuildWars2.Mumble.GameTick.CameraTop -> System.Numerics.Vector3
readonly GuildWars2.Mumble.GameTick.Context -> GuildWars2.Mumble.Context
readonly GuildWars2.Mumble.GameTick.Description -> string!
readonly GuildWars2.Mumble.GameTick.Identity -> string!
readonly GuildWars2.Mumble.GameTick.Name -> string!
readonly GuildWars2.Mumble.GameTick.UiTick -> uint
readonly GuildWars2.Mumble.GameTick.UiVersion -> uint
static GuildWars2.Authorization.ApiKeyInfo.operator !=(GuildWars2.Authorization.ApiKeyInfo? left, GuildWars2.Authorization.ApiKeyInfo? right) -> bool
static GuildWars2.Authorization.ApiKeyInfo.operator ==(GuildWars2.Authorization.ApiKeyInfo? left, GuildWars2.Authorization.ApiKeyInfo? right) -> bool
static GuildWars2.Authorization.CreatedSubtoken.operator !=(GuildWars2.Authorization.CreatedSubtoken? left, GuildWars2.Authorization.CreatedSubtoken? right) -> bool
static GuildWars2.Authorization.CreatedSubtoken.operator ==(GuildWars2.Authorization.CreatedSubtoken? left, GuildWars2.Authorization.CreatedSubtoken? right) -> bool
static GuildWars2.Authorization.SubtokenInfo.operator !=(GuildWars2.Authorization.SubtokenInfo? left, GuildWars2.Authorization.SubtokenInfo? right) -> bool
static GuildWars2.Authorization.SubtokenInfo.operator ==(GuildWars2.Authorization.SubtokenInfo? left, GuildWars2.Authorization.SubtokenInfo? right) -> bool
static GuildWars2.Authorization.TokenInfo.operator !=(GuildWars2.Authorization.TokenInfo? left, GuildWars2.Authorization.TokenInfo? right) -> bool
static GuildWars2.Authorization.TokenInfo.operator ==(GuildWars2.Authorization.TokenInfo? left, GuildWars2.Authorization.TokenInfo? right) -> bool
static GuildWars2.BulkProgress.operator !=(GuildWars2.BulkProgress? left, GuildWars2.BulkProgress? right) -> bool
static GuildWars2.BulkProgress.operator ==(GuildWars2.BulkProgress? left, GuildWars2.BulkProgress? right) -> bool
static GuildWars2.BulkQuery.QueryAsync<TKey, TValue>(System.Collections.Generic.IEnumerable<TKey>! keys, GuildWars2.BulkRequest<TKey, TValue>! bulkRequest, int degreeOfParallelism = 20, int chunkSize = 200, System.IProgress<GuildWars2.BulkProgress!>? progress = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<TValue>!
static GuildWars2.Chat.AchievementLink.operator !=(GuildWars2.Chat.AchievementLink? left, GuildWars2.Chat.AchievementLink? right) -> bool
static GuildWars2.Chat.AchievementLink.operator ==(GuildWars2.Chat.AchievementLink? left, GuildWars2.Chat.AchievementLink? right) -> bool
static GuildWars2.Chat.AchievementLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.AchievementLink!
static GuildWars2.Chat.AchievementLink.Parse(string! chatLink) -> GuildWars2.Chat.AchievementLink!
static GuildWars2.Chat.BuildTemplateLink.operator !=(GuildWars2.Chat.BuildTemplateLink? left, GuildWars2.Chat.BuildTemplateLink? right) -> bool
static GuildWars2.Chat.BuildTemplateLink.operator ==(GuildWars2.Chat.BuildTemplateLink? left, GuildWars2.Chat.BuildTemplateLink? right) -> bool
static GuildWars2.Chat.BuildTemplateLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.BuildTemplateLink!
static GuildWars2.Chat.BuildTemplateLink.Parse(string! chatLink) -> GuildWars2.Chat.BuildTemplateLink!
static GuildWars2.Chat.CoinLink.operator !=(GuildWars2.Chat.CoinLink? left, GuildWars2.Chat.CoinLink? right) -> bool
static GuildWars2.Chat.CoinLink.operator ==(GuildWars2.Chat.CoinLink? left, GuildWars2.Chat.CoinLink? right) -> bool
static GuildWars2.Chat.CoinLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.CoinLink!
static GuildWars2.Chat.CoinLink.Parse(string! chatLink) -> GuildWars2.Chat.CoinLink!
static GuildWars2.Chat.ItemLink.operator !=(GuildWars2.Chat.ItemLink? left, GuildWars2.Chat.ItemLink? right) -> bool
static GuildWars2.Chat.ItemLink.operator ==(GuildWars2.Chat.ItemLink? left, GuildWars2.Chat.ItemLink? right) -> bool
static GuildWars2.Chat.ItemLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.ItemLink!
static GuildWars2.Chat.ItemLink.Parse(string! chatLink) -> GuildWars2.Chat.ItemLink!
static GuildWars2.Chat.Legends.operator !=(GuildWars2.Chat.Legends? left, GuildWars2.Chat.Legends? right) -> bool
static GuildWars2.Chat.Legends.operator ==(GuildWars2.Chat.Legends? left, GuildWars2.Chat.Legends? right) -> bool
static GuildWars2.Chat.Link.operator !=(GuildWars2.Chat.Link? left, GuildWars2.Chat.Link? right) -> bool
static GuildWars2.Chat.Link.operator ==(GuildWars2.Chat.Link? left, GuildWars2.Chat.Link? right) -> bool
static GuildWars2.Chat.ObjectiveLink.operator !=(GuildWars2.Chat.ObjectiveLink? left, GuildWars2.Chat.ObjectiveLink? right) -> bool
static GuildWars2.Chat.ObjectiveLink.operator ==(GuildWars2.Chat.ObjectiveLink? left, GuildWars2.Chat.ObjectiveLink? right) -> bool
static GuildWars2.Chat.ObjectiveLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.ObjectiveLink!
static GuildWars2.Chat.ObjectiveLink.Parse(string! chatLink) -> GuildWars2.Chat.ObjectiveLink!
static GuildWars2.Chat.OutfitLink.operator !=(GuildWars2.Chat.OutfitLink? left, GuildWars2.Chat.OutfitLink? right) -> bool
static GuildWars2.Chat.OutfitLink.operator ==(GuildWars2.Chat.OutfitLink? left, GuildWars2.Chat.OutfitLink? right) -> bool
static GuildWars2.Chat.OutfitLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.OutfitLink!
static GuildWars2.Chat.OutfitLink.Parse(string! chatLink) -> GuildWars2.Chat.OutfitLink!
static GuildWars2.Chat.PointOfInterestLink.operator !=(GuildWars2.Chat.PointOfInterestLink? left, GuildWars2.Chat.PointOfInterestLink? right) -> bool
static GuildWars2.Chat.PointOfInterestLink.operator ==(GuildWars2.Chat.PointOfInterestLink? left, GuildWars2.Chat.PointOfInterestLink? right) -> bool
static GuildWars2.Chat.PointOfInterestLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.PointOfInterestLink!
static GuildWars2.Chat.PointOfInterestLink.Parse(string! chatLink) -> GuildWars2.Chat.PointOfInterestLink!
static GuildWars2.Chat.RecipeLink.operator !=(GuildWars2.Chat.RecipeLink? left, GuildWars2.Chat.RecipeLink? right) -> bool
static GuildWars2.Chat.RecipeLink.operator ==(GuildWars2.Chat.RecipeLink? left, GuildWars2.Chat.RecipeLink? right) -> bool
static GuildWars2.Chat.RecipeLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.RecipeLink!
static GuildWars2.Chat.RecipeLink.Parse(string! chatLink) -> GuildWars2.Chat.RecipeLink!
static GuildWars2.Chat.SkillLink.operator !=(GuildWars2.Chat.SkillLink? left, GuildWars2.Chat.SkillLink? right) -> bool
static GuildWars2.Chat.SkillLink.operator ==(GuildWars2.Chat.SkillLink? left, GuildWars2.Chat.SkillLink? right) -> bool
static GuildWars2.Chat.SkillLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.SkillLink!
static GuildWars2.Chat.SkillLink.Parse(string! chatLink) -> GuildWars2.Chat.SkillLink!
static GuildWars2.Chat.SkillPalette.operator !=(GuildWars2.Chat.SkillPalette left, GuildWars2.Chat.SkillPalette right) -> bool
static GuildWars2.Chat.SkillPalette.operator ==(GuildWars2.Chat.SkillPalette left, GuildWars2.Chat.SkillPalette right) -> bool
static GuildWars2.Chat.SkinLink.operator !=(GuildWars2.Chat.SkinLink? left, GuildWars2.Chat.SkinLink? right) -> bool
static GuildWars2.Chat.SkinLink.operator ==(GuildWars2.Chat.SkinLink? left, GuildWars2.Chat.SkinLink? right) -> bool
static GuildWars2.Chat.SkinLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.SkinLink!
static GuildWars2.Chat.SkinLink.Parse(string! chatLink) -> GuildWars2.Chat.SkinLink!
static GuildWars2.Chat.Specialization.operator !=(GuildWars2.Chat.Specialization left, GuildWars2.Chat.Specialization right) -> bool
static GuildWars2.Chat.Specialization.operator ==(GuildWars2.Chat.Specialization left, GuildWars2.Chat.Specialization right) -> bool
static GuildWars2.Chat.TranslationLink.operator !=(GuildWars2.Chat.TranslationLink? left, GuildWars2.Chat.TranslationLink? right) -> bool
static GuildWars2.Chat.TranslationLink.operator ==(GuildWars2.Chat.TranslationLink? left, GuildWars2.Chat.TranslationLink? right) -> bool
static GuildWars2.Chat.TranslationLink.Parse(in System.ReadOnlySpan<char> chatLink) -> GuildWars2.Chat.TranslationLink!
static GuildWars2.Chat.TranslationLink.Parse(string! chatLink) -> GuildWars2.Chat.TranslationLink!
static GuildWars2.Coin.implicit operator GuildWars2.Coin(int quantity) -> GuildWars2.Coin
static GuildWars2.Coin.implicit operator int(in GuildWars2.Coin coin) -> int
static GuildWars2.Coin.operator !=(GuildWars2.Coin left, GuildWars2.Coin right) -> bool
static GuildWars2.Coin.operator %(in GuildWars2.Coin left, in GuildWars2.Coin right) -> GuildWars2.Coin
static GuildWars2.Coin.operator *(in GuildWars2.Coin left, in GuildWars2.Coin right) -> GuildWars2.Coin
static GuildWars2.Coin.operator +(in GuildWars2.Coin coin) -> GuildWars2.Coin
static GuildWars2.Coin.operator +(in GuildWars2.Coin left, in GuildWars2.Coin right) -> GuildWars2.Coin
static GuildWars2.Coin.operator ++(in GuildWars2.Coin coin) -> GuildWars2.Coin
static GuildWars2.Coin.operator -(in GuildWars2.Coin coin) -> GuildWars2.Coin
static GuildWars2.Coin.operator -(in GuildWars2.Coin left, in GuildWars2.Coin right) -> GuildWars2.Coin
static GuildWars2.Coin.operator --(in GuildWars2.Coin coin) -> GuildWars2.Coin
static GuildWars2.Coin.operator /(in GuildWars2.Coin left, in GuildWars2.Coin right) -> GuildWars2.Coin
static GuildWars2.Coin.operator <(in GuildWars2.Coin left, in GuildWars2.Coin right) -> bool
static GuildWars2.Coin.operator <=(in GuildWars2.Coin left, in GuildWars2.Coin right) -> bool
static GuildWars2.Coin.operator ==(GuildWars2.Coin left, GuildWars2.Coin right) -> bool
static GuildWars2.Coin.operator >(in GuildWars2.Coin left, in GuildWars2.Coin right) -> bool
static GuildWars2.Coin.operator >=(in GuildWars2.Coin left, in GuildWars2.Coin right) -> bool
static GuildWars2.Collections.ValueDictionary<TKey, TValue>.operator !=(GuildWars2.Collections.ValueDictionary<TKey, TValue>? left, GuildWars2.Collections.ValueDictionary<TKey, TValue>? right) -> bool
static GuildWars2.Collections.ValueDictionary<TKey, TValue>.operator ==(GuildWars2.Collections.ValueDictionary<TKey, TValue>? left, GuildWars2.Collections.ValueDictionary<TKey, TValue>? right) -> bool
static GuildWars2.Collections.ValueHashSet<T>.operator !=(GuildWars2.Collections.ValueHashSet<T>? left, GuildWars2.Collections.ValueHashSet<T>? right) -> bool
static GuildWars2.Collections.ValueHashSet<T>.operator ==(GuildWars2.Collections.ValueHashSet<T>? left, GuildWars2.Collections.ValueHashSet<T>? right) -> bool
static GuildWars2.Collections.ValueList<T>.operator !=(GuildWars2.Collections.ValueList<T>? left, GuildWars2.Collections.ValueList<T>? right) -> bool
static GuildWars2.Collections.ValueList<T>.operator ==(GuildWars2.Collections.ValueList<T>? left, GuildWars2.Collections.ValueList<T>? right) -> bool
static GuildWars2.Commerce.Delivery.DeliveredItem.operator !=(GuildWars2.Commerce.Delivery.DeliveredItem? left, GuildWars2.Commerce.Delivery.DeliveredItem? right) -> bool
static GuildWars2.Commerce.Delivery.DeliveredItem.operator ==(GuildWars2.Commerce.Delivery.DeliveredItem? left, GuildWars2.Commerce.Delivery.DeliveredItem? right) -> bool
static GuildWars2.Commerce.Delivery.DeliveryBox.operator !=(GuildWars2.Commerce.Delivery.DeliveryBox? left, GuildWars2.Commerce.Delivery.DeliveryBox? right) -> bool
static GuildWars2.Commerce.Delivery.DeliveryBox.operator ==(GuildWars2.Commerce.Delivery.DeliveryBox? left, GuildWars2.Commerce.Delivery.DeliveryBox? right) -> bool
static GuildWars2.Commerce.Exchange.GemsToGold.operator !=(GuildWars2.Commerce.Exchange.GemsToGold? left, GuildWars2.Commerce.Exchange.GemsToGold? right) -> bool
static GuildWars2.Commerce.Exchange.GemsToGold.operator ==(GuildWars2.Commerce.Exchange.GemsToGold? left, GuildWars2.Commerce.Exchange.GemsToGold? right) -> bool
static GuildWars2.Commerce.Exchange.GoldToGems.operator !=(GuildWars2.Commerce.Exchange.GoldToGems? left, GuildWars2.Commerce.Exchange.GoldToGems? right) -> bool
static GuildWars2.Commerce.Exchange.GoldToGems.operator ==(GuildWars2.Commerce.Exchange.GoldToGems? left, GuildWars2.Commerce.Exchange.GoldToGems? right) -> bool
static GuildWars2.Commerce.Listings.OrderBook.operator !=(GuildWars2.Commerce.Listings.OrderBook? left, GuildWars2.Commerce.Listings.OrderBook? right) -> bool
static GuildWars2.Commerce.Listings.OrderBook.operator ==(GuildWars2.Commerce.Listings.OrderBook? left, GuildWars2.Commerce.Listings.OrderBook? right) -> bool
static GuildWars2.Commerce.Listings.OrderBookLine.operator !=(GuildWars2.Commerce.Listings.OrderBookLine? left, GuildWars2.Commerce.Listings.OrderBookLine? right) -> bool
static GuildWars2.Commerce.Listings.OrderBookLine.operator ==(GuildWars2.Commerce.Listings.OrderBookLine? left, GuildWars2.Commerce.Listings.OrderBookLine? right) -> bool
static GuildWars2.Commerce.Prices.ItemPrice.operator !=(GuildWars2.Commerce.Prices.ItemPrice? left, GuildWars2.Commerce.Prices.ItemPrice? right) -> bool
static GuildWars2.Commerce.Prices.ItemPrice.operator ==(GuildWars2.Commerce.Prices.ItemPrice? left, GuildWars2.Commerce.Prices.ItemPrice? right) -> bool
static GuildWars2.Commerce.Transactions.Order.operator !=(GuildWars2.Commerce.Transactions.Order? left, GuildWars2.Commerce.Transactions.Order? right) -> bool
static GuildWars2.Commerce.Transactions.Order.operator ==(GuildWars2.Commerce.Transactions.Order? left, GuildWars2.Commerce.Transactions.Order? right) -> bool
static GuildWars2.Commerce.Transactions.Transaction.operator !=(GuildWars2.Commerce.Transactions.Transaction? left, GuildWars2.Commerce.Transactions.Transaction? right) -> bool
static GuildWars2.Commerce.Transactions.Transaction.operator ==(GuildWars2.Commerce.Transactions.Transaction? left, GuildWars2.Commerce.Transactions.Transaction? right) -> bool
static GuildWars2.Exploration.Adventures.Adventure.operator !=(GuildWars2.Exploration.Adventures.Adventure? left, GuildWars2.Exploration.Adventures.Adventure? right) -> bool
static GuildWars2.Exploration.Adventures.Adventure.operator ==(GuildWars2.Exploration.Adventures.Adventure? left, GuildWars2.Exploration.Adventures.Adventure? right) -> bool
static GuildWars2.Exploration.Continents.Continent.operator !=(GuildWars2.Exploration.Continents.Continent? left, GuildWars2.Exploration.Continents.Continent? right) -> bool
static GuildWars2.Exploration.Continents.Continent.operator ==(GuildWars2.Exploration.Continents.Continent? left, GuildWars2.Exploration.Continents.Continent? right) -> bool
static GuildWars2.Exploration.Floors.Floor.operator !=(GuildWars2.Exploration.Floors.Floor? left, GuildWars2.Exploration.Floors.Floor? right) -> bool
static GuildWars2.Exploration.Floors.Floor.operator ==(GuildWars2.Exploration.Floors.Floor? left, GuildWars2.Exploration.Floors.Floor? right) -> bool
static GuildWars2.Exploration.GodShrines.GodShrine.operator !=(GuildWars2.Exploration.GodShrines.GodShrine? left, GuildWars2.Exploration.GodShrines.GodShrine? right) -> bool
static GuildWars2.Exploration.GodShrines.GodShrine.operator ==(GuildWars2.Exploration.GodShrines.GodShrine? left, GuildWars2.Exploration.GodShrines.GodShrine? right) -> bool
static GuildWars2.Exploration.Hearts.Heart.operator !=(GuildWars2.Exploration.Hearts.Heart? left, GuildWars2.Exploration.Hearts.Heart? right) -> bool
static GuildWars2.Exploration.Hearts.Heart.operator ==(GuildWars2.Exploration.Hearts.Heart? left, GuildWars2.Exploration.Hearts.Heart? right) -> bool
static GuildWars2.Exploration.HeroChallenges.HeroChallenge.operator !=(GuildWars2.Exploration.HeroChallenges.HeroChallenge? left, GuildWars2.Exploration.HeroChallenges.HeroChallenge? right) -> bool
static GuildWars2.Exploration.HeroChallenges.HeroChallenge.operator ==(GuildWars2.Exploration.HeroChallenges.HeroChallenge? left, GuildWars2.Exploration.HeroChallenges.HeroChallenge? right) -> bool
static GuildWars2.Exploration.Maps.Map.operator !=(GuildWars2.Exploration.Maps.Map? left, GuildWars2.Exploration.Maps.Map? right) -> bool
static GuildWars2.Exploration.Maps.Map.operator ==(GuildWars2.Exploration.Maps.Map? left, GuildWars2.Exploration.Maps.Map? right) -> bool
static GuildWars2.Exploration.Maps.MapSummary.operator !=(GuildWars2.Exploration.Maps.MapSummary? left, GuildWars2.Exploration.Maps.MapSummary? right) -> bool
static GuildWars2.Exploration.Maps.MapSummary.operator ==(GuildWars2.Exploration.Maps.MapSummary? left, GuildWars2.Exploration.Maps.MapSummary? right) -> bool
static GuildWars2.Exploration.MasteryInsights.MasteryInsight.operator !=(GuildWars2.Exploration.MasteryInsights.MasteryInsight? left, GuildWars2.Exploration.MasteryInsights.MasteryInsight? right) -> bool
static GuildWars2.Exploration.MasteryInsights.MasteryInsight.operator ==(GuildWars2.Exploration.MasteryInsights.MasteryInsight? left, GuildWars2.Exploration.MasteryInsights.MasteryInsight? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.Landmark.operator !=(GuildWars2.Exploration.PointsOfInterest.Landmark? left, GuildWars2.Exploration.PointsOfInterest.Landmark? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.Landmark.operator ==(GuildWars2.Exploration.PointsOfInterest.Landmark? left, GuildWars2.Exploration.PointsOfInterest.Landmark? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.PointOfInterest.operator !=(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? left, GuildWars2.Exploration.PointsOfInterest.PointOfInterest? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.PointOfInterest.operator ==(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? left, GuildWars2.Exploration.PointsOfInterest.PointOfInterest? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.operator !=(GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest? left, GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest.operator ==(GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest? left, GuildWars2.Exploration.PointsOfInterest.RequiresUnlockPointOfInterest? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.Vista.operator !=(GuildWars2.Exploration.PointsOfInterest.Vista? left, GuildWars2.Exploration.PointsOfInterest.Vista? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.Vista.operator ==(GuildWars2.Exploration.PointsOfInterest.Vista? left, GuildWars2.Exploration.PointsOfInterest.Vista? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.Waypoint.operator !=(GuildWars2.Exploration.PointsOfInterest.Waypoint? left, GuildWars2.Exploration.PointsOfInterest.Waypoint? right) -> bool
static GuildWars2.Exploration.PointsOfInterest.Waypoint.operator ==(GuildWars2.Exploration.PointsOfInterest.Waypoint? left, GuildWars2.Exploration.PointsOfInterest.Waypoint? right) -> bool
static GuildWars2.Exploration.Regions.Region.operator !=(GuildWars2.Exploration.Regions.Region? left, GuildWars2.Exploration.Regions.Region? right) -> bool
static GuildWars2.Exploration.Regions.Region.operator ==(GuildWars2.Exploration.Regions.Region? left, GuildWars2.Exploration.Regions.Region? right) -> bool
static GuildWars2.Exploration.Sectors.Sector.operator !=(GuildWars2.Exploration.Sectors.Sector? left, GuildWars2.Exploration.Sectors.Sector? right) -> bool
static GuildWars2.Exploration.Sectors.Sector.operator ==(GuildWars2.Exploration.Sectors.Sector? left, GuildWars2.Exploration.Sectors.Sector? right) -> bool
static GuildWars2.Extensible<TEnum>.implicit operator GuildWars2.Extensible<TEnum>(string! name) -> GuildWars2.Extensible<TEnum>
static GuildWars2.Extensible<TEnum>.implicit operator GuildWars2.Extensible<TEnum>(TEnum name) -> GuildWars2.Extensible<TEnum>
static GuildWars2.Extensions.AsDictionary<TKey, TValue>(this System.Threading.Tasks.Task<(System.Collections.Generic.HashSet<TValue>! Value, GuildWars2.MessageContext! Context)>! instance, System.Func<TValue, TKey>! keySelector) -> System.Threading.Tasks.Task<(System.Collections.Generic.Dictionary<TKey, TValue>! Value, GuildWars2.MessageContext! Context)>!
static GuildWars2.Extensions.ValueOnly<T>(this System.Collections.Generic.IAsyncEnumerable<(T, GuildWars2.MessageContext!)>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<T>!
static GuildWars2.Extensions.ValueOnly<T>(this System.Threading.Tasks.Task<(T, GuildWars2.MessageContext!)>! task) -> System.Threading.Tasks.Task<T>!
static GuildWars2.Files.Asset.operator !=(GuildWars2.Files.Asset? left, GuildWars2.Files.Asset? right) -> bool
static GuildWars2.Files.Asset.operator ==(GuildWars2.Files.Asset? left, GuildWars2.Files.Asset? right) -> bool
static GuildWars2.Flags.operator !=(GuildWars2.Flags? left, GuildWars2.Flags? right) -> bool
static GuildWars2.Flags.operator ==(GuildWars2.Flags? left, GuildWars2.Flags? right) -> bool
static GuildWars2.GameLink.IsSupported() -> bool
static GuildWars2.GameLink.Open(in System.TimeSpan refreshInterval = default(System.TimeSpan), string! name = "MumbleLink") -> GuildWars2.GameLink!
static GuildWars2.Guilds.Bank.GuildBankSlot.operator !=(GuildWars2.Guilds.Bank.GuildBankSlot? left, GuildWars2.Guilds.Bank.GuildBankSlot? right) -> bool
static GuildWars2.Guilds.Bank.GuildBankSlot.operator ==(GuildWars2.Guilds.Bank.GuildBankSlot? left, GuildWars2.Guilds.Bank.GuildBankSlot? right) -> bool
static GuildWars2.Guilds.Bank.GuildBankTab.operator !=(GuildWars2.Guilds.Bank.GuildBankTab? left, GuildWars2.Guilds.Bank.GuildBankTab? right) -> bool
static GuildWars2.Guilds.Bank.GuildBankTab.operator ==(GuildWars2.Guilds.Bank.GuildBankTab? left, GuildWars2.Guilds.Bank.GuildBankTab? right) -> bool
static GuildWars2.Guilds.Emblems.EmblemBackground.operator !=(GuildWars2.Guilds.Emblems.EmblemBackground? left, GuildWars2.Guilds.Emblems.EmblemBackground? right) -> bool
static GuildWars2.Guilds.Emblems.EmblemBackground.operator ==(GuildWars2.Guilds.Emblems.EmblemBackground? left, GuildWars2.Guilds.Emblems.EmblemBackground? right) -> bool
static GuildWars2.Guilds.Emblems.EmblemForeground.operator !=(GuildWars2.Guilds.Emblems.EmblemForeground? left, GuildWars2.Guilds.Emblems.EmblemForeground? right) -> bool
static GuildWars2.Guilds.Emblems.EmblemForeground.operator ==(GuildWars2.Guilds.Emblems.EmblemForeground? left, GuildWars2.Guilds.Emblems.EmblemForeground? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblem.operator !=(GuildWars2.Guilds.Emblems.GuildEmblem? left, GuildWars2.Guilds.Emblems.GuildEmblem? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblem.operator ==(GuildWars2.Guilds.Emblems.GuildEmblem? left, GuildWars2.Guilds.Emblems.GuildEmblem? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblemBackground.operator !=(GuildWars2.Guilds.Emblems.GuildEmblemBackground? left, GuildWars2.Guilds.Emblems.GuildEmblemBackground? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblemBackground.operator ==(GuildWars2.Guilds.Emblems.GuildEmblemBackground? left, GuildWars2.Guilds.Emblems.GuildEmblemBackground? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblemFlags.operator !=(GuildWars2.Guilds.Emblems.GuildEmblemFlags? left, GuildWars2.Guilds.Emblems.GuildEmblemFlags? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblemFlags.operator ==(GuildWars2.Guilds.Emblems.GuildEmblemFlags? left, GuildWars2.Guilds.Emblems.GuildEmblemFlags? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblemForeground.operator !=(GuildWars2.Guilds.Emblems.GuildEmblemForeground? left, GuildWars2.Guilds.Emblems.GuildEmblemForeground? right) -> bool
static GuildWars2.Guilds.Emblems.GuildEmblemForeground.operator ==(GuildWars2.Guilds.Emblems.GuildEmblemForeground? left, GuildWars2.Guilds.Emblems.GuildEmblemForeground? right) -> bool
static GuildWars2.Guilds.Guild.operator !=(GuildWars2.Guilds.Guild? left, GuildWars2.Guilds.Guild? right) -> bool
static GuildWars2.Guilds.Guild.operator ==(GuildWars2.Guilds.Guild? left, GuildWars2.Guilds.Guild? right) -> bool
static GuildWars2.Guilds.Logs.GuildBankActivity.operator !=(GuildWars2.Guilds.Logs.GuildBankActivity? left, GuildWars2.Guilds.Logs.GuildBankActivity? right) -> bool
static GuildWars2.Guilds.Logs.GuildBankActivity.operator ==(GuildWars2.Guilds.Logs.GuildBankActivity? left, GuildWars2.Guilds.Logs.GuildBankActivity? right) -> bool
static GuildWars2.Guilds.Logs.GuildLogEntry.operator !=(GuildWars2.Guilds.Logs.GuildLogEntry? left, GuildWars2.Guilds.Logs.GuildLogEntry? right) -> bool
static GuildWars2.Guilds.Logs.GuildLogEntry.operator ==(GuildWars2.Guilds.Logs.GuildLogEntry? left, GuildWars2.Guilds.Logs.GuildLogEntry? right) -> bool
static GuildWars2.Guilds.Logs.GuildMission.operator !=(GuildWars2.Guilds.Logs.GuildMission? left, GuildWars2.Guilds.Logs.GuildMission? right) -> bool
static GuildWars2.Guilds.Logs.GuildMission.operator ==(GuildWars2.Guilds.Logs.GuildMission? left, GuildWars2.Guilds.Logs.GuildMission? right) -> bool
static GuildWars2.Guilds.Logs.GuildUpgradeActivity.operator !=(GuildWars2.Guilds.Logs.GuildUpgradeActivity? left, GuildWars2.Guilds.Logs.GuildUpgradeActivity? right) -> bool
static GuildWars2.Guilds.Logs.GuildUpgradeActivity.operator ==(GuildWars2.Guilds.Logs.GuildUpgradeActivity? left, GuildWars2.Guilds.Logs.GuildUpgradeActivity? right) -> bool
static GuildWars2.Guilds.Logs.InfluenceActivity.operator !=(GuildWars2.Guilds.Logs.InfluenceActivity? left, GuildWars2.Guilds.Logs.InfluenceActivity? right) -> bool
static GuildWars2.Guilds.Logs.InfluenceActivity.operator ==(GuildWars2.Guilds.Logs.InfluenceActivity? left, GuildWars2.Guilds.Logs.InfluenceActivity? right) -> bool
static GuildWars2.Guilds.Logs.InviteDeclined.operator !=(GuildWars2.Guilds.Logs.InviteDeclined? left, GuildWars2.Guilds.Logs.InviteDeclined? right) -> bool
static GuildWars2.Guilds.Logs.InviteDeclined.operator ==(GuildWars2.Guilds.Logs.InviteDeclined? left, GuildWars2.Guilds.Logs.InviteDeclined? right) -> bool
static GuildWars2.Guilds.Logs.MemberInvited.operator !=(GuildWars2.Guilds.Logs.MemberInvited? left, GuildWars2.Guilds.Logs.MemberInvited? right) -> bool
static GuildWars2.Guilds.Logs.MemberInvited.operator ==(GuildWars2.Guilds.Logs.MemberInvited? left, GuildWars2.Guilds.Logs.MemberInvited? right) -> bool
static GuildWars2.Guilds.Logs.MemberJoined.operator !=(GuildWars2.Guilds.Logs.MemberJoined? left, GuildWars2.Guilds.Logs.MemberJoined? right) -> bool
static GuildWars2.Guilds.Logs.MemberJoined.operator ==(GuildWars2.Guilds.Logs.MemberJoined? left, GuildWars2.Guilds.Logs.MemberJoined? right) -> bool
static GuildWars2.Guilds.Logs.MemberKicked.operator !=(GuildWars2.Guilds.Logs.MemberKicked? left, GuildWars2.Guilds.Logs.MemberKicked? right) -> bool
static GuildWars2.Guilds.Logs.MemberKicked.operator ==(GuildWars2.Guilds.Logs.MemberKicked? left, GuildWars2.Guilds.Logs.MemberKicked? right) -> bool
static GuildWars2.Guilds.Logs.NewMessageOfTheDay.operator !=(GuildWars2.Guilds.Logs.NewMessageOfTheDay? left, GuildWars2.Guilds.Logs.NewMessageOfTheDay? right) -> bool
static GuildWars2.Guilds.Logs.NewMessageOfTheDay.operator ==(GuildWars2.Guilds.Logs.NewMessageOfTheDay? left, GuildWars2.Guilds.Logs.NewMessageOfTheDay? right) -> bool
static GuildWars2.Guilds.Logs.RankChange.operator !=(GuildWars2.Guilds.Logs.RankChange? left, GuildWars2.Guilds.Logs.RankChange? right) -> bool
static GuildWars2.Guilds.Logs.RankChange.operator ==(GuildWars2.Guilds.Logs.RankChange? left, GuildWars2.Guilds.Logs.RankChange? right) -> bool
static GuildWars2.Guilds.Logs.TreasuryDeposit.operator !=(GuildWars2.Guilds.Logs.TreasuryDeposit? left, GuildWars2.Guilds.Logs.TreasuryDeposit? right) -> bool
static GuildWars2.Guilds.Logs.TreasuryDeposit.operator ==(GuildWars2.Guilds.Logs.TreasuryDeposit? left, GuildWars2.Guilds.Logs.TreasuryDeposit? right) -> bool
static GuildWars2.Guilds.Members.GuildMember.operator !=(GuildWars2.Guilds.Members.GuildMember? left, GuildWars2.Guilds.Members.GuildMember? right) -> bool
static GuildWars2.Guilds.Members.GuildMember.operator ==(GuildWars2.Guilds.Members.GuildMember? left, GuildWars2.Guilds.Members.GuildMember? right) -> bool
static GuildWars2.Guilds.Permissions.GuildPermissionSummary.operator !=(GuildWars2.Guilds.Permissions.GuildPermissionSummary? left, GuildWars2.Guilds.Permissions.GuildPermissionSummary? right) -> bool
static GuildWars2.Guilds.Permissions.GuildPermissionSummary.operator ==(GuildWars2.Guilds.Permissions.GuildPermissionSummary? left, GuildWars2.Guilds.Permissions.GuildPermissionSummary? right) -> bool
static GuildWars2.Guilds.Ranks.GuildRank.operator !=(GuildWars2.Guilds.Ranks.GuildRank? left, GuildWars2.Guilds.Ranks.GuildRank? right) -> bool
static GuildWars2.Guilds.Ranks.GuildRank.operator ==(GuildWars2.Guilds.Ranks.GuildRank? left, GuildWars2.Guilds.Ranks.GuildRank? right) -> bool
static GuildWars2.Guilds.Storage.GuildStorageSlot.operator !=(GuildWars2.Guilds.Storage.GuildStorageSlot? left, GuildWars2.Guilds.Storage.GuildStorageSlot? right) -> bool
static GuildWars2.Guilds.Storage.GuildStorageSlot.operator ==(GuildWars2.Guilds.Storage.GuildStorageSlot? left, GuildWars2.Guilds.Storage.GuildStorageSlot? right) -> bool
static GuildWars2.Guilds.Teams.Game.operator !=(GuildWars2.Guilds.Teams.Game? left, GuildWars2.Guilds.Teams.Game? right) -> bool
static GuildWars2.Guilds.Teams.Game.operator ==(GuildWars2.Guilds.Teams.Game? left, GuildWars2.Guilds.Teams.Game? right) -> bool
static GuildWars2.Guilds.Teams.GuildTeam.operator !=(GuildWars2.Guilds.Teams.GuildTeam? left, GuildWars2.Guilds.Teams.GuildTeam? right) -> bool
static GuildWars2.Guilds.Teams.GuildTeam.operator ==(GuildWars2.Guilds.Teams.GuildTeam? left, GuildWars2.Guilds.Teams.GuildTeam? right) -> bool
static GuildWars2.Guilds.Teams.GuildTeamMember.operator !=(GuildWars2.Guilds.Teams.GuildTeamMember? left, GuildWars2.Guilds.Teams.GuildTeamMember? right) -> bool
static GuildWars2.Guilds.Teams.GuildTeamMember.operator ==(GuildWars2.Guilds.Teams.GuildTeamMember? left, GuildWars2.Guilds.Teams.GuildTeamMember? right) -> bool
static GuildWars2.Guilds.Teams.Ladders.operator !=(GuildWars2.Guilds.Teams.Ladders? left, GuildWars2.Guilds.Teams.Ladders? right) -> bool
static GuildWars2.Guilds.Teams.Ladders.operator ==(GuildWars2.Guilds.Teams.Ladders? left, GuildWars2.Guilds.Teams.Ladders? right) -> bool
static GuildWars2.Guilds.Teams.Results.operator !=(GuildWars2.Guilds.Teams.Results? left, GuildWars2.Guilds.Teams.Results? right) -> bool
static GuildWars2.Guilds.Teams.Results.operator ==(GuildWars2.Guilds.Teams.Results? left, GuildWars2.Guilds.Teams.Results? right) -> bool
static GuildWars2.Guilds.Teams.Score.operator !=(GuildWars2.Guilds.Teams.Score? left, GuildWars2.Guilds.Teams.Score? right) -> bool
static GuildWars2.Guilds.Teams.Score.operator ==(GuildWars2.Guilds.Teams.Score? left, GuildWars2.Guilds.Teams.Score? right) -> bool
static GuildWars2.Guilds.Teams.Season.operator !=(GuildWars2.Guilds.Teams.Season? left, GuildWars2.Guilds.Teams.Season? right) -> bool
static GuildWars2.Guilds.Teams.Season.operator ==(GuildWars2.Guilds.Teams.Season? left, GuildWars2.Guilds.Teams.Season? right) -> bool
static GuildWars2.Guilds.Treasury.CountNeededForUpgrade.operator !=(GuildWars2.Guilds.Treasury.CountNeededForUpgrade? left, GuildWars2.Guilds.Treasury.CountNeededForUpgrade? right) -> bool
static GuildWars2.Guilds.Treasury.CountNeededForUpgrade.operator ==(GuildWars2.Guilds.Treasury.CountNeededForUpgrade? left, GuildWars2.Guilds.Treasury.CountNeededForUpgrade? right) -> bool
static GuildWars2.Guilds.Treasury.GuildTreasurySlot.operator !=(GuildWars2.Guilds.Treasury.GuildTreasurySlot? left, GuildWars2.Guilds.Treasury.GuildTreasurySlot? right) -> bool
static GuildWars2.Guilds.Treasury.GuildTreasurySlot.operator ==(GuildWars2.Guilds.Treasury.GuildTreasurySlot? left, GuildWars2.Guilds.Treasury.GuildTreasurySlot? right) -> bool
static GuildWars2.Guilds.Upgrades.AccumulatingCurrency.operator !=(GuildWars2.Guilds.Upgrades.AccumulatingCurrency? left, GuildWars2.Guilds.Upgrades.AccumulatingCurrency? right) -> bool
static GuildWars2.Guilds.Upgrades.AccumulatingCurrency.operator ==(GuildWars2.Guilds.Upgrades.AccumulatingCurrency? left, GuildWars2.Guilds.Upgrades.AccumulatingCurrency? right) -> bool
static GuildWars2.Guilds.Upgrades.BankBag.operator !=(GuildWars2.Guilds.Upgrades.BankBag? left, GuildWars2.Guilds.Upgrades.BankBag? right) -> bool
static GuildWars2.Guilds.Upgrades.BankBag.operator ==(GuildWars2.Guilds.Upgrades.BankBag? left, GuildWars2.Guilds.Upgrades.BankBag? right) -> bool
static GuildWars2.Guilds.Upgrades.Boost.operator !=(GuildWars2.Guilds.Upgrades.Boost? left, GuildWars2.Guilds.Upgrades.Boost? right) -> bool
static GuildWars2.Guilds.Upgrades.Boost.operator ==(GuildWars2.Guilds.Upgrades.Boost? left, GuildWars2.Guilds.Upgrades.Boost? right) -> bool
static GuildWars2.Guilds.Upgrades.Claimable.operator !=(GuildWars2.Guilds.Upgrades.Claimable? left, GuildWars2.Guilds.Upgrades.Claimable? right) -> bool
static GuildWars2.Guilds.Upgrades.Claimable.operator ==(GuildWars2.Guilds.Upgrades.Claimable? left, GuildWars2.Guilds.Upgrades.Claimable? right) -> bool
static GuildWars2.Guilds.Upgrades.Consumable.operator !=(GuildWars2.Guilds.Upgrades.Consumable? left, GuildWars2.Guilds.Upgrades.Consumable? right) -> bool
static GuildWars2.Guilds.Upgrades.Consumable.operator ==(GuildWars2.Guilds.Upgrades.Consumable? left, GuildWars2.Guilds.Upgrades.Consumable? right) -> bool
static GuildWars2.Guilds.Upgrades.Decoration.operator !=(GuildWars2.Guilds.Upgrades.Decoration? left, GuildWars2.Guilds.Upgrades.Decoration? right) -> bool
static GuildWars2.Guilds.Upgrades.Decoration.operator ==(GuildWars2.Guilds.Upgrades.Decoration? left, GuildWars2.Guilds.Upgrades.Decoration? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildHall.operator !=(GuildWars2.Guilds.Upgrades.GuildHall? left, GuildWars2.Guilds.Upgrades.GuildHall? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildHall.operator ==(GuildWars2.Guilds.Upgrades.GuildHall? left, GuildWars2.Guilds.Upgrades.GuildHall? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildHallExpedition.operator !=(GuildWars2.Guilds.Upgrades.GuildHallExpedition? left, GuildWars2.Guilds.Upgrades.GuildHallExpedition? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildHallExpedition.operator ==(GuildWars2.Guilds.Upgrades.GuildHallExpedition? left, GuildWars2.Guilds.Upgrades.GuildHallExpedition? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgrade.operator !=(GuildWars2.Guilds.Upgrades.GuildUpgrade? left, GuildWars2.Guilds.Upgrades.GuildUpgrade? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgrade.operator ==(GuildWars2.Guilds.Upgrades.GuildUpgrade? left, GuildWars2.Guilds.Upgrades.GuildUpgrade? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.operator !=(GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost.operator ==(GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCoinsCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.operator !=(GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost.operator ==(GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCollectibleCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCost.operator !=(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCost.operator ==(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.operator !=(GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost.operator ==(GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeCurrencyCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.operator !=(GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost? right) -> bool
static GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost.operator ==(GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost? left, GuildWars2.Guilds.Upgrades.GuildUpgradeItemCost? right) -> bool
static GuildWars2.Guilds.Upgrades.Hub.operator !=(GuildWars2.Guilds.Upgrades.Hub? left, GuildWars2.Guilds.Upgrades.Hub? right) -> bool
static GuildWars2.Guilds.Upgrades.Hub.operator ==(GuildWars2.Guilds.Upgrades.Hub? left, GuildWars2.Guilds.Upgrades.Hub? right) -> bool
static GuildWars2.Guilds.Upgrades.Queue.operator !=(GuildWars2.Guilds.Upgrades.Queue? left, GuildWars2.Guilds.Upgrades.Queue? right) -> bool
static GuildWars2.Guilds.Upgrades.Queue.operator ==(GuildWars2.Guilds.Upgrades.Queue? left, GuildWars2.Guilds.Upgrades.Queue? right) -> bool
static GuildWars2.Guilds.Upgrades.Unlock.operator !=(GuildWars2.Guilds.Upgrades.Unlock? left, GuildWars2.Guilds.Upgrades.Unlock? right) -> bool
static GuildWars2.Guilds.Upgrades.Unlock.operator ==(GuildWars2.Guilds.Upgrades.Unlock? left, GuildWars2.Guilds.Upgrades.Unlock? right) -> bool
static GuildWars2.Hero.Accounts.AccountLuck.operator !=(GuildWars2.Hero.Accounts.AccountLuck? left, GuildWars2.Hero.Accounts.AccountLuck? right) -> bool
static GuildWars2.Hero.Accounts.AccountLuck.operator ==(GuildWars2.Hero.Accounts.AccountLuck? left, GuildWars2.Hero.Accounts.AccountLuck? right) -> bool
static GuildWars2.Hero.Accounts.AccountSummary.operator !=(GuildWars2.Hero.Accounts.AccountSummary? left, GuildWars2.Hero.Accounts.AccountSummary? right) -> bool
static GuildWars2.Hero.Accounts.AccountSummary.operator ==(GuildWars2.Hero.Accounts.AccountSummary? left, GuildWars2.Hero.Accounts.AccountSummary? right) -> bool
static GuildWars2.Hero.Accounts.AccountWvwSummary.operator !=(GuildWars2.Hero.Accounts.AccountWvwSummary? left, GuildWars2.Hero.Accounts.AccountWvwSummary? right) -> bool
static GuildWars2.Hero.Accounts.AccountWvwSummary.operator ==(GuildWars2.Hero.Accounts.AccountWvwSummary? left, GuildWars2.Hero.Accounts.AccountWvwSummary? right) -> bool
static GuildWars2.Hero.Accounts.Character.operator !=(GuildWars2.Hero.Accounts.Character? left, GuildWars2.Hero.Accounts.Character? right) -> bool
static GuildWars2.Hero.Accounts.Character.operator ==(GuildWars2.Hero.Accounts.Character? left, GuildWars2.Hero.Accounts.Character? right) -> bool
static GuildWars2.Hero.Accounts.CharacterFlags.operator !=(GuildWars2.Hero.Accounts.CharacterFlags? left, GuildWars2.Hero.Accounts.CharacterFlags? right) -> bool
static GuildWars2.Hero.Accounts.CharacterFlags.operator ==(GuildWars2.Hero.Accounts.CharacterFlags? left, GuildWars2.Hero.Accounts.CharacterFlags? right) -> bool
static GuildWars2.Hero.Accounts.CharacterSummary.operator !=(GuildWars2.Hero.Accounts.CharacterSummary? left, GuildWars2.Hero.Accounts.CharacterSummary? right) -> bool
static GuildWars2.Hero.Accounts.CharacterSummary.operator ==(GuildWars2.Hero.Accounts.CharacterSummary? left, GuildWars2.Hero.Accounts.CharacterSummary? right) -> bool
static GuildWars2.Hero.Accounts.Progression.operator !=(GuildWars2.Hero.Accounts.Progression? left, GuildWars2.Hero.Accounts.Progression? right) -> bool
static GuildWars2.Hero.Accounts.Progression.operator ==(GuildWars2.Hero.Accounts.Progression? left, GuildWars2.Hero.Accounts.Progression? right) -> bool
static GuildWars2.Hero.Accounts.WvwAbility.operator !=(GuildWars2.Hero.Accounts.WvwAbility? left, GuildWars2.Hero.Accounts.WvwAbility? right) -> bool
static GuildWars2.Hero.Accounts.WvwAbility.operator ==(GuildWars2.Hero.Accounts.WvwAbility? left, GuildWars2.Hero.Accounts.WvwAbility? right) -> bool
static GuildWars2.Hero.Achievements.AccountAchievement.operator !=(GuildWars2.Hero.Achievements.AccountAchievement? left, GuildWars2.Hero.Achievements.AccountAchievement? right) -> bool
static GuildWars2.Hero.Achievements.AccountAchievement.operator ==(GuildWars2.Hero.Achievements.AccountAchievement? left, GuildWars2.Hero.Achievements.AccountAchievement? right) -> bool
static GuildWars2.Hero.Achievements.Achievement.operator !=(GuildWars2.Hero.Achievements.Achievement? left, GuildWars2.Hero.Achievements.Achievement? right) -> bool
static GuildWars2.Hero.Achievements.Achievement.operator ==(GuildWars2.Hero.Achievements.Achievement? left, GuildWars2.Hero.Achievements.Achievement? right) -> bool
static GuildWars2.Hero.Achievements.AchievementBit.operator !=(GuildWars2.Hero.Achievements.AchievementBit? left, GuildWars2.Hero.Achievements.AchievementBit? right) -> bool
static GuildWars2.Hero.Achievements.AchievementBit.operator ==(GuildWars2.Hero.Achievements.AchievementBit? left, GuildWars2.Hero.Achievements.AchievementBit? right) -> bool
static GuildWars2.Hero.Achievements.AchievementFlags.operator !=(GuildWars2.Hero.Achievements.AchievementFlags? left, GuildWars2.Hero.Achievements.AchievementFlags? right) -> bool
static GuildWars2.Hero.Achievements.AchievementFlags.operator ==(GuildWars2.Hero.Achievements.AchievementFlags? left, GuildWars2.Hero.Achievements.AchievementFlags? right) -> bool
static GuildWars2.Hero.Achievements.AchievementReward.operator !=(GuildWars2.Hero.Achievements.AchievementReward? left, GuildWars2.Hero.Achievements.AchievementReward? right) -> bool
static GuildWars2.Hero.Achievements.AchievementReward.operator ==(GuildWars2.Hero.Achievements.AchievementReward? left, GuildWars2.Hero.Achievements.AchievementReward? right) -> bool
static GuildWars2.Hero.Achievements.AchievementTier.operator !=(GuildWars2.Hero.Achievements.AchievementTier? left, GuildWars2.Hero.Achievements.AchievementTier? right) -> bool
static GuildWars2.Hero.Achievements.AchievementTier.operator ==(GuildWars2.Hero.Achievements.AchievementTier? left, GuildWars2.Hero.Achievements.AchievementTier? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementItemBit.operator !=(GuildWars2.Hero.Achievements.Bits.AchievementItemBit? left, GuildWars2.Hero.Achievements.Bits.AchievementItemBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementItemBit.operator ==(GuildWars2.Hero.Achievements.Bits.AchievementItemBit? left, GuildWars2.Hero.Achievements.Bits.AchievementItemBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.operator !=(GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit? left, GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit.operator ==(GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit? left, GuildWars2.Hero.Achievements.Bits.AchievementMiniatureBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.operator !=(GuildWars2.Hero.Achievements.Bits.AchievementSkinBit? left, GuildWars2.Hero.Achievements.Bits.AchievementSkinBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementSkinBit.operator ==(GuildWars2.Hero.Achievements.Bits.AchievementSkinBit? left, GuildWars2.Hero.Achievements.Bits.AchievementSkinBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementTextBit.operator !=(GuildWars2.Hero.Achievements.Bits.AchievementTextBit? left, GuildWars2.Hero.Achievements.Bits.AchievementTextBit? right) -> bool
static GuildWars2.Hero.Achievements.Bits.AchievementTextBit.operator ==(GuildWars2.Hero.Achievements.Bits.AchievementTextBit? left, GuildWars2.Hero.Achievements.Bits.AchievementTextBit? right) -> bool
static GuildWars2.Hero.Achievements.Categories.AchievementCategory.operator !=(GuildWars2.Hero.Achievements.Categories.AchievementCategory? left, GuildWars2.Hero.Achievements.Categories.AchievementCategory? right) -> bool
static GuildWars2.Hero.Achievements.Categories.AchievementCategory.operator ==(GuildWars2.Hero.Achievements.Categories.AchievementCategory? left, GuildWars2.Hero.Achievements.Categories.AchievementCategory? right) -> bool
static GuildWars2.Hero.Achievements.Categories.AchievementFlags.None.get -> GuildWars2.Hero.Achievements.Categories.AchievementFlags!
static GuildWars2.Hero.Achievements.Categories.AchievementFlags.operator !=(GuildWars2.Hero.Achievements.Categories.AchievementFlags? left, GuildWars2.Hero.Achievements.Categories.AchievementFlags? right) -> bool
static GuildWars2.Hero.Achievements.Categories.AchievementFlags.operator ==(GuildWars2.Hero.Achievements.Categories.AchievementFlags? left, GuildWars2.Hero.Achievements.Categories.AchievementFlags? right) -> bool
static GuildWars2.Hero.Achievements.Categories.AchievementRef.operator !=(GuildWars2.Hero.Achievements.Categories.AchievementRef? left, GuildWars2.Hero.Achievements.Categories.AchievementRef? right) -> bool
static GuildWars2.Hero.Achievements.Categories.AchievementRef.operator ==(GuildWars2.Hero.Achievements.Categories.AchievementRef? left, GuildWars2.Hero.Achievements.Categories.AchievementRef? right) -> bool
static GuildWars2.Hero.Achievements.CollectionAchievement.operator !=(GuildWars2.Hero.Achievements.CollectionAchievement? left, GuildWars2.Hero.Achievements.CollectionAchievement? right) -> bool
static GuildWars2.Hero.Achievements.CollectionAchievement.operator ==(GuildWars2.Hero.Achievements.CollectionAchievement? left, GuildWars2.Hero.Achievements.CollectionAchievement? right) -> bool
static GuildWars2.Hero.Achievements.Groups.AchievementGroup.operator !=(GuildWars2.Hero.Achievements.Groups.AchievementGroup? left, GuildWars2.Hero.Achievements.Groups.AchievementGroup? right) -> bool
static GuildWars2.Hero.Achievements.Groups.AchievementGroup.operator ==(GuildWars2.Hero.Achievements.Groups.AchievementGroup? left, GuildWars2.Hero.Achievements.Groups.AchievementGroup? right) -> bool
static GuildWars2.Hero.Achievements.ItemReward.operator !=(GuildWars2.Hero.Achievements.ItemReward? left, GuildWars2.Hero.Achievements.ItemReward? right) -> bool
static GuildWars2.Hero.Achievements.ItemReward.operator ==(GuildWars2.Hero.Achievements.ItemReward? left, GuildWars2.Hero.Achievements.ItemReward? right) -> bool
static GuildWars2.Hero.Achievements.LevelRequirement.operator !=(GuildWars2.Hero.Achievements.LevelRequirement? left, GuildWars2.Hero.Achievements.LevelRequirement? right) -> bool
static GuildWars2.Hero.Achievements.LevelRequirement.operator ==(GuildWars2.Hero.Achievements.LevelRequirement? left, GuildWars2.Hero.Achievements.LevelRequirement? right) -> bool
static GuildWars2.Hero.Achievements.Rewards.CoinsReward.operator !=(GuildWars2.Hero.Achievements.Rewards.CoinsReward? left, GuildWars2.Hero.Achievements.Rewards.CoinsReward? right) -> bool
static GuildWars2.Hero.Achievements.Rewards.CoinsReward.operator ==(GuildWars2.Hero.Achievements.Rewards.CoinsReward? left, GuildWars2.Hero.Achievements.Rewards.CoinsReward? right) -> bool
static GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.operator !=(GuildWars2.Hero.Achievements.Rewards.MasteryPointReward? left, GuildWars2.Hero.Achievements.Rewards.MasteryPointReward? right) -> bool
static GuildWars2.Hero.Achievements.Rewards.MasteryPointReward.operator ==(GuildWars2.Hero.Achievements.Rewards.MasteryPointReward? left, GuildWars2.Hero.Achievements.Rewards.MasteryPointReward? right) -> bool
static GuildWars2.Hero.Achievements.Rewards.TitleReward.operator !=(GuildWars2.Hero.Achievements.Rewards.TitleReward? left, GuildWars2.Hero.Achievements.Rewards.TitleReward? right) -> bool
static GuildWars2.Hero.Achievements.Rewards.TitleReward.operator ==(GuildWars2.Hero.Achievements.Rewards.TitleReward? left, GuildWars2.Hero.Achievements.Rewards.TitleReward? right) -> bool
static GuildWars2.Hero.Achievements.Titles.Title.operator !=(GuildWars2.Hero.Achievements.Titles.Title? left, GuildWars2.Hero.Achievements.Titles.Title? right) -> bool
static GuildWars2.Hero.Achievements.Titles.Title.operator ==(GuildWars2.Hero.Achievements.Titles.Title? left, GuildWars2.Hero.Achievements.Titles.Title? right) -> bool
static GuildWars2.Hero.Banking.Bank.operator !=(GuildWars2.Hero.Banking.Bank? left, GuildWars2.Hero.Banking.Bank? right) -> bool
static GuildWars2.Hero.Banking.Bank.operator ==(GuildWars2.Hero.Banking.Bank? left, GuildWars2.Hero.Banking.Bank? right) -> bool
static GuildWars2.Hero.Banking.MaterialCategory.operator !=(GuildWars2.Hero.Banking.MaterialCategory? left, GuildWars2.Hero.Banking.MaterialCategory? right) -> bool
static GuildWars2.Hero.Banking.MaterialCategory.operator ==(GuildWars2.Hero.Banking.MaterialCategory? left, GuildWars2.Hero.Banking.MaterialCategory? right) -> bool
static GuildWars2.Hero.Banking.MaterialSlot.operator !=(GuildWars2.Hero.Banking.MaterialSlot? left, GuildWars2.Hero.Banking.MaterialSlot? right) -> bool
static GuildWars2.Hero.Banking.MaterialSlot.operator ==(GuildWars2.Hero.Banking.MaterialSlot? left, GuildWars2.Hero.Banking.MaterialSlot? right) -> bool
static GuildWars2.Hero.Banking.MaterialStorage.operator !=(GuildWars2.Hero.Banking.MaterialStorage? left, GuildWars2.Hero.Banking.MaterialStorage? right) -> bool
static GuildWars2.Hero.Banking.MaterialStorage.operator ==(GuildWars2.Hero.Banking.MaterialStorage? left, GuildWars2.Hero.Banking.MaterialStorage? right) -> bool
static GuildWars2.Hero.Builds.ActionSkill.operator !=(GuildWars2.Hero.Builds.ActionSkill? left, GuildWars2.Hero.Builds.ActionSkill? right) -> bool
static GuildWars2.Hero.Builds.ActionSkill.operator ==(GuildWars2.Hero.Builds.ActionSkill? left, GuildWars2.Hero.Builds.ActionSkill? right) -> bool
static GuildWars2.Hero.Builds.Build.operator !=(GuildWars2.Hero.Builds.Build? left, GuildWars2.Hero.Builds.Build? right) -> bool
static GuildWars2.Hero.Builds.Build.operator ==(GuildWars2.Hero.Builds.Build? left, GuildWars2.Hero.Builds.Build? right) -> bool
static GuildWars2.Hero.Builds.BuildTemplate.operator !=(GuildWars2.Hero.Builds.BuildTemplate? left, GuildWars2.Hero.Builds.BuildTemplate? right) -> bool
static GuildWars2.Hero.Builds.BuildTemplate.operator ==(GuildWars2.Hero.Builds.BuildTemplate? left, GuildWars2.Hero.Builds.BuildTemplate? right) -> bool
static GuildWars2.Hero.Builds.Fact.operator !=(GuildWars2.Hero.Builds.Fact? left, GuildWars2.Hero.Builds.Fact? right) -> bool
static GuildWars2.Hero.Builds.Fact.operator ==(GuildWars2.Hero.Builds.Fact? left, GuildWars2.Hero.Builds.Fact? right) -> bool
static GuildWars2.Hero.Builds.Facts.AttributeAdjustment.operator !=(GuildWars2.Hero.Builds.Facts.AttributeAdjustment? left, GuildWars2.Hero.Builds.Facts.AttributeAdjustment? right) -> bool
static GuildWars2.Hero.Builds.Facts.AttributeAdjustment.operator ==(GuildWars2.Hero.Builds.Facts.AttributeAdjustment? left, GuildWars2.Hero.Builds.Facts.AttributeAdjustment? right) -> bool
static GuildWars2.Hero.Builds.Facts.AttributeConversion.operator !=(GuildWars2.Hero.Builds.Facts.AttributeConversion? left, GuildWars2.Hero.Builds.Facts.AttributeConversion? right) -> bool
static GuildWars2.Hero.Builds.Facts.AttributeConversion.operator ==(GuildWars2.Hero.Builds.Facts.AttributeConversion? left, GuildWars2.Hero.Builds.Facts.AttributeConversion? right) -> bool
static GuildWars2.Hero.Builds.Facts.Buff.operator !=(GuildWars2.Hero.Builds.Facts.Buff? left, GuildWars2.Hero.Builds.Facts.Buff? right) -> bool
static GuildWars2.Hero.Builds.Facts.Buff.operator ==(GuildWars2.Hero.Builds.Facts.Buff? left, GuildWars2.Hero.Builds.Facts.Buff? right) -> bool
static GuildWars2.Hero.Builds.Facts.ComboField.operator !=(GuildWars2.Hero.Builds.Facts.ComboField? left, GuildWars2.Hero.Builds.Facts.ComboField? right) -> bool
static GuildWars2.Hero.Builds.Facts.ComboField.operator ==(GuildWars2.Hero.Builds.Facts.ComboField? left, GuildWars2.Hero.Builds.Facts.ComboField? right) -> bool
static GuildWars2.Hero.Builds.Facts.ComboFinisher.operator !=(GuildWars2.Hero.Builds.Facts.ComboFinisher? left, GuildWars2.Hero.Builds.Facts.ComboFinisher? right) -> bool
static GuildWars2.Hero.Builds.Facts.ComboFinisher.operator ==(GuildWars2.Hero.Builds.Facts.ComboFinisher? left, GuildWars2.Hero.Builds.Facts.ComboFinisher? right) -> bool
static GuildWars2.Hero.Builds.Facts.Damage.operator !=(GuildWars2.Hero.Builds.Facts.Damage? left, GuildWars2.Hero.Builds.Facts.Damage? right) -> bool
static GuildWars2.Hero.Builds.Facts.Damage.operator ==(GuildWars2.Hero.Builds.Facts.Damage? left, GuildWars2.Hero.Builds.Facts.Damage? right) -> bool
static GuildWars2.Hero.Builds.Facts.Distance.operator !=(GuildWars2.Hero.Builds.Facts.Distance? left, GuildWars2.Hero.Builds.Facts.Distance? right) -> bool
static GuildWars2.Hero.Builds.Facts.Distance.operator ==(GuildWars2.Hero.Builds.Facts.Distance? left, GuildWars2.Hero.Builds.Facts.Distance? right) -> bool
static GuildWars2.Hero.Builds.Facts.Duration.operator !=(GuildWars2.Hero.Builds.Facts.Duration? left, GuildWars2.Hero.Builds.Facts.Duration? right) -> bool
static GuildWars2.Hero.Builds.Facts.Duration.operator ==(GuildWars2.Hero.Builds.Facts.Duration? left, GuildWars2.Hero.Builds.Facts.Duration? right) -> bool
static GuildWars2.Hero.Builds.Facts.HealingAdjust.operator !=(GuildWars2.Hero.Builds.Facts.HealingAdjust? left, GuildWars2.Hero.Builds.Facts.HealingAdjust? right) -> bool
static GuildWars2.Hero.Builds.Facts.HealingAdjust.operator ==(GuildWars2.Hero.Builds.Facts.HealingAdjust? left, GuildWars2.Hero.Builds.Facts.HealingAdjust? right) -> bool
static GuildWars2.Hero.Builds.Facts.NoData.operator !=(GuildWars2.Hero.Builds.Facts.NoData? left, GuildWars2.Hero.Builds.Facts.NoData? right) -> bool
static GuildWars2.Hero.Builds.Facts.NoData.operator ==(GuildWars2.Hero.Builds.Facts.NoData? left, GuildWars2.Hero.Builds.Facts.NoData? right) -> bool
static GuildWars2.Hero.Builds.Facts.Number.operator !=(GuildWars2.Hero.Builds.Facts.Number? left, GuildWars2.Hero.Builds.Facts.Number? right) -> bool
static GuildWars2.Hero.Builds.Facts.Number.operator ==(GuildWars2.Hero.Builds.Facts.Number? left, GuildWars2.Hero.Builds.Facts.Number? right) -> bool
static GuildWars2.Hero.Builds.Facts.Percentage.operator !=(GuildWars2.Hero.Builds.Facts.Percentage? left, GuildWars2.Hero.Builds.Facts.Percentage? right) -> bool
static GuildWars2.Hero.Builds.Facts.Percentage.operator ==(GuildWars2.Hero.Builds.Facts.Percentage? left, GuildWars2.Hero.Builds.Facts.Percentage? right) -> bool
static GuildWars2.Hero.Builds.Facts.PrefixedBuff.operator !=(GuildWars2.Hero.Builds.Facts.PrefixedBuff? left, GuildWars2.Hero.Builds.Facts.PrefixedBuff? right) -> bool
static GuildWars2.Hero.Builds.Facts.PrefixedBuff.operator ==(GuildWars2.Hero.Builds.Facts.PrefixedBuff? left, GuildWars2.Hero.Builds.Facts.PrefixedBuff? right) -> bool
static GuildWars2.Hero.Builds.Facts.Radius.operator !=(GuildWars2.Hero.Builds.Facts.Radius? left, GuildWars2.Hero.Builds.Facts.Radius? right) -> bool
static GuildWars2.Hero.Builds.Facts.Radius.operator ==(GuildWars2.Hero.Builds.Facts.Radius? left, GuildWars2.Hero.Builds.Facts.Radius? right) -> bool
static GuildWars2.Hero.Builds.Facts.Range.operator !=(GuildWars2.Hero.Builds.Facts.Range? left, GuildWars2.Hero.Builds.Facts.Range? right) -> bool
static GuildWars2.Hero.Builds.Facts.Range.operator ==(GuildWars2.Hero.Builds.Facts.Range? left, GuildWars2.Hero.Builds.Facts.Range? right) -> bool
static GuildWars2.Hero.Builds.Facts.Recharge.operator !=(GuildWars2.Hero.Builds.Facts.Recharge? left, GuildWars2.Hero.Builds.Facts.Recharge? right) -> bool
static GuildWars2.Hero.Builds.Facts.Recharge.operator ==(GuildWars2.Hero.Builds.Facts.Recharge? left, GuildWars2.Hero.Builds.Facts.Recharge? right) -> bool
static GuildWars2.Hero.Builds.Facts.StunBreak.operator !=(GuildWars2.Hero.Builds.Facts.StunBreak? left, GuildWars2.Hero.Builds.Facts.StunBreak? right) -> bool
static GuildWars2.Hero.Builds.Facts.StunBreak.operator ==(GuildWars2.Hero.Builds.Facts.StunBreak? left, GuildWars2.Hero.Builds.Facts.StunBreak? right) -> bool
static GuildWars2.Hero.Builds.Facts.Time.operator !=(GuildWars2.Hero.Builds.Facts.Time? left, GuildWars2.Hero.Builds.Facts.Time? right) -> bool
static GuildWars2.Hero.Builds.Facts.Time.operator ==(GuildWars2.Hero.Builds.Facts.Time? left, GuildWars2.Hero.Builds.Facts.Time? right) -> bool
static GuildWars2.Hero.Builds.Facts.Unblockable.operator !=(GuildWars2.Hero.Builds.Facts.Unblockable? left, GuildWars2.Hero.Builds.Facts.Unblockable? right) -> bool
static GuildWars2.Hero.Builds.Facts.Unblockable.operator ==(GuildWars2.Hero.Builds.Facts.Unblockable? left, GuildWars2.Hero.Builds.Facts.Unblockable? right) -> bool
static GuildWars2.Hero.Builds.Legend.operator !=(GuildWars2.Hero.Builds.Legend? left, GuildWars2.Hero.Builds.Legend? right) -> bool
static GuildWars2.Hero.Builds.Legend.operator ==(GuildWars2.Hero.Builds.Legend? left, GuildWars2.Hero.Builds.Legend? right) -> bool
static GuildWars2.Hero.Builds.SelectedLegends.operator !=(GuildWars2.Hero.Builds.SelectedLegends? left, GuildWars2.Hero.Builds.SelectedLegends? right) -> bool
static GuildWars2.Hero.Builds.SelectedLegends.operator ==(GuildWars2.Hero.Builds.SelectedLegends? left, GuildWars2.Hero.Builds.SelectedLegends? right) -> bool
static GuildWars2.Hero.Builds.SelectedPets.operator !=(GuildWars2.Hero.Builds.SelectedPets? left, GuildWars2.Hero.Builds.SelectedPets? right) -> bool
static GuildWars2.Hero.Builds.SelectedPets.operator ==(GuildWars2.Hero.Builds.SelectedPets? left, GuildWars2.Hero.Builds.SelectedPets? right) -> bool
static GuildWars2.Hero.Builds.SelectedSpecialization.operator !=(GuildWars2.Hero.Builds.SelectedSpecialization? left, GuildWars2.Hero.Builds.SelectedSpecialization? right) -> bool
static GuildWars2.Hero.Builds.SelectedSpecialization.operator ==(GuildWars2.Hero.Builds.SelectedSpecialization? left, GuildWars2.Hero.Builds.SelectedSpecialization? right) -> bool
static GuildWars2.Hero.Builds.Skill.operator !=(GuildWars2.Hero.Builds.Skill? left, GuildWars2.Hero.Builds.Skill? right) -> bool
static GuildWars2.Hero.Builds.Skill.operator ==(GuildWars2.Hero.Builds.Skill? left, GuildWars2.Hero.Builds.Skill? right) -> bool
static GuildWars2.Hero.Builds.SkillBar.operator !=(GuildWars2.Hero.Builds.SkillBar? left, GuildWars2.Hero.Builds.SkillBar? right) -> bool
static GuildWars2.Hero.Builds.SkillBar.operator ==(GuildWars2.Hero.Builds.SkillBar? left, GuildWars2.Hero.Builds.SkillBar? right) -> bool
static GuildWars2.Hero.Builds.SkillFlags.operator !=(GuildWars2.Hero.Builds.SkillFlags? left, GuildWars2.Hero.Builds.SkillFlags? right) -> bool
static GuildWars2.Hero.Builds.SkillFlags.operator ==(GuildWars2.Hero.Builds.SkillFlags? left, GuildWars2.Hero.Builds.SkillFlags? right) -> bool
static GuildWars2.Hero.Builds.Skills.BundleSkill.operator !=(GuildWars2.Hero.Builds.Skills.BundleSkill? left, GuildWars2.Hero.Builds.Skills.BundleSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.BundleSkill.operator ==(GuildWars2.Hero.Builds.Skills.BundleSkill? left, GuildWars2.Hero.Builds.Skills.BundleSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.EliteSkill.operator !=(GuildWars2.Hero.Builds.Skills.EliteSkill? left, GuildWars2.Hero.Builds.Skills.EliteSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.EliteSkill.operator ==(GuildWars2.Hero.Builds.Skills.EliteSkill? left, GuildWars2.Hero.Builds.Skills.EliteSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.HealSkill.operator !=(GuildWars2.Hero.Builds.Skills.HealSkill? left, GuildWars2.Hero.Builds.Skills.HealSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.HealSkill.operator ==(GuildWars2.Hero.Builds.Skills.HealSkill? left, GuildWars2.Hero.Builds.Skills.HealSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.LockedSkill.operator !=(GuildWars2.Hero.Builds.Skills.LockedSkill? left, GuildWars2.Hero.Builds.Skills.LockedSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.LockedSkill.operator ==(GuildWars2.Hero.Builds.Skills.LockedSkill? left, GuildWars2.Hero.Builds.Skills.LockedSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.MonsterSkill.operator !=(GuildWars2.Hero.Builds.Skills.MonsterSkill? left, GuildWars2.Hero.Builds.Skills.MonsterSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.MonsterSkill.operator ==(GuildWars2.Hero.Builds.Skills.MonsterSkill? left, GuildWars2.Hero.Builds.Skills.MonsterSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.PetSkill.operator !=(GuildWars2.Hero.Builds.Skills.PetSkill? left, GuildWars2.Hero.Builds.Skills.PetSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.PetSkill.operator ==(GuildWars2.Hero.Builds.Skills.PetSkill? left, GuildWars2.Hero.Builds.Skills.PetSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.ProfessionSkill.operator !=(GuildWars2.Hero.Builds.Skills.ProfessionSkill? left, GuildWars2.Hero.Builds.Skills.ProfessionSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.ProfessionSkill.operator ==(GuildWars2.Hero.Builds.Skills.ProfessionSkill? left, GuildWars2.Hero.Builds.Skills.ProfessionSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.ToolbeltSkill.operator !=(GuildWars2.Hero.Builds.Skills.ToolbeltSkill? left, GuildWars2.Hero.Builds.Skills.ToolbeltSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.ToolbeltSkill.operator ==(GuildWars2.Hero.Builds.Skills.ToolbeltSkill? left, GuildWars2.Hero.Builds.Skills.ToolbeltSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.UtilitySkill.operator !=(GuildWars2.Hero.Builds.Skills.UtilitySkill? left, GuildWars2.Hero.Builds.Skills.UtilitySkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.UtilitySkill.operator ==(GuildWars2.Hero.Builds.Skills.UtilitySkill? left, GuildWars2.Hero.Builds.Skills.UtilitySkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.WeaponSkill.operator !=(GuildWars2.Hero.Builds.Skills.WeaponSkill? left, GuildWars2.Hero.Builds.Skills.WeaponSkill? right) -> bool
static GuildWars2.Hero.Builds.Skills.WeaponSkill.operator ==(GuildWars2.Hero.Builds.Skills.WeaponSkill? left, GuildWars2.Hero.Builds.Skills.WeaponSkill? right) -> bool
static GuildWars2.Hero.Builds.SlotSkill.operator !=(GuildWars2.Hero.Builds.SlotSkill? left, GuildWars2.Hero.Builds.SlotSkill? right) -> bool
static GuildWars2.Hero.Builds.SlotSkill.operator ==(GuildWars2.Hero.Builds.SlotSkill? left, GuildWars2.Hero.Builds.SlotSkill? right) -> bool
static GuildWars2.Hero.Builds.Specialization.operator !=(GuildWars2.Hero.Builds.Specialization? left, GuildWars2.Hero.Builds.Specialization? right) -> bool
static GuildWars2.Hero.Builds.Specialization.operator ==(GuildWars2.Hero.Builds.Specialization? left, GuildWars2.Hero.Builds.Specialization? right) -> bool
static GuildWars2.Hero.Builds.Subskill.operator !=(GuildWars2.Hero.Builds.Subskill? left, GuildWars2.Hero.Builds.Subskill? right) -> bool
static GuildWars2.Hero.Builds.Subskill.operator ==(GuildWars2.Hero.Builds.Subskill? left, GuildWars2.Hero.Builds.Subskill? right) -> bool
static GuildWars2.Hero.Builds.Trait.operator !=(GuildWars2.Hero.Builds.Trait? left, GuildWars2.Hero.Builds.Trait? right) -> bool
static GuildWars2.Hero.Builds.Trait.operator ==(GuildWars2.Hero.Builds.Trait? left, GuildWars2.Hero.Builds.Trait? right) -> bool
static GuildWars2.Hero.Builds.TraitedFact.operator !=(GuildWars2.Hero.Builds.TraitedFact? left, GuildWars2.Hero.Builds.TraitedFact? right) -> bool
static GuildWars2.Hero.Builds.TraitedFact.operator ==(GuildWars2.Hero.Builds.TraitedFact? left, GuildWars2.Hero.Builds.TraitedFact? right) -> bool
static GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.operator !=(GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline? left, GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline? right) -> bool
static GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline.operator ==(GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline? left, GuildWars2.Hero.Crafting.Disciplines.CraftingDiscipline? right) -> bool
static GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.operator !=(GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines? left, GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines? right) -> bool
static GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines.operator ==(GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines? left, GuildWars2.Hero.Crafting.Disciplines.LearnedCraftingDisciplines? right) -> bool
static GuildWars2.Hero.Crafting.GuildIngredient.operator !=(GuildWars2.Hero.Crafting.GuildIngredient? left, GuildWars2.Hero.Crafting.GuildIngredient? right) -> bool
static GuildWars2.Hero.Crafting.GuildIngredient.operator ==(GuildWars2.Hero.Crafting.GuildIngredient? left, GuildWars2.Hero.Crafting.GuildIngredient? right) -> bool
static GuildWars2.Hero.Crafting.Ingredient.operator !=(GuildWars2.Hero.Crafting.Ingredient? left, GuildWars2.Hero.Crafting.Ingredient? right) -> bool
static GuildWars2.Hero.Crafting.Ingredient.operator ==(GuildWars2.Hero.Crafting.Ingredient? left, GuildWars2.Hero.Crafting.Ingredient? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.AmuletRecipe? left, GuildWars2.Hero.Crafting.Recipes.AmuletRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.AmuletRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.AmuletRecipe? left, GuildWars2.Hero.Crafting.Recipes.AmuletRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.AxeRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.AxeRecipe? left, GuildWars2.Hero.Crafting.Recipes.AxeRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.AxeRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.AxeRecipe? left, GuildWars2.Hero.Crafting.Recipes.AxeRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.BackpackRecipe? left, GuildWars2.Hero.Crafting.Recipes.BackpackRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BackpackRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.BackpackRecipe? left, GuildWars2.Hero.Crafting.Recipes.BackpackRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BagRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.BagRecipe? left, GuildWars2.Hero.Crafting.Recipes.BagRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BagRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.BagRecipe? left, GuildWars2.Hero.Crafting.Recipes.BagRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BootsRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.BootsRecipe? left, GuildWars2.Hero.Crafting.Recipes.BootsRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BootsRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.BootsRecipe? left, GuildWars2.Hero.Crafting.Recipes.BootsRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BulkRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.BulkRecipe? left, GuildWars2.Hero.Crafting.Recipes.BulkRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.BulkRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.BulkRecipe? left, GuildWars2.Hero.Crafting.Recipes.BulkRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.CoatRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.CoatRecipe? left, GuildWars2.Hero.Crafting.Recipes.CoatRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.CoatRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.CoatRecipe? left, GuildWars2.Hero.Crafting.Recipes.CoatRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.ComponentRecipe? left, GuildWars2.Hero.Crafting.Recipes.ComponentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ComponentRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.ComponentRecipe? left, GuildWars2.Hero.Crafting.Recipes.ComponentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe? left, GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe? left, GuildWars2.Hero.Crafting.Recipes.ConsumableRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.DaggerRecipe? left, GuildWars2.Hero.Crafting.Recipes.DaggerRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.DaggerRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.DaggerRecipe? left, GuildWars2.Hero.Crafting.Recipes.DaggerRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.DessertRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.DessertRecipe? left, GuildWars2.Hero.Crafting.Recipes.DessertRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.DessertRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.DessertRecipe? left, GuildWars2.Hero.Crafting.Recipes.DessertRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.DyeRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.DyeRecipe? left, GuildWars2.Hero.Crafting.Recipes.DyeRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.DyeRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.DyeRecipe? left, GuildWars2.Hero.Crafting.Recipes.DyeRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.EarringRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.EarringRecipe? left, GuildWars2.Hero.Crafting.Recipes.EarringRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.EarringRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.EarringRecipe? left, GuildWars2.Hero.Crafting.Recipes.EarringRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.FeastRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.FeastRecipe? left, GuildWars2.Hero.Crafting.Recipes.FeastRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.FeastRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.FeastRecipe? left, GuildWars2.Hero.Crafting.Recipes.FeastRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.FocusRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.FocusRecipe? left, GuildWars2.Hero.Crafting.Recipes.FocusRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.FocusRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.FocusRecipe? left, GuildWars2.Hero.Crafting.Recipes.FocusRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.GlovesRecipe? left, GuildWars2.Hero.Crafting.Recipes.GlovesRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GlovesRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.GlovesRecipe? left, GuildWars2.Hero.Crafting.Recipes.GlovesRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe? left, GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe? left, GuildWars2.Hero.Crafting.Recipes.GreatswordRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe? left, GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe? left, GuildWars2.Hero.Crafting.Recipes.GuildConsumableRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe? left, GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe? left, GuildWars2.Hero.Crafting.Recipes.GuildDecorationRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe? left, GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe? left, GuildWars2.Hero.Crafting.Recipes.GuildWvwUpgradeRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.HammerRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.HammerRecipe? left, GuildWars2.Hero.Crafting.Recipes.HammerRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.HammerRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.HammerRecipe? left, GuildWars2.Hero.Crafting.Recipes.HammerRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe? left, GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe? left, GuildWars2.Hero.Crafting.Recipes.HarpoonGunRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe? left, GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe? left, GuildWars2.Hero.Crafting.Recipes.HeadgearRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe? left, GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe? left, GuildWars2.Hero.Crafting.Recipes.IngredientCookingRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe? left, GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe? left, GuildWars2.Hero.Crafting.Recipes.InscriptionRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe? left, GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe? left, GuildWars2.Hero.Crafting.Recipes.InsigniaRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe? left, GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe? left, GuildWars2.Hero.Crafting.Recipes.LegendaryComponentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe? left, GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe? left, GuildWars2.Hero.Crafting.Recipes.LeggingsRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.LongbowRecipe? left, GuildWars2.Hero.Crafting.Recipes.LongbowRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.LongbowRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.LongbowRecipe? left, GuildWars2.Hero.Crafting.Recipes.LongbowRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.MaceRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.MaceRecipe? left, GuildWars2.Hero.Crafting.Recipes.MaceRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.MaceRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.MaceRecipe? left, GuildWars2.Hero.Crafting.Recipes.MaceRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.MealRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.MealRecipe? left, GuildWars2.Hero.Crafting.Recipes.MealRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.MealRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.MealRecipe? left, GuildWars2.Hero.Crafting.Recipes.MealRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.PistolRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.PistolRecipe? left, GuildWars2.Hero.Crafting.Recipes.PistolRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.PistolRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.PistolRecipe? left, GuildWars2.Hero.Crafting.Recipes.PistolRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.PotionRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.PotionRecipe? left, GuildWars2.Hero.Crafting.Recipes.PotionRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.PotionRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.PotionRecipe? left, GuildWars2.Hero.Crafting.Recipes.PotionRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.Recipe.operator !=(GuildWars2.Hero.Crafting.Recipes.Recipe? left, GuildWars2.Hero.Crafting.Recipes.Recipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.Recipe.operator ==(GuildWars2.Hero.Crafting.Recipes.Recipe? left, GuildWars2.Hero.Crafting.Recipes.Recipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RecipeFlags.operator !=(GuildWars2.Hero.Crafting.Recipes.RecipeFlags? left, GuildWars2.Hero.Crafting.Recipes.RecipeFlags? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RecipeFlags.operator ==(GuildWars2.Hero.Crafting.Recipes.RecipeFlags? left, GuildWars2.Hero.Crafting.Recipes.RecipeFlags? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe? left, GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe? left, GuildWars2.Hero.Crafting.Recipes.RefinementEctoplasmRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe? left, GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe? left, GuildWars2.Hero.Crafting.Recipes.RefinementObsidianRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.RefinementRecipe? left, GuildWars2.Hero.Crafting.Recipes.RefinementRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RefinementRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.RefinementRecipe? left, GuildWars2.Hero.Crafting.Recipes.RefinementRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RifleRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.RifleRecipe? left, GuildWars2.Hero.Crafting.Recipes.RifleRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RifleRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.RifleRecipe? left, GuildWars2.Hero.Crafting.Recipes.RifleRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RingRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.RingRecipe? left, GuildWars2.Hero.Crafting.Recipes.RingRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.RingRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.RingRecipe? left, GuildWars2.Hero.Crafting.Recipes.RingRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.ScepterRecipe? left, GuildWars2.Hero.Crafting.Recipes.ScepterRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ScepterRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.ScepterRecipe? left, GuildWars2.Hero.Crafting.Recipes.ScepterRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe? left, GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe? left, GuildWars2.Hero.Crafting.Recipes.SeasoningRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.ShieldRecipe? left, GuildWars2.Hero.Crafting.Recipes.ShieldRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ShieldRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.ShieldRecipe? left, GuildWars2.Hero.Crafting.Recipes.ShieldRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe? left, GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe? left, GuildWars2.Hero.Crafting.Recipes.ShortbowRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe? left, GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe? left, GuildWars2.Hero.Crafting.Recipes.ShouldersRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SnackRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.SnackRecipe? left, GuildWars2.Hero.Crafting.Recipes.SnackRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SnackRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.SnackRecipe? left, GuildWars2.Hero.Crafting.Recipes.SnackRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SoupRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.SoupRecipe? left, GuildWars2.Hero.Crafting.Recipes.SoupRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SoupRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.SoupRecipe? left, GuildWars2.Hero.Crafting.Recipes.SoupRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SpearRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.SpearRecipe? left, GuildWars2.Hero.Crafting.Recipes.SpearRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SpearRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.SpearRecipe? left, GuildWars2.Hero.Crafting.Recipes.SpearRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.StaffRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.StaffRecipe? left, GuildWars2.Hero.Crafting.Recipes.StaffRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.StaffRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.StaffRecipe? left, GuildWars2.Hero.Crafting.Recipes.StaffRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SwordRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.SwordRecipe? left, GuildWars2.Hero.Crafting.Recipes.SwordRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.SwordRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.SwordRecipe? left, GuildWars2.Hero.Crafting.Recipes.SwordRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.TorchRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.TorchRecipe? left, GuildWars2.Hero.Crafting.Recipes.TorchRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.TorchRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.TorchRecipe? left, GuildWars2.Hero.Crafting.Recipes.TorchRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.TridentRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.TridentRecipe? left, GuildWars2.Hero.Crafting.Recipes.TridentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.TridentRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.TridentRecipe? left, GuildWars2.Hero.Crafting.Recipes.TridentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe? left, GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe? left, GuildWars2.Hero.Crafting.Recipes.UpgradeComponentRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.operator !=(GuildWars2.Hero.Crafting.Recipes.WarhornRecipe? left, GuildWars2.Hero.Crafting.Recipes.WarhornRecipe? right) -> bool
static GuildWars2.Hero.Crafting.Recipes.WarhornRecipe.operator ==(GuildWars2.Hero.Crafting.Recipes.WarhornRecipe? left, GuildWars2.Hero.Crafting.Recipes.WarhornRecipe? right) -> bool
static GuildWars2.Hero.Emotes.Emote.operator !=(GuildWars2.Hero.Emotes.Emote? left, GuildWars2.Hero.Emotes.Emote? right) -> bool
static GuildWars2.Hero.Emotes.Emote.operator ==(GuildWars2.Hero.Emotes.Emote? left, GuildWars2.Hero.Emotes.Emote? right) -> bool
static GuildWars2.Hero.Equipment.Dyes.ColorInfo.operator !=(GuildWars2.Hero.Equipment.Dyes.ColorInfo? left, GuildWars2.Hero.Equipment.Dyes.ColorInfo? right) -> bool
static GuildWars2.Hero.Equipment.Dyes.ColorInfo.operator ==(GuildWars2.Hero.Equipment.Dyes.ColorInfo? left, GuildWars2.Hero.Equipment.Dyes.ColorInfo? right) -> bool
static GuildWars2.Hero.Equipment.Dyes.DyeColor.operator !=(GuildWars2.Hero.Equipment.Dyes.DyeColor? left, GuildWars2.Hero.Equipment.Dyes.DyeColor? right) -> bool
static GuildWars2.Hero.Equipment.Dyes.DyeColor.operator ==(GuildWars2.Hero.Equipment.Dyes.DyeColor? left, GuildWars2.Hero.Equipment.Dyes.DyeColor? right) -> bool
static GuildWars2.Hero.Equipment.DyeSlot.operator !=(GuildWars2.Hero.Equipment.DyeSlot? left, GuildWars2.Hero.Equipment.DyeSlot? right) -> bool
static GuildWars2.Hero.Equipment.DyeSlot.operator ==(GuildWars2.Hero.Equipment.DyeSlot? left, GuildWars2.Hero.Equipment.DyeSlot? right) -> bool
static GuildWars2.Hero.Equipment.Finishers.Finisher.operator !=(GuildWars2.Hero.Equipment.Finishers.Finisher? left, GuildWars2.Hero.Equipment.Finishers.Finisher? right) -> bool
static GuildWars2.Hero.Equipment.Finishers.Finisher.operator ==(GuildWars2.Hero.Equipment.Finishers.Finisher? left, GuildWars2.Hero.Equipment.Finishers.Finisher? right) -> bool
static GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.operator !=(GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher? left, GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher? right) -> bool
static GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher.operator ==(GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher? left, GuildWars2.Hero.Equipment.Finishers.UnlockedFinisher? right) -> bool
static GuildWars2.Hero.Equipment.Gliders.GliderSkin.operator !=(GuildWars2.Hero.Equipment.Gliders.GliderSkin? left, GuildWars2.Hero.Equipment.Gliders.GliderSkin? right) -> bool
static GuildWars2.Hero.Equipment.Gliders.GliderSkin.operator ==(GuildWars2.Hero.Equipment.Gliders.GliderSkin? left, GuildWars2.Hero.Equipment.Gliders.GliderSkin? right) -> bool
static GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.operator !=(GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin? left, GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin? right) -> bool
static GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin.operator ==(GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin? left, GuildWars2.Hero.Equipment.JadeBots.JadeBotSkin? right) -> bool
static GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.operator !=(GuildWars2.Hero.Equipment.MailCarriers.MailCarrier? left, GuildWars2.Hero.Equipment.MailCarriers.MailCarrier? right) -> bool
static GuildWars2.Hero.Equipment.MailCarriers.MailCarrier.operator ==(GuildWars2.Hero.Equipment.MailCarriers.MailCarrier? left, GuildWars2.Hero.Equipment.MailCarriers.MailCarrier? right) -> bool
static GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.operator !=(GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags? left, GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags? right) -> bool
static GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags.operator ==(GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags? left, GuildWars2.Hero.Equipment.MailCarriers.MailCarrierFlags? right) -> bool
static GuildWars2.Hero.Equipment.Miniatures.Miniature.operator !=(GuildWars2.Hero.Equipment.Miniatures.Miniature? left, GuildWars2.Hero.Equipment.Miniatures.Miniature? right) -> bool
static GuildWars2.Hero.Equipment.Miniatures.Miniature.operator ==(GuildWars2.Hero.Equipment.Miniatures.Miniature? left, GuildWars2.Hero.Equipment.Miniatures.Miniature? right) -> bool
static GuildWars2.Hero.Equipment.Mounts.Mount.operator !=(GuildWars2.Hero.Equipment.Mounts.Mount? left, GuildWars2.Hero.Equipment.Mounts.Mount? right) -> bool
static GuildWars2.Hero.Equipment.Mounts.Mount.operator ==(GuildWars2.Hero.Equipment.Mounts.Mount? left, GuildWars2.Hero.Equipment.Mounts.Mount? right) -> bool
static GuildWars2.Hero.Equipment.Mounts.MountSkin.operator !=(GuildWars2.Hero.Equipment.Mounts.MountSkin? left, GuildWars2.Hero.Equipment.Mounts.MountSkin? right) -> bool
static GuildWars2.Hero.Equipment.Mounts.MountSkin.operator ==(GuildWars2.Hero.Equipment.Mounts.MountSkin? left, GuildWars2.Hero.Equipment.Mounts.MountSkin? right) -> bool
static GuildWars2.Hero.Equipment.Mounts.SkillReference.operator !=(GuildWars2.Hero.Equipment.Mounts.SkillReference? left, GuildWars2.Hero.Equipment.Mounts.SkillReference? right) -> bool
static GuildWars2.Hero.Equipment.Mounts.SkillReference.operator ==(GuildWars2.Hero.Equipment.Mounts.SkillReference? left, GuildWars2.Hero.Equipment.Mounts.SkillReference? right) -> bool
static GuildWars2.Hero.Equipment.Novelties.Novelty.operator !=(GuildWars2.Hero.Equipment.Novelties.Novelty? left, GuildWars2.Hero.Equipment.Novelties.Novelty? right) -> bool
static GuildWars2.Hero.Equipment.Novelties.Novelty.operator ==(GuildWars2.Hero.Equipment.Novelties.Novelty? left, GuildWars2.Hero.Equipment.Novelties.Novelty? right) -> bool
static GuildWars2.Hero.Equipment.Outfits.Outfit.operator !=(GuildWars2.Hero.Equipment.Outfits.Outfit? left, GuildWars2.Hero.Equipment.Outfits.Outfit? right) -> bool
static GuildWars2.Hero.Equipment.Outfits.Outfit.operator ==(GuildWars2.Hero.Equipment.Outfits.Outfit? left, GuildWars2.Hero.Equipment.Outfits.Outfit? right) -> bool
static GuildWars2.Hero.Equipment.SelectedAttributeCombination.operator !=(GuildWars2.Hero.Equipment.SelectedAttributeCombination? left, GuildWars2.Hero.Equipment.SelectedAttributeCombination? right) -> bool
static GuildWars2.Hero.Equipment.SelectedAttributeCombination.operator ==(GuildWars2.Hero.Equipment.SelectedAttributeCombination? left, GuildWars2.Hero.Equipment.SelectedAttributeCombination? right) -> bool
static GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.operator !=(GuildWars2.Hero.Equipment.Skiffs.SkiffSkin? left, GuildWars2.Hero.Equipment.Skiffs.SkiffSkin? right) -> bool
static GuildWars2.Hero.Equipment.Skiffs.SkiffSkin.operator ==(GuildWars2.Hero.Equipment.Skiffs.SkiffSkin? left, GuildWars2.Hero.Equipment.Skiffs.SkiffSkin? right) -> bool
static GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.operator !=(GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem? left, GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem? right) -> bool
static GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem.operator ==(GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem? left, GuildWars2.Hero.Equipment.Templates.BoundLegendaryItem? right) -> bool
static GuildWars2.Hero.Equipment.Templates.CharacterEquipment.operator !=(GuildWars2.Hero.Equipment.Templates.CharacterEquipment? left, GuildWars2.Hero.Equipment.Templates.CharacterEquipment? right) -> bool
static GuildWars2.Hero.Equipment.Templates.CharacterEquipment.operator ==(GuildWars2.Hero.Equipment.Templates.CharacterEquipment? left, GuildWars2.Hero.Equipment.Templates.CharacterEquipment? right) -> bool
static GuildWars2.Hero.Equipment.Templates.EquipmentItem.operator !=(GuildWars2.Hero.Equipment.Templates.EquipmentItem? left, GuildWars2.Hero.Equipment.Templates.EquipmentItem? right) -> bool
static GuildWars2.Hero.Equipment.Templates.EquipmentItem.operator ==(GuildWars2.Hero.Equipment.Templates.EquipmentItem? left, GuildWars2.Hero.Equipment.Templates.EquipmentItem? right) -> bool
static GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.operator !=(GuildWars2.Hero.Equipment.Templates.EquipmentTemplate? left, GuildWars2.Hero.Equipment.Templates.EquipmentTemplate? right) -> bool
static GuildWars2.Hero.Equipment.Templates.EquipmentTemplate.operator ==(GuildWars2.Hero.Equipment.Templates.EquipmentTemplate? left, GuildWars2.Hero.Equipment.Templates.EquipmentTemplate? right) -> bool
static GuildWars2.Hero.Equipment.Templates.LegendaryItem.operator !=(GuildWars2.Hero.Equipment.Templates.LegendaryItem? left, GuildWars2.Hero.Equipment.Templates.LegendaryItem? right) -> bool
static GuildWars2.Hero.Equipment.Templates.LegendaryItem.operator ==(GuildWars2.Hero.Equipment.Templates.LegendaryItem? left, GuildWars2.Hero.Equipment.Templates.LegendaryItem? right) -> bool
static GuildWars2.Hero.Equipment.Templates.PvpEquipment.operator !=(GuildWars2.Hero.Equipment.Templates.PvpEquipment? left, GuildWars2.Hero.Equipment.Templates.PvpEquipment? right) -> bool
static GuildWars2.Hero.Equipment.Templates.PvpEquipment.operator ==(GuildWars2.Hero.Equipment.Templates.PvpEquipment? left, GuildWars2.Hero.Equipment.Templates.PvpEquipment? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.AxeSkin? left, GuildWars2.Hero.Equipment.Wardrobe.AxeSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.AxeSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.AxeSkin? left, GuildWars2.Hero.Equipment.Wardrobe.AxeSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin? left, GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin? left, GuildWars2.Hero.Equipment.Wardrobe.BackpackSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.BootsSkin? left, GuildWars2.Hero.Equipment.Wardrobe.BootsSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.BootsSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.BootsSkin? left, GuildWars2.Hero.Equipment.Wardrobe.BootsSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.CoatSkin? left, GuildWars2.Hero.Equipment.Wardrobe.CoatSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.CoatSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.CoatSkin? left, GuildWars2.Hero.Equipment.Wardrobe.CoatSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin? left, GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin? left, GuildWars2.Hero.Equipment.Wardrobe.DaggerSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.operator !=(GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo? left, GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo.operator ==(GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo? left, GuildWars2.Hero.Equipment.Wardrobe.DyeSlotInfo? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? left, GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? left, GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.FishingToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.FocusSkin? left, GuildWars2.Hero.Equipment.Wardrobe.FocusSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.FocusSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.FocusSkin? left, GuildWars2.Hero.Equipment.Wardrobe.FocusSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ForagingToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin? left, GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin? left, GuildWars2.Hero.Equipment.Wardrobe.GlovesSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin? left, GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin? left, GuildWars2.Hero.Equipment.Wardrobe.GreatswordSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.HammerSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HammerSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HammerSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.HammerSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HammerSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HarpoonGunSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HelmAquaticSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.HelmSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HelmSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.HelmSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.HelmSkin? left, GuildWars2.Hero.Equipment.Wardrobe.HelmSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LargeBundleSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LeggingsSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LoggingToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin? left, GuildWars2.Hero.Equipment.Wardrobe.LongbowSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.MaceSkin? left, GuildWars2.Hero.Equipment.Wardrobe.MaceSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.MaceSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.MaceSkin? left, GuildWars2.Hero.Equipment.Wardrobe.MaceSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.MiningToolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.PistolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.PistolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.PistolSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.PistolSkin? left, GuildWars2.Hero.Equipment.Wardrobe.PistolSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.RifleSkin? left, GuildWars2.Hero.Equipment.Wardrobe.RifleSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.RifleSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.RifleSkin? left, GuildWars2.Hero.Equipment.Wardrobe.RifleSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ScepterSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ShieldSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ShortbowSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ShouldersSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.operator !=(GuildWars2.Hero.Equipment.Wardrobe.SkinFlags? left, GuildWars2.Hero.Equipment.Wardrobe.SkinFlags? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SkinFlags.operator ==(GuildWars2.Hero.Equipment.Wardrobe.SkinFlags? left, GuildWars2.Hero.Equipment.Wardrobe.SkinFlags? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin? left, GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin? left, GuildWars2.Hero.Equipment.Wardrobe.SmallBundleSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.SpearSkin? left, GuildWars2.Hero.Equipment.Wardrobe.SpearSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SpearSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.SpearSkin? left, GuildWars2.Hero.Equipment.Wardrobe.SpearSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.StaffSkin? left, GuildWars2.Hero.Equipment.Wardrobe.StaffSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.StaffSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.StaffSkin? left, GuildWars2.Hero.Equipment.Wardrobe.StaffSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.SwordSkin? left, GuildWars2.Hero.Equipment.Wardrobe.SwordSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.SwordSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.SwordSkin? left, GuildWars2.Hero.Equipment.Wardrobe.SwordSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.TorchSkin? left, GuildWars2.Hero.Equipment.Wardrobe.TorchSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.TorchSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.TorchSkin? left, GuildWars2.Hero.Equipment.Wardrobe.TorchSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ToySkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ToySkin? left, GuildWars2.Hero.Equipment.Wardrobe.ToySkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ToySkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ToySkin? left, GuildWars2.Hero.Equipment.Wardrobe.ToySkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin? left, GuildWars2.Hero.Equipment.Wardrobe.ToyTwoHandedSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.TridentSkin? left, GuildWars2.Hero.Equipment.Wardrobe.TridentSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.TridentSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.TridentSkin? left, GuildWars2.Hero.Equipment.Wardrobe.TridentSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin? left, GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin? left, GuildWars2.Hero.Equipment.Wardrobe.WarhornSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.operator !=(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? left, GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? right) -> bool
static GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.operator ==(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? left, GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? right) -> bool
static GuildWars2.Hero.Inventories.Bag.operator !=(GuildWars2.Hero.Inventories.Bag? left, GuildWars2.Hero.Inventories.Bag? right) -> bool
static GuildWars2.Hero.Inventories.Bag.operator ==(GuildWars2.Hero.Inventories.Bag? left, GuildWars2.Hero.Inventories.Bag? right) -> bool
static GuildWars2.Hero.Inventories.Baggage.operator !=(GuildWars2.Hero.Inventories.Baggage? left, GuildWars2.Hero.Inventories.Baggage? right) -> bool
static GuildWars2.Hero.Inventories.Baggage.operator ==(GuildWars2.Hero.Inventories.Baggage? left, GuildWars2.Hero.Inventories.Baggage? right) -> bool
static GuildWars2.Hero.Inventories.Inventory.operator !=(GuildWars2.Hero.Inventories.Inventory? left, GuildWars2.Hero.Inventories.Inventory? right) -> bool
static GuildWars2.Hero.Inventories.Inventory.operator ==(GuildWars2.Hero.Inventories.Inventory? left, GuildWars2.Hero.Inventories.Inventory? right) -> bool
static GuildWars2.Hero.Inventories.ItemSlot.operator !=(GuildWars2.Hero.Inventories.ItemSlot? left, GuildWars2.Hero.Inventories.ItemSlot? right) -> bool
static GuildWars2.Hero.Inventories.ItemSlot.operator ==(GuildWars2.Hero.Inventories.ItemSlot? left, GuildWars2.Hero.Inventories.ItemSlot? right) -> bool
static GuildWars2.Hero.Masteries.Mastery.operator !=(GuildWars2.Hero.Masteries.Mastery? left, GuildWars2.Hero.Masteries.Mastery? right) -> bool
static GuildWars2.Hero.Masteries.Mastery.operator ==(GuildWars2.Hero.Masteries.Mastery? left, GuildWars2.Hero.Masteries.Mastery? right) -> bool
static GuildWars2.Hero.Masteries.MasteryPointsProgress.operator !=(GuildWars2.Hero.Masteries.MasteryPointsProgress? left, GuildWars2.Hero.Masteries.MasteryPointsProgress? right) -> bool
static GuildWars2.Hero.Masteries.MasteryPointsProgress.operator ==(GuildWars2.Hero.Masteries.MasteryPointsProgress? left, GuildWars2.Hero.Masteries.MasteryPointsProgress? right) -> bool
static GuildWars2.Hero.Masteries.MasteryPointsTotal.operator !=(GuildWars2.Hero.Masteries.MasteryPointsTotal? left, GuildWars2.Hero.Masteries.MasteryPointsTotal? right) -> bool
static GuildWars2.Hero.Masteries.MasteryPointsTotal.operator ==(GuildWars2.Hero.Masteries.MasteryPointsTotal? left, GuildWars2.Hero.Masteries.MasteryPointsTotal? right) -> bool
static GuildWars2.Hero.Masteries.MasteryTrack.operator !=(GuildWars2.Hero.Masteries.MasteryTrack? left, GuildWars2.Hero.Masteries.MasteryTrack? right) -> bool
static GuildWars2.Hero.Masteries.MasteryTrack.operator ==(GuildWars2.Hero.Masteries.MasteryTrack? left, GuildWars2.Hero.Masteries.MasteryTrack? right) -> bool
static GuildWars2.Hero.Masteries.MasteryTrackProgress.operator !=(GuildWars2.Hero.Masteries.MasteryTrackProgress? left, GuildWars2.Hero.Masteries.MasteryTrackProgress? right) -> bool
static GuildWars2.Hero.Masteries.MasteryTrackProgress.operator ==(GuildWars2.Hero.Masteries.MasteryTrackProgress? left, GuildWars2.Hero.Masteries.MasteryTrackProgress? right) -> bool
static GuildWars2.Hero.Races.Race.operator !=(GuildWars2.Hero.Races.Race? left, GuildWars2.Hero.Races.Race? right) -> bool
static GuildWars2.Hero.Races.Race.operator ==(GuildWars2.Hero.Races.Race? left, GuildWars2.Hero.Races.Race? right) -> bool
static GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.operator !=(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer? left, GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer? right) -> bool
static GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer.operator ==(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer? left, GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryAnswer? right) -> bool
static GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.operator !=(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion? left, GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion? right) -> bool
static GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion.operator ==(GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion? left, GuildWars2.Hero.StoryJournal.BackgroundStories.BackgroundStoryQuestion? right) -> bool
static GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.operator !=(GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory? left, GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory? right) -> bool
static GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory.operator ==(GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory? left, GuildWars2.Hero.StoryJournal.BackgroundStories.CharacterBackgroundStory? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Chapter.operator !=(GuildWars2.Hero.StoryJournal.Stories.Chapter? left, GuildWars2.Hero.StoryJournal.Stories.Chapter? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Chapter.operator ==(GuildWars2.Hero.StoryJournal.Stories.Chapter? left, GuildWars2.Hero.StoryJournal.Stories.Chapter? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Objective.operator !=(GuildWars2.Hero.StoryJournal.Stories.Objective? left, GuildWars2.Hero.StoryJournal.Stories.Objective? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Objective.operator ==(GuildWars2.Hero.StoryJournal.Stories.Objective? left, GuildWars2.Hero.StoryJournal.Stories.Objective? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Story.operator !=(GuildWars2.Hero.StoryJournal.Stories.Story? left, GuildWars2.Hero.StoryJournal.Stories.Story? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Story.operator ==(GuildWars2.Hero.StoryJournal.Stories.Story? left, GuildWars2.Hero.StoryJournal.Stories.Story? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.StoryFlags.None.get -> GuildWars2.Hero.StoryJournal.Stories.StoryFlags!
static GuildWars2.Hero.StoryJournal.Stories.StoryFlags.operator !=(GuildWars2.Hero.StoryJournal.Stories.StoryFlags? left, GuildWars2.Hero.StoryJournal.Stories.StoryFlags? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.StoryFlags.operator ==(GuildWars2.Hero.StoryJournal.Stories.StoryFlags? left, GuildWars2.Hero.StoryJournal.Stories.StoryFlags? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Storyline.operator !=(GuildWars2.Hero.StoryJournal.Stories.Storyline? left, GuildWars2.Hero.StoryJournal.Stories.Storyline? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.Storyline.operator ==(GuildWars2.Hero.StoryJournal.Stories.Storyline? left, GuildWars2.Hero.StoryJournal.Stories.Storyline? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.StoryStep.operator !=(GuildWars2.Hero.StoryJournal.Stories.StoryStep? left, GuildWars2.Hero.StoryJournal.Stories.StoryStep? right) -> bool
static GuildWars2.Hero.StoryJournal.Stories.StoryStep.operator ==(GuildWars2.Hero.StoryJournal.Stories.StoryStep? left, GuildWars2.Hero.StoryJournal.Stories.StoryStep? right) -> bool
static GuildWars2.Hero.Training.CharacterTraining.operator !=(GuildWars2.Hero.Training.CharacterTraining? left, GuildWars2.Hero.Training.CharacterTraining? right) -> bool
static GuildWars2.Hero.Training.CharacterTraining.operator ==(GuildWars2.Hero.Training.CharacterTraining? left, GuildWars2.Hero.Training.CharacterTraining? right) -> bool
static GuildWars2.Hero.Training.Objectives.SkillObjective.operator !=(GuildWars2.Hero.Training.Objectives.SkillObjective? left, GuildWars2.Hero.Training.Objectives.SkillObjective? right) -> bool
static GuildWars2.Hero.Training.Objectives.SkillObjective.operator ==(GuildWars2.Hero.Training.Objectives.SkillObjective? left, GuildWars2.Hero.Training.Objectives.SkillObjective? right) -> bool
static GuildWars2.Hero.Training.Objectives.TraitObjective.operator !=(GuildWars2.Hero.Training.Objectives.TraitObjective? left, GuildWars2.Hero.Training.Objectives.TraitObjective? right) -> bool
static GuildWars2.Hero.Training.Objectives.TraitObjective.operator ==(GuildWars2.Hero.Training.Objectives.TraitObjective? left, GuildWars2.Hero.Training.Objectives.TraitObjective? right) -> bool
static GuildWars2.Hero.Training.Profession.operator !=(GuildWars2.Hero.Training.Profession? left, GuildWars2.Hero.Training.Profession? right) -> bool
static GuildWars2.Hero.Training.Profession.operator ==(GuildWars2.Hero.Training.Profession? left, GuildWars2.Hero.Training.Profession? right) -> bool
static GuildWars2.Hero.Training.ProfessionFlags.operator !=(GuildWars2.Hero.Training.ProfessionFlags? left, GuildWars2.Hero.Training.ProfessionFlags? right) -> bool
static GuildWars2.Hero.Training.ProfessionFlags.operator ==(GuildWars2.Hero.Training.ProfessionFlags? left, GuildWars2.Hero.Training.ProfessionFlags? right) -> bool
static GuildWars2.Hero.Training.Skills.EliteSkillSummary.operator !=(GuildWars2.Hero.Training.Skills.EliteSkillSummary? left, GuildWars2.Hero.Training.Skills.EliteSkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.EliteSkillSummary.operator ==(GuildWars2.Hero.Training.Skills.EliteSkillSummary? left, GuildWars2.Hero.Training.Skills.EliteSkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.HealingSkillSummary.operator !=(GuildWars2.Hero.Training.Skills.HealingSkillSummary? left, GuildWars2.Hero.Training.Skills.HealingSkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.HealingSkillSummary.operator ==(GuildWars2.Hero.Training.Skills.HealingSkillSummary? left, GuildWars2.Hero.Training.Skills.HealingSkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.operator !=(GuildWars2.Hero.Training.Skills.ProfessionSkillSummary? left, GuildWars2.Hero.Training.Skills.ProfessionSkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.ProfessionSkillSummary.operator ==(GuildWars2.Hero.Training.Skills.ProfessionSkillSummary? left, GuildWars2.Hero.Training.Skills.ProfessionSkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.UtilitySkillSummary.operator !=(GuildWars2.Hero.Training.Skills.UtilitySkillSummary? left, GuildWars2.Hero.Training.Skills.UtilitySkillSummary? right) -> bool
static GuildWars2.Hero.Training.Skills.UtilitySkillSummary.operator ==(GuildWars2.Hero.Training.Skills.UtilitySkillSummary? left, GuildWars2.Hero.Training.Skills.UtilitySkillSummary? right) -> bool
static GuildWars2.Hero.Training.SkillSummary.operator !=(GuildWars2.Hero.Training.SkillSummary? left, GuildWars2.Hero.Training.SkillSummary? right) -> bool
static GuildWars2.Hero.Training.SkillSummary.operator ==(GuildWars2.Hero.Training.SkillSummary? left, GuildWars2.Hero.Training.SkillSummary? right) -> bool
static GuildWars2.Hero.Training.Training.operator !=(GuildWars2.Hero.Training.Training? left, GuildWars2.Hero.Training.Training? right) -> bool
static GuildWars2.Hero.Training.Training.operator ==(GuildWars2.Hero.Training.Training? left, GuildWars2.Hero.Training.Training? right) -> bool
static GuildWars2.Hero.Training.TrainingObjective.operator !=(GuildWars2.Hero.Training.TrainingObjective? left, GuildWars2.Hero.Training.TrainingObjective? right) -> bool
static GuildWars2.Hero.Training.TrainingObjective.operator ==(GuildWars2.Hero.Training.TrainingObjective? left, GuildWars2.Hero.Training.TrainingObjective? right) -> bool
static GuildWars2.Hero.Training.TrainingProgress.operator !=(GuildWars2.Hero.Training.TrainingProgress? left, GuildWars2.Hero.Training.TrainingProgress? right) -> bool
static GuildWars2.Hero.Training.TrainingProgress.operator ==(GuildWars2.Hero.Training.TrainingProgress? left, GuildWars2.Hero.Training.TrainingProgress? right) -> bool
static GuildWars2.Hero.Training.WeaponFlags.operator !=(GuildWars2.Hero.Training.WeaponFlags? left, GuildWars2.Hero.Training.WeaponFlags? right) -> bool
static GuildWars2.Hero.Training.WeaponFlags.operator ==(GuildWars2.Hero.Training.WeaponFlags? left, GuildWars2.Hero.Training.WeaponFlags? right) -> bool
static GuildWars2.Hero.Training.WeaponProficiency.operator !=(GuildWars2.Hero.Training.WeaponProficiency? left, GuildWars2.Hero.Training.WeaponProficiency? right) -> bool
static GuildWars2.Hero.Training.WeaponProficiency.operator ==(GuildWars2.Hero.Training.WeaponProficiency? left, GuildWars2.Hero.Training.WeaponProficiency? right) -> bool
static GuildWars2.Hero.Training.WeaponSkill.operator !=(GuildWars2.Hero.Training.WeaponSkill? left, GuildWars2.Hero.Training.WeaponSkill? right) -> bool
static GuildWars2.Hero.Training.WeaponSkill.operator ==(GuildWars2.Hero.Training.WeaponSkill? left, GuildWars2.Hero.Training.WeaponSkill? right) -> bool
static GuildWars2.Hero.Wallet.Currency.operator !=(GuildWars2.Hero.Wallet.Currency? left, GuildWars2.Hero.Wallet.Currency? right) -> bool
static GuildWars2.Hero.Wallet.Currency.operator ==(GuildWars2.Hero.Wallet.Currency? left, GuildWars2.Hero.Wallet.Currency? right) -> bool
static GuildWars2.Hero.Wallet.CurrencyAmount.operator !=(GuildWars2.Hero.Wallet.CurrencyAmount? left, GuildWars2.Hero.Wallet.CurrencyAmount? right) -> bool
static GuildWars2.Hero.Wallet.CurrencyAmount.operator ==(GuildWars2.Hero.Wallet.CurrencyAmount? left, GuildWars2.Hero.Wallet.CurrencyAmount? right) -> bool
static GuildWars2.Http.WebLinks.LinkHeader.Parse(string! input) -> GuildWars2.Http.WebLinks.LinkHeader!
static GuildWars2.Hyperlink.operator !=(GuildWars2.Hyperlink left, GuildWars2.Hyperlink right) -> bool
static GuildWars2.Hyperlink.operator ==(GuildWars2.Hyperlink left, GuildWars2.Hyperlink right) -> bool
static GuildWars2.Items.Accessory.operator !=(GuildWars2.Items.Accessory? left, GuildWars2.Items.Accessory? right) -> bool
static GuildWars2.Items.Accessory.operator ==(GuildWars2.Items.Accessory? left, GuildWars2.Items.Accessory? right) -> bool
static GuildWars2.Items.Amulet.operator !=(GuildWars2.Items.Amulet? left, GuildWars2.Items.Amulet? right) -> bool
static GuildWars2.Items.Amulet.operator ==(GuildWars2.Items.Amulet? left, GuildWars2.Items.Amulet? right) -> bool
static GuildWars2.Items.AppearanceChanger.operator !=(GuildWars2.Items.AppearanceChanger? left, GuildWars2.Items.AppearanceChanger? right) -> bool
static GuildWars2.Items.AppearanceChanger.operator ==(GuildWars2.Items.AppearanceChanger? left, GuildWars2.Items.AppearanceChanger? right) -> bool
static GuildWars2.Items.Armor.operator !=(GuildWars2.Items.Armor? left, GuildWars2.Items.Armor? right) -> bool
static GuildWars2.Items.Armor.operator ==(GuildWars2.Items.Armor? left, GuildWars2.Items.Armor? right) -> bool
static GuildWars2.Items.Axe.operator !=(GuildWars2.Items.Axe? left, GuildWars2.Items.Axe? right) -> bool
static GuildWars2.Items.Axe.operator ==(GuildWars2.Items.Axe? left, GuildWars2.Items.Axe? right) -> bool
static GuildWars2.Items.Backpack.operator !=(GuildWars2.Items.Backpack? left, GuildWars2.Items.Backpack? right) -> bool
static GuildWars2.Items.Backpack.operator ==(GuildWars2.Items.Backpack? left, GuildWars2.Items.Backpack? right) -> bool
static GuildWars2.Items.Bag.operator !=(GuildWars2.Items.Bag? left, GuildWars2.Items.Bag? right) -> bool
static GuildWars2.Items.Bag.operator ==(GuildWars2.Items.Bag? left, GuildWars2.Items.Bag? right) -> bool
static GuildWars2.Items.BagSlotExpansion.operator !=(GuildWars2.Items.BagSlotExpansion? left, GuildWars2.Items.BagSlotExpansion? right) -> bool
static GuildWars2.Items.BagSlotExpansion.operator ==(GuildWars2.Items.BagSlotExpansion? left, GuildWars2.Items.BagSlotExpansion? right) -> bool
static GuildWars2.Items.Bait.operator !=(GuildWars2.Items.Bait? left, GuildWars2.Items.Bait? right) -> bool
static GuildWars2.Items.Bait.operator ==(GuildWars2.Items.Bait? left, GuildWars2.Items.Bait? right) -> bool
static GuildWars2.Items.BankTabExpansion.operator !=(GuildWars2.Items.BankTabExpansion? left, GuildWars2.Items.BankTabExpansion? right) -> bool
static GuildWars2.Items.BankTabExpansion.operator ==(GuildWars2.Items.BankTabExpansion? left, GuildWars2.Items.BankTabExpansion? right) -> bool
static GuildWars2.Items.BlackLionChest.operator !=(GuildWars2.Items.BlackLionChest? left, GuildWars2.Items.BlackLionChest? right) -> bool
static GuildWars2.Items.BlackLionChest.operator ==(GuildWars2.Items.BlackLionChest? left, GuildWars2.Items.BlackLionChest? right) -> bool
static GuildWars2.Items.BlackLionChestKey.operator !=(GuildWars2.Items.BlackLionChestKey? left, GuildWars2.Items.BlackLionChestKey? right) -> bool
static GuildWars2.Items.BlackLionChestKey.operator ==(GuildWars2.Items.BlackLionChestKey? left, GuildWars2.Items.BlackLionChestKey? right) -> bool
static GuildWars2.Items.Boots.operator !=(GuildWars2.Items.Boots? left, GuildWars2.Items.Boots? right) -> bool
static GuildWars2.Items.Boots.operator ==(GuildWars2.Items.Boots? left, GuildWars2.Items.Boots? right) -> bool
static GuildWars2.Items.Booze.operator !=(GuildWars2.Items.Booze? left, GuildWars2.Items.Booze? right) -> bool
static GuildWars2.Items.Booze.operator ==(GuildWars2.Items.Booze? left, GuildWars2.Items.Booze? right) -> bool
static GuildWars2.Items.Buff.operator !=(GuildWars2.Items.Buff? left, GuildWars2.Items.Buff? right) -> bool
static GuildWars2.Items.Buff.operator ==(GuildWars2.Items.Buff? left, GuildWars2.Items.Buff? right) -> bool
static GuildWars2.Items.BuildStorageExpansion.operator !=(GuildWars2.Items.BuildStorageExpansion? left, GuildWars2.Items.BuildStorageExpansion? right) -> bool
static GuildWars2.Items.BuildStorageExpansion.operator ==(GuildWars2.Items.BuildStorageExpansion? left, GuildWars2.Items.BuildStorageExpansion? right) -> bool
static GuildWars2.Items.BuildTemplateExpansion.operator !=(GuildWars2.Items.BuildTemplateExpansion? left, GuildWars2.Items.BuildTemplateExpansion? right) -> bool
static GuildWars2.Items.BuildTemplateExpansion.operator ==(GuildWars2.Items.BuildTemplateExpansion? left, GuildWars2.Items.BuildTemplateExpansion? right) -> bool
static GuildWars2.Items.Coat.operator !=(GuildWars2.Items.Coat? left, GuildWars2.Items.Coat? right) -> bool
static GuildWars2.Items.Coat.operator ==(GuildWars2.Items.Coat? left, GuildWars2.Items.Coat? right) -> bool
static GuildWars2.Items.Consumable.operator !=(GuildWars2.Items.Consumable? left, GuildWars2.Items.Consumable? right) -> bool
static GuildWars2.Items.Consumable.operator ==(GuildWars2.Items.Consumable? left, GuildWars2.Items.Consumable? right) -> bool
static GuildWars2.Items.Container.operator !=(GuildWars2.Items.Container? left, GuildWars2.Items.Container? right) -> bool
static GuildWars2.Items.Container.operator ==(GuildWars2.Items.Container? left, GuildWars2.Items.Container? right) -> bool
static GuildWars2.Items.ContentUnlocker.operator !=(GuildWars2.Items.ContentUnlocker? left, GuildWars2.Items.ContentUnlocker? right) -> bool
static GuildWars2.Items.ContentUnlocker.operator ==(GuildWars2.Items.ContentUnlocker? left, GuildWars2.Items.ContentUnlocker? right) -> bool
static GuildWars2.Items.ContractNpc.operator !=(GuildWars2.Items.ContractNpc? left, GuildWars2.Items.ContractNpc? right) -> bool
static GuildWars2.Items.ContractNpc.operator ==(GuildWars2.Items.ContractNpc? left, GuildWars2.Items.ContractNpc? right) -> bool
static GuildWars2.Items.CraftingMaterial.operator !=(GuildWars2.Items.CraftingMaterial? left, GuildWars2.Items.CraftingMaterial? right) -> bool
static GuildWars2.Items.CraftingMaterial.operator ==(GuildWars2.Items.CraftingMaterial? left, GuildWars2.Items.CraftingMaterial? right) -> bool
static GuildWars2.Items.Currency.operator !=(GuildWars2.Items.Currency? left, GuildWars2.Items.Currency? right) -> bool
static GuildWars2.Items.Currency.operator ==(GuildWars2.Items.Currency? left, GuildWars2.Items.Currency? right) -> bool
static GuildWars2.Items.Dagger.operator !=(GuildWars2.Items.Dagger? left, GuildWars2.Items.Dagger? right) -> bool
static GuildWars2.Items.Dagger.operator ==(GuildWars2.Items.Dagger? left, GuildWars2.Items.Dagger? right) -> bool
static GuildWars2.Items.Dye.operator !=(GuildWars2.Items.Dye? left, GuildWars2.Items.Dye? right) -> bool
static GuildWars2.Items.Dye.operator ==(GuildWars2.Items.Dye? left, GuildWars2.Items.Dye? right) -> bool
static GuildWars2.Items.Effect.operator !=(GuildWars2.Items.Effect? left, GuildWars2.Items.Effect? right) -> bool
static GuildWars2.Items.Effect.operator ==(GuildWars2.Items.Effect? left, GuildWars2.Items.Effect? right) -> bool
static GuildWars2.Items.EquipmentTemplateExpansion.operator !=(GuildWars2.Items.EquipmentTemplateExpansion? left, GuildWars2.Items.EquipmentTemplateExpansion? right) -> bool
static GuildWars2.Items.EquipmentTemplateExpansion.operator ==(GuildWars2.Items.EquipmentTemplateExpansion? left, GuildWars2.Items.EquipmentTemplateExpansion? right) -> bool
static GuildWars2.Items.FishingRod.operator !=(GuildWars2.Items.FishingRod? left, GuildWars2.Items.FishingRod? right) -> bool
static GuildWars2.Items.FishingRod.operator ==(GuildWars2.Items.FishingRod? left, GuildWars2.Items.FishingRod? right) -> bool
static GuildWars2.Items.Focus.operator !=(GuildWars2.Items.Focus? left, GuildWars2.Items.Focus? right) -> bool
static GuildWars2.Items.Focus.operator ==(GuildWars2.Items.Focus? left, GuildWars2.Items.Focus? right) -> bool
static GuildWars2.Items.Food.operator !=(GuildWars2.Items.Food? left, GuildWars2.Items.Food? right) -> bool
static GuildWars2.Items.Food.operator ==(GuildWars2.Items.Food? left, GuildWars2.Items.Food? right) -> bool
static GuildWars2.Items.GatheringTool.operator !=(GuildWars2.Items.GatheringTool? left, GuildWars2.Items.GatheringTool? right) -> bool
static GuildWars2.Items.GatheringTool.operator ==(GuildWars2.Items.GatheringTool? left, GuildWars2.Items.GatheringTool? right) -> bool
static GuildWars2.Items.Gem.operator !=(GuildWars2.Items.Gem? left, GuildWars2.Items.Gem? right) -> bool
static GuildWars2.Items.Gem.operator ==(GuildWars2.Items.Gem? left, GuildWars2.Items.Gem? right) -> bool
static GuildWars2.Items.GenericConsumable.operator !=(GuildWars2.Items.GenericConsumable? left, GuildWars2.Items.GenericConsumable? right) -> bool
static GuildWars2.Items.GenericConsumable.operator ==(GuildWars2.Items.GenericConsumable? left, GuildWars2.Items.GenericConsumable? right) -> bool
static GuildWars2.Items.GiftBox.operator !=(GuildWars2.Items.GiftBox? left, GuildWars2.Items.GiftBox? right) -> bool
static GuildWars2.Items.GiftBox.operator ==(GuildWars2.Items.GiftBox? left, GuildWars2.Items.GiftBox? right) -> bool
static GuildWars2.Items.Gizmo.operator !=(GuildWars2.Items.Gizmo? left, GuildWars2.Items.Gizmo? right) -> bool
static GuildWars2.Items.Gizmo.operator ==(GuildWars2.Items.Gizmo? left, GuildWars2.Items.Gizmo? right) -> bool
static GuildWars2.Items.GliderSkinUnlocker.operator !=(GuildWars2.Items.GliderSkinUnlocker? left, GuildWars2.Items.GliderSkinUnlocker? right) -> bool
static GuildWars2.Items.GliderSkinUnlocker.operator ==(GuildWars2.Items.GliderSkinUnlocker? left, GuildWars2.Items.GliderSkinUnlocker? right) -> bool
static GuildWars2.Items.Gloves.operator !=(GuildWars2.Items.Gloves? left, GuildWars2.Items.Gloves? right) -> bool
static GuildWars2.Items.Gloves.operator ==(GuildWars2.Items.Gloves? left, GuildWars2.Items.Gloves? right) -> bool
static GuildWars2.Items.Greatsword.operator !=(GuildWars2.Items.Greatsword? left, GuildWars2.Items.Greatsword? right) -> bool
static GuildWars2.Items.Greatsword.operator ==(GuildWars2.Items.Greatsword? left, GuildWars2.Items.Greatsword? right) -> bool
static GuildWars2.Items.HalloweenConsumable.operator !=(GuildWars2.Items.HalloweenConsumable? left, GuildWars2.Items.HalloweenConsumable? right) -> bool
static GuildWars2.Items.HalloweenConsumable.operator ==(GuildWars2.Items.HalloweenConsumable? left, GuildWars2.Items.HalloweenConsumable? right) -> bool
static GuildWars2.Items.Hammer.operator !=(GuildWars2.Items.Hammer? left, GuildWars2.Items.Hammer? right) -> bool
static GuildWars2.Items.Hammer.operator ==(GuildWars2.Items.Hammer? left, GuildWars2.Items.Hammer? right) -> bool
static GuildWars2.Items.HarpoonGun.operator !=(GuildWars2.Items.HarpoonGun? left, GuildWars2.Items.HarpoonGun? right) -> bool
static GuildWars2.Items.HarpoonGun.operator ==(GuildWars2.Items.HarpoonGun? left, GuildWars2.Items.HarpoonGun? right) -> bool
static GuildWars2.Items.HarvestingSickle.operator !=(GuildWars2.Items.HarvestingSickle? left, GuildWars2.Items.HarvestingSickle? right) -> bool
static GuildWars2.Items.HarvestingSickle.operator ==(GuildWars2.Items.HarvestingSickle? left, GuildWars2.Items.HarvestingSickle? right) -> bool
static GuildWars2.Items.Helm.operator !=(GuildWars2.Items.Helm? left, GuildWars2.Items.Helm? right) -> bool
static GuildWars2.Items.Helm.operator ==(GuildWars2.Items.Helm? left, GuildWars2.Items.Helm? right) -> bool
static GuildWars2.Items.HelmAquatic.operator !=(GuildWars2.Items.HelmAquatic? left, GuildWars2.Items.HelmAquatic? right) -> bool
static GuildWars2.Items.HelmAquatic.operator ==(GuildWars2.Items.HelmAquatic? left, GuildWars2.Items.HelmAquatic? right) -> bool
static GuildWars2.Items.ImmediateContainer.operator !=(GuildWars2.Items.ImmediateContainer? left, GuildWars2.Items.ImmediateContainer? right) -> bool
static GuildWars2.Items.ImmediateContainer.operator ==(GuildWars2.Items.ImmediateContainer? left, GuildWars2.Items.ImmediateContainer? right) -> bool
static GuildWars2.Items.InfusionSlot.operator !=(GuildWars2.Items.InfusionSlot? left, GuildWars2.Items.InfusionSlot? right) -> bool
static GuildWars2.Items.InfusionSlot.operator ==(GuildWars2.Items.InfusionSlot? left, GuildWars2.Items.InfusionSlot? right) -> bool
static GuildWars2.Items.InfusionSlotFlags.operator !=(GuildWars2.Items.InfusionSlotFlags? left, GuildWars2.Items.InfusionSlotFlags? right) -> bool
static GuildWars2.Items.InfusionSlotFlags.operator ==(GuildWars2.Items.InfusionSlotFlags? left, GuildWars2.Items.InfusionSlotFlags? right) -> bool
static GuildWars2.Items.InfusionSlotUpgradePath.operator !=(GuildWars2.Items.InfusionSlotUpgradePath? left, GuildWars2.Items.InfusionSlotUpgradePath? right) -> bool
static GuildWars2.Items.InfusionSlotUpgradePath.operator ==(GuildWars2.Items.InfusionSlotUpgradePath? left, GuildWars2.Items.InfusionSlotUpgradePath? right) -> bool
static GuildWars2.Items.InfusionSlotUpgradeSource.operator !=(GuildWars2.Items.InfusionSlotUpgradeSource? left, GuildWars2.Items.InfusionSlotUpgradeSource? right) -> bool
static GuildWars2.Items.InfusionSlotUpgradeSource.operator ==(GuildWars2.Items.InfusionSlotUpgradeSource? left, GuildWars2.Items.InfusionSlotUpgradeSource? right) -> bool
static GuildWars2.Items.Item.operator !=(GuildWars2.Items.Item? left, GuildWars2.Items.Item? right) -> bool
static GuildWars2.Items.Item.operator ==(GuildWars2.Items.Item? left, GuildWars2.Items.Item? right) -> bool
static GuildWars2.Items.ItemFlags.operator !=(GuildWars2.Items.ItemFlags? left, GuildWars2.Items.ItemFlags? right) -> bool
static GuildWars2.Items.ItemFlags.operator ==(GuildWars2.Items.ItemFlags? left, GuildWars2.Items.ItemFlags? right) -> bool
static GuildWars2.Items.ItemRestriction.operator !=(GuildWars2.Items.ItemRestriction? left, GuildWars2.Items.ItemRestriction? right) -> bool
static GuildWars2.Items.ItemRestriction.operator ==(GuildWars2.Items.ItemRestriction? left, GuildWars2.Items.ItemRestriction? right) -> bool
static GuildWars2.Items.JadeBotSkinUnlocker.operator !=(GuildWars2.Items.JadeBotSkinUnlocker? left, GuildWars2.Items.JadeBotSkinUnlocker? right) -> bool
static GuildWars2.Items.JadeBotSkinUnlocker.operator ==(GuildWars2.Items.JadeBotSkinUnlocker? left, GuildWars2.Items.JadeBotSkinUnlocker? right) -> bool
static GuildWars2.Items.JadeTechModule.operator !=(GuildWars2.Items.JadeTechModule? left, GuildWars2.Items.JadeTechModule? right) -> bool
static GuildWars2.Items.JadeTechModule.operator ==(GuildWars2.Items.JadeTechModule? left, GuildWars2.Items.JadeTechModule? right) -> bool
static GuildWars2.Items.LargeBundle.operator !=(GuildWars2.Items.LargeBundle? left, GuildWars2.Items.LargeBundle? right) -> bool
static GuildWars2.Items.LargeBundle.operator ==(GuildWars2.Items.LargeBundle? left, GuildWars2.Items.LargeBundle? right) -> bool
static GuildWars2.Items.Leggings.operator !=(GuildWars2.Items.Leggings? left, GuildWars2.Items.Leggings? right) -> bool
static GuildWars2.Items.Leggings.operator ==(GuildWars2.Items.Leggings? left, GuildWars2.Items.Leggings? right) -> bool
static GuildWars2.Items.LoggingAxe.operator !=(GuildWars2.Items.LoggingAxe? left, GuildWars2.Items.LoggingAxe? right) -> bool
static GuildWars2.Items.LoggingAxe.operator ==(GuildWars2.Items.LoggingAxe? left, GuildWars2.Items.LoggingAxe? right) -> bool
static GuildWars2.Items.Longbow.operator !=(GuildWars2.Items.Longbow? left, GuildWars2.Items.Longbow? right) -> bool
static GuildWars2.Items.Longbow.operator ==(GuildWars2.Items.Longbow? left, GuildWars2.Items.Longbow? right) -> bool
static GuildWars2.Items.Lure.operator !=(GuildWars2.Items.Lure? left, GuildWars2.Items.Lure? right) -> bool
static GuildWars2.Items.Lure.operator ==(GuildWars2.Items.Lure? left, GuildWars2.Items.Lure? right) -> bool
static GuildWars2.Items.Mace.operator !=(GuildWars2.Items.Mace? left, GuildWars2.Items.Mace? right) -> bool
static GuildWars2.Items.Mace.operator ==(GuildWars2.Items.Mace? left, GuildWars2.Items.Mace? right) -> bool
static GuildWars2.Items.Miniature.operator !=(GuildWars2.Items.Miniature? left, GuildWars2.Items.Miniature? right) -> bool
static GuildWars2.Items.Miniature.operator ==(GuildWars2.Items.Miniature? left, GuildWars2.Items.Miniature? right) -> bool
static GuildWars2.Items.MiniatureUnlocker.operator !=(GuildWars2.Items.MiniatureUnlocker? left, GuildWars2.Items.MiniatureUnlocker? right) -> bool
static GuildWars2.Items.MiniatureUnlocker.operator ==(GuildWars2.Items.MiniatureUnlocker? left, GuildWars2.Items.MiniatureUnlocker? right) -> bool
static GuildWars2.Items.MiningPick.operator !=(GuildWars2.Items.MiningPick? left, GuildWars2.Items.MiningPick? right) -> bool
static GuildWars2.Items.MiningPick.operator ==(GuildWars2.Items.MiningPick? left, GuildWars2.Items.MiningPick? right) -> bool
static GuildWars2.Items.MistChampionSkinUnlocker.operator !=(GuildWars2.Items.MistChampionSkinUnlocker? left, GuildWars2.Items.MistChampionSkinUnlocker? right) -> bool
static GuildWars2.Items.MistChampionSkinUnlocker.operator ==(GuildWars2.Items.MistChampionSkinUnlocker? left, GuildWars2.Items.MistChampionSkinUnlocker? right) -> bool
static GuildWars2.Items.MountLicense.operator !=(GuildWars2.Items.MountLicense? left, GuildWars2.Items.MountLicense? right) -> bool
static GuildWars2.Items.MountLicense.operator ==(GuildWars2.Items.MountLicense? left, GuildWars2.Items.MountLicense? right) -> bool
static GuildWars2.Items.MountSkinUnlocker.operator !=(GuildWars2.Items.MountSkinUnlocker? left, GuildWars2.Items.MountSkinUnlocker? right) -> bool
static GuildWars2.Items.MountSkinUnlocker.operator ==(GuildWars2.Items.MountSkinUnlocker? left, GuildWars2.Items.MountSkinUnlocker? right) -> bool
static GuildWars2.Items.OutfitUnlocker.operator !=(GuildWars2.Items.OutfitUnlocker? left, GuildWars2.Items.OutfitUnlocker? right) -> bool
static GuildWars2.Items.OutfitUnlocker.operator ==(GuildWars2.Items.OutfitUnlocker? left, GuildWars2.Items.OutfitUnlocker? right) -> bool
static GuildWars2.Items.Pistol.operator !=(GuildWars2.Items.Pistol? left, GuildWars2.Items.Pistol? right) -> bool
static GuildWars2.Items.Pistol.operator ==(GuildWars2.Items.Pistol? left, GuildWars2.Items.Pistol? right) -> bool
static GuildWars2.Items.PowerCore.operator !=(GuildWars2.Items.PowerCore? left, GuildWars2.Items.PowerCore? right) -> bool
static GuildWars2.Items.PowerCore.operator ==(GuildWars2.Items.PowerCore? left, GuildWars2.Items.PowerCore? right) -> bool
static GuildWars2.Items.RandomUnlocker.operator !=(GuildWars2.Items.RandomUnlocker? left, GuildWars2.Items.RandomUnlocker? right) -> bool
static GuildWars2.Items.RandomUnlocker.operator ==(GuildWars2.Items.RandomUnlocker? left, GuildWars2.Items.RandomUnlocker? right) -> bool
static GuildWars2.Items.RecipeSheet.operator !=(GuildWars2.Items.RecipeSheet? left, GuildWars2.Items.RecipeSheet? right) -> bool
static GuildWars2.Items.RecipeSheet.operator ==(GuildWars2.Items.RecipeSheet? left, GuildWars2.Items.RecipeSheet? right) -> bool
static GuildWars2.Items.Relic.operator !=(GuildWars2.Items.Relic? left, GuildWars2.Items.Relic? right) -> bool
static GuildWars2.Items.Relic.operator ==(GuildWars2.Items.Relic? left, GuildWars2.Items.Relic? right) -> bool
static GuildWars2.Items.RentableContractNpc.operator !=(GuildWars2.Items.RentableContractNpc? left, GuildWars2.Items.RentableContractNpc? right) -> bool
static GuildWars2.Items.RentableContractNpc.operator ==(GuildWars2.Items.RentableContractNpc? left, GuildWars2.Items.RentableContractNpc? right) -> bool
static GuildWars2.Items.Rifle.operator !=(GuildWars2.Items.Rifle? left, GuildWars2.Items.Rifle? right) -> bool
static GuildWars2.Items.Rifle.operator ==(GuildWars2.Items.Rifle? left, GuildWars2.Items.Rifle? right) -> bool
static GuildWars2.Items.Ring.operator !=(GuildWars2.Items.Ring? left, GuildWars2.Items.Ring? right) -> bool
static GuildWars2.Items.Ring.operator ==(GuildWars2.Items.Ring? left, GuildWars2.Items.Ring? right) -> bool
static GuildWars2.Items.Rune.operator !=(GuildWars2.Items.Rune? left, GuildWars2.Items.Rune? right) -> bool
static GuildWars2.Items.Rune.operator ==(GuildWars2.Items.Rune? left, GuildWars2.Items.Rune? right) -> bool
static GuildWars2.Items.SalvageTool.operator !=(GuildWars2.Items.SalvageTool? left, GuildWars2.Items.SalvageTool? right) -> bool
static GuildWars2.Items.SalvageTool.operator ==(GuildWars2.Items.SalvageTool? left, GuildWars2.Items.SalvageTool? right) -> bool
static GuildWars2.Items.Scepter.operator !=(GuildWars2.Items.Scepter? left, GuildWars2.Items.Scepter? right) -> bool
static GuildWars2.Items.Scepter.operator ==(GuildWars2.Items.Scepter? left, GuildWars2.Items.Scepter? right) -> bool
static GuildWars2.Items.Service.operator !=(GuildWars2.Items.Service? left, GuildWars2.Items.Service? right) -> bool
static GuildWars2.Items.Service.operator ==(GuildWars2.Items.Service? left, GuildWars2.Items.Service? right) -> bool
static GuildWars2.Items.SharedInventorySlot.operator !=(GuildWars2.Items.SharedInventorySlot? left, GuildWars2.Items.SharedInventorySlot? right) -> bool
static GuildWars2.Items.SharedInventorySlot.operator ==(GuildWars2.Items.SharedInventorySlot? left, GuildWars2.Items.SharedInventorySlot? right) -> bool
static GuildWars2.Items.Shield.operator !=(GuildWars2.Items.Shield? left, GuildWars2.Items.Shield? right) -> bool
static GuildWars2.Items.Shield.operator ==(GuildWars2.Items.Shield? left, GuildWars2.Items.Shield? right) -> bool
static GuildWars2.Items.Shortbow.operator !=(GuildWars2.Items.Shortbow? left, GuildWars2.Items.Shortbow? right) -> bool
static GuildWars2.Items.Shortbow.operator ==(GuildWars2.Items.Shortbow? left, GuildWars2.Items.Shortbow? right) -> bool
static GuildWars2.Items.Shoulders.operator !=(GuildWars2.Items.Shoulders? left, GuildWars2.Items.Shoulders? right) -> bool
static GuildWars2.Items.Shoulders.operator ==(GuildWars2.Items.Shoulders? left, GuildWars2.Items.Shoulders? right) -> bool
static GuildWars2.Items.Sigil.operator !=(GuildWars2.Items.Sigil? left, GuildWars2.Items.Sigil? right) -> bool
static GuildWars2.Items.Sigil.operator ==(GuildWars2.Items.Sigil? left, GuildWars2.Items.Sigil? right) -> bool
static GuildWars2.Items.SmallBundle.operator !=(GuildWars2.Items.SmallBundle? left, GuildWars2.Items.SmallBundle? right) -> bool
static GuildWars2.Items.SmallBundle.operator ==(GuildWars2.Items.SmallBundle? left, GuildWars2.Items.SmallBundle? right) -> bool
static GuildWars2.Items.Spear.operator !=(GuildWars2.Items.Spear? left, GuildWars2.Items.Spear? right) -> bool
static GuildWars2.Items.Spear.operator ==(GuildWars2.Items.Spear? left, GuildWars2.Items.Spear? right) -> bool
static GuildWars2.Items.Staff.operator !=(GuildWars2.Items.Staff? left, GuildWars2.Items.Staff? right) -> bool
static GuildWars2.Items.Staff.operator ==(GuildWars2.Items.Staff? left, GuildWars2.Items.Staff? right) -> bool
static GuildWars2.Items.Stats.Attribute.operator !=(GuildWars2.Items.Stats.Attribute? left, GuildWars2.Items.Stats.Attribute? right) -> bool
static GuildWars2.Items.Stats.Attribute.operator ==(GuildWars2.Items.Stats.Attribute? left, GuildWars2.Items.Stats.Attribute? right) -> bool
static GuildWars2.Items.Stats.AttributeCombination.operator !=(GuildWars2.Items.Stats.AttributeCombination? left, GuildWars2.Items.Stats.AttributeCombination? right) -> bool
static GuildWars2.Items.Stats.AttributeCombination.operator ==(GuildWars2.Items.Stats.AttributeCombination? left, GuildWars2.Items.Stats.AttributeCombination? right) -> bool
static GuildWars2.Items.StorageExpander.operator !=(GuildWars2.Items.StorageExpander? left, GuildWars2.Items.StorageExpander? right) -> bool
static GuildWars2.Items.StorageExpander.operator ==(GuildWars2.Items.StorageExpander? left, GuildWars2.Items.StorageExpander? right) -> bool
static GuildWars2.Items.Sword.operator !=(GuildWars2.Items.Sword? left, GuildWars2.Items.Sword? right) -> bool
static GuildWars2.Items.Sword.operator ==(GuildWars2.Items.Sword? left, GuildWars2.Items.Sword? right) -> bool
static GuildWars2.Items.TeleportToFriend.operator !=(GuildWars2.Items.TeleportToFriend? left, GuildWars2.Items.TeleportToFriend? right) -> bool
static GuildWars2.Items.TeleportToFriend.operator ==(GuildWars2.Items.TeleportToFriend? left, GuildWars2.Items.TeleportToFriend? right) -> bool
static GuildWars2.Items.Torch.operator !=(GuildWars2.Items.Torch? left, GuildWars2.Items.Torch? right) -> bool
static GuildWars2.Items.Torch.operator ==(GuildWars2.Items.Torch? left, GuildWars2.Items.Torch? right) -> bool
static GuildWars2.Items.Toy.operator !=(GuildWars2.Items.Toy? left, GuildWars2.Items.Toy? right) -> bool
static GuildWars2.Items.Toy.operator ==(GuildWars2.Items.Toy? left, GuildWars2.Items.Toy? right) -> bool
static GuildWars2.Items.ToyTwoHanded.operator !=(GuildWars2.Items.ToyTwoHanded? left, GuildWars2.Items.ToyTwoHanded? right) -> bool
static GuildWars2.Items.ToyTwoHanded.operator ==(GuildWars2.Items.ToyTwoHanded? left, GuildWars2.Items.ToyTwoHanded? right) -> bool
static GuildWars2.Items.Transmutation.operator !=(GuildWars2.Items.Transmutation? left, GuildWars2.Items.Transmutation? right) -> bool
static GuildWars2.Items.Transmutation.operator ==(GuildWars2.Items.Transmutation? left, GuildWars2.Items.Transmutation? right) -> bool
static GuildWars2.Items.Trident.operator !=(GuildWars2.Items.Trident? left, GuildWars2.Items.Trident? right) -> bool
static GuildWars2.Items.Trident.operator ==(GuildWars2.Items.Trident? left, GuildWars2.Items.Trident? right) -> bool
static GuildWars2.Items.Trinket.operator !=(GuildWars2.Items.Trinket? left, GuildWars2.Items.Trinket? right) -> bool
static GuildWars2.Items.Trinket.operator ==(GuildWars2.Items.Trinket? left, GuildWars2.Items.Trinket? right) -> bool
static GuildWars2.Items.Trophy.operator !=(GuildWars2.Items.Trophy? left, GuildWars2.Items.Trophy? right) -> bool
static GuildWars2.Items.Trophy.operator ==(GuildWars2.Items.Trophy? left, GuildWars2.Items.Trophy? right) -> bool
static GuildWars2.Items.UnlimitedConsumable.operator !=(GuildWars2.Items.UnlimitedConsumable? left, GuildWars2.Items.UnlimitedConsumable? right) -> bool
static GuildWars2.Items.UnlimitedConsumable.operator ==(GuildWars2.Items.UnlimitedConsumable? left, GuildWars2.Items.UnlimitedConsumable? right) -> bool
static GuildWars2.Items.Unlocker.operator !=(GuildWars2.Items.Unlocker? left, GuildWars2.Items.Unlocker? right) -> bool
static GuildWars2.Items.Unlocker.operator ==(GuildWars2.Items.Unlocker? left, GuildWars2.Items.Unlocker? right) -> bool
static GuildWars2.Items.UpgradeComponent.operator !=(GuildWars2.Items.UpgradeComponent? left, GuildWars2.Items.UpgradeComponent? right) -> bool
static GuildWars2.Items.UpgradeComponent.operator ==(GuildWars2.Items.UpgradeComponent? left, GuildWars2.Items.UpgradeComponent? right) -> bool
static GuildWars2.Items.UpgradeComponentFlags.operator !=(GuildWars2.Items.UpgradeComponentFlags? left, GuildWars2.Items.UpgradeComponentFlags? right) -> bool
static GuildWars2.Items.UpgradeComponentFlags.operator ==(GuildWars2.Items.UpgradeComponentFlags? left, GuildWars2.Items.UpgradeComponentFlags? right) -> bool
static GuildWars2.Items.UpgradeExtractor.operator !=(GuildWars2.Items.UpgradeExtractor? left, GuildWars2.Items.UpgradeExtractor? right) -> bool
static GuildWars2.Items.UpgradeExtractor.operator ==(GuildWars2.Items.UpgradeExtractor? left, GuildWars2.Items.UpgradeExtractor? right) -> bool
static GuildWars2.Items.Utility.operator !=(GuildWars2.Items.Utility? left, GuildWars2.Items.Utility? right) -> bool
static GuildWars2.Items.Utility.operator ==(GuildWars2.Items.Utility? left, GuildWars2.Items.Utility? right) -> bool
static GuildWars2.Items.Warhorn.operator !=(GuildWars2.Items.Warhorn? left, GuildWars2.Items.Warhorn? right) -> bool
static GuildWars2.Items.Warhorn.operator ==(GuildWars2.Items.Warhorn? left, GuildWars2.Items.Warhorn? right) -> bool
static GuildWars2.Items.Weapon.operator !=(GuildWars2.Items.Weapon? left, GuildWars2.Items.Weapon? right) -> bool
static GuildWars2.Items.Weapon.operator ==(GuildWars2.Items.Weapon? left, GuildWars2.Items.Weapon? right) -> bool
static GuildWars2.Language.CurrentUICulture.get -> GuildWars2.Language!
static GuildWars2.Link.operator !=(GuildWars2.Link? left, GuildWars2.Link? right) -> bool
static GuildWars2.Link.operator ==(GuildWars2.Link? left, GuildWars2.Link? right) -> bool
static GuildWars2.Logos.Logo.operator !=(GuildWars2.Logos.Logo? left, GuildWars2.Logos.Logo? right) -> bool
static GuildWars2.Logos.Logo.operator ==(GuildWars2.Logos.Logo? left, GuildWars2.Logos.Logo? right) -> bool
static GuildWars2.Markup.MarkupColorName.AbilityType.get -> string!
static GuildWars2.Markup.MarkupColorName.Flavor.get -> string!
static GuildWars2.Markup.MarkupColorName.IsDefined(string! colorName) -> bool
static GuildWars2.Markup.MarkupColorName.Reminder.get -> string!
static GuildWars2.Markup.MarkupColorName.Task.get -> string!
static GuildWars2.Markup.MarkupColorName.Warning.get -> string!
static GuildWars2.Markup.MarkupConverter.ToHtml(string! markup) -> string!
static GuildWars2.Markup.MarkupConverter.ToHtml(string! markup, System.Collections.Generic.IReadOnlyDictionary<string!, string!>! colorMap) -> string!
static GuildWars2.Markup.MarkupConverter.ToPlainText(string! markup) -> string!
static GuildWars2.Markup.MarkupToken.operator !=(GuildWars2.Markup.MarkupToken? left, GuildWars2.Markup.MarkupToken? right) -> bool
static GuildWars2.Markup.MarkupToken.operator ==(GuildWars2.Markup.MarkupToken? left, GuildWars2.Markup.MarkupToken? right) -> bool
static GuildWars2.MessageContext.operator !=(GuildWars2.MessageContext? left, GuildWars2.MessageContext? right) -> bool
static GuildWars2.MessageContext.operator ==(GuildWars2.MessageContext? left, GuildWars2.MessageContext? right) -> bool
static GuildWars2.Metadata.ApiVersion.operator !=(GuildWars2.Metadata.ApiVersion? left, GuildWars2.Metadata.ApiVersion? right) -> bool
static GuildWars2.Metadata.ApiVersion.operator ==(GuildWars2.Metadata.ApiVersion? left, GuildWars2.Metadata.ApiVersion? right) -> bool
static GuildWars2.Metadata.Build.operator !=(GuildWars2.Metadata.Build? left, GuildWars2.Metadata.Build? right) -> bool
static GuildWars2.Metadata.Build.operator ==(GuildWars2.Metadata.Build? left, GuildWars2.Metadata.Build? right) -> bool
static GuildWars2.Metadata.Route.operator !=(GuildWars2.Metadata.Route? left, GuildWars2.Metadata.Route? right) -> bool
static GuildWars2.Metadata.Route.operator ==(GuildWars2.Metadata.Route? left, GuildWars2.Metadata.Route? right) -> bool
static GuildWars2.Metadata.Schema.operator !=(GuildWars2.Metadata.Schema? left, GuildWars2.Metadata.Schema? right) -> bool
static GuildWars2.Metadata.Schema.operator ==(GuildWars2.Metadata.Schema? left, GuildWars2.Metadata.Schema? right) -> bool
static GuildWars2.Mumble.Context.operator !=(GuildWars2.Mumble.Context left, GuildWars2.Mumble.Context right) -> bool
static GuildWars2.Mumble.Context.operator ==(GuildWars2.Mumble.Context left, GuildWars2.Mumble.Context right) -> bool
static GuildWars2.Mumble.GameTick.operator !=(GuildWars2.Mumble.GameTick left, GuildWars2.Mumble.GameTick right) -> bool
static GuildWars2.Mumble.GameTick.operator ==(GuildWars2.Mumble.GameTick left, GuildWars2.Mumble.GameTick right) -> bool
static GuildWars2.Mumble.Identity.operator !=(GuildWars2.Mumble.Identity? left, GuildWars2.Mumble.Identity? right) -> bool
static GuildWars2.Mumble.Identity.operator ==(GuildWars2.Mumble.Identity? left, GuildWars2.Mumble.Identity? right) -> bool
static GuildWars2.Pve.Dungeons.Dungeon.operator !=(GuildWars2.Pve.Dungeons.Dungeon? left, GuildWars2.Pve.Dungeons.Dungeon? right) -> bool
static GuildWars2.Pve.Dungeons.Dungeon.operator ==(GuildWars2.Pve.Dungeons.Dungeon? left, GuildWars2.Pve.Dungeons.Dungeon? right) -> bool
static GuildWars2.Pve.Dungeons.DungeonPath.operator !=(GuildWars2.Pve.Dungeons.DungeonPath? left, GuildWars2.Pve.Dungeons.DungeonPath? right) -> bool
static GuildWars2.Pve.Dungeons.DungeonPath.operator ==(GuildWars2.Pve.Dungeons.DungeonPath? left, GuildWars2.Pve.Dungeons.DungeonPath? right) -> bool
static GuildWars2.Pve.Home.Cats.Cat.operator !=(GuildWars2.Pve.Home.Cats.Cat? left, GuildWars2.Pve.Home.Cats.Cat? right) -> bool
static GuildWars2.Pve.Home.Cats.Cat.operator ==(GuildWars2.Pve.Home.Cats.Cat? left, GuildWars2.Pve.Home.Cats.Cat? right) -> bool
static GuildWars2.Pve.Home.Decorations.Decoration.operator !=(GuildWars2.Pve.Home.Decorations.Decoration? left, GuildWars2.Pve.Home.Decorations.Decoration? right) -> bool
static GuildWars2.Pve.Home.Decorations.Decoration.operator ==(GuildWars2.Pve.Home.Decorations.Decoration? left, GuildWars2.Pve.Home.Decorations.Decoration? right) -> bool
static GuildWars2.Pve.Home.Decorations.DecorationCategory.operator !=(GuildWars2.Pve.Home.Decorations.DecorationCategory? left, GuildWars2.Pve.Home.Decorations.DecorationCategory? right) -> bool
static GuildWars2.Pve.Home.Decorations.DecorationCategory.operator ==(GuildWars2.Pve.Home.Decorations.DecorationCategory? left, GuildWars2.Pve.Home.Decorations.DecorationCategory? right) -> bool
static GuildWars2.Pve.Home.Decorations.Glyph.operator !=(GuildWars2.Pve.Home.Decorations.Glyph? left, GuildWars2.Pve.Home.Decorations.Glyph? right) -> bool
static GuildWars2.Pve.Home.Decorations.Glyph.operator ==(GuildWars2.Pve.Home.Decorations.Glyph? left, GuildWars2.Pve.Home.Decorations.Glyph? right) -> bool
static GuildWars2.Pve.Home.Decorations.UnlockedDecoration.operator !=(GuildWars2.Pve.Home.Decorations.UnlockedDecoration? left, GuildWars2.Pve.Home.Decorations.UnlockedDecoration? right) -> bool
static GuildWars2.Pve.Home.Decorations.UnlockedDecoration.operator ==(GuildWars2.Pve.Home.Decorations.UnlockedDecoration? left, GuildWars2.Pve.Home.Decorations.UnlockedDecoration? right) -> bool
static GuildWars2.Pve.Home.Nodes.Node.operator !=(GuildWars2.Pve.Home.Nodes.Node? left, GuildWars2.Pve.Home.Nodes.Node? right) -> bool
static GuildWars2.Pve.Home.Nodes.Node.operator ==(GuildWars2.Pve.Home.Nodes.Node? left, GuildWars2.Pve.Home.Nodes.Node? right) -> bool
static GuildWars2.Pve.MapChests.MapChest.operator !=(GuildWars2.Pve.MapChests.MapChest? left, GuildWars2.Pve.MapChests.MapChest? right) -> bool
static GuildWars2.Pve.MapChests.MapChest.operator ==(GuildWars2.Pve.MapChests.MapChest? left, GuildWars2.Pve.MapChests.MapChest? right) -> bool
static GuildWars2.Pve.Pets.Pet.operator !=(GuildWars2.Pve.Pets.Pet? left, GuildWars2.Pve.Pets.Pet? right) -> bool
static GuildWars2.Pve.Pets.Pet.operator ==(GuildWars2.Pve.Pets.Pet? left, GuildWars2.Pve.Pets.Pet? right) -> bool
static GuildWars2.Pve.Pets.PetSkill.operator !=(GuildWars2.Pve.Pets.PetSkill? left, GuildWars2.Pve.Pets.PetSkill? right) -> bool
static GuildWars2.Pve.Pets.PetSkill.operator ==(GuildWars2.Pve.Pets.PetSkill? left, GuildWars2.Pve.Pets.PetSkill? right) -> bool
static GuildWars2.Pve.Raids.Encounter.operator !=(GuildWars2.Pve.Raids.Encounter? left, GuildWars2.Pve.Raids.Encounter? right) -> bool
static GuildWars2.Pve.Raids.Encounter.operator ==(GuildWars2.Pve.Raids.Encounter? left, GuildWars2.Pve.Raids.Encounter? right) -> bool
static GuildWars2.Pve.Raids.Raid.operator !=(GuildWars2.Pve.Raids.Raid? left, GuildWars2.Pve.Raids.Raid? right) -> bool
static GuildWars2.Pve.Raids.Raid.operator ==(GuildWars2.Pve.Raids.Raid? left, GuildWars2.Pve.Raids.Raid? right) -> bool
static GuildWars2.Pve.Raids.RaidWing.operator !=(GuildWars2.Pve.Raids.RaidWing? left, GuildWars2.Pve.Raids.RaidWing? right) -> bool
static GuildWars2.Pve.Raids.RaidWing.operator ==(GuildWars2.Pve.Raids.RaidWing? left, GuildWars2.Pve.Raids.RaidWing? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.operator !=(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress.operator ==(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxProgress? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.operator !=(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong.operator ==(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxSong? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.operator !=(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade.operator ==(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxUpgrade? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.operator !=(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone? right) -> bool
static GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone.operator ==(GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone? left, GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxZone? right) -> bool
static GuildWars2.Pvp.Amulets.Amulet.operator !=(GuildWars2.Pvp.Amulets.Amulet? left, GuildWars2.Pvp.Amulets.Amulet? right) -> bool
static GuildWars2.Pvp.Amulets.Amulet.operator ==(GuildWars2.Pvp.Amulets.Amulet? left, GuildWars2.Pvp.Amulets.Amulet? right) -> bool
static GuildWars2.Pvp.Games.Game.operator !=(GuildWars2.Pvp.Games.Game? left, GuildWars2.Pvp.Games.Game? right) -> bool
static GuildWars2.Pvp.Games.Game.operator ==(GuildWars2.Pvp.Games.Game? left, GuildWars2.Pvp.Games.Game? right) -> bool
static GuildWars2.Pvp.Games.Score.operator !=(GuildWars2.Pvp.Games.Score? left, GuildWars2.Pvp.Games.Score? right) -> bool
static GuildWars2.Pvp.Games.Score.operator ==(GuildWars2.Pvp.Games.Score? left, GuildWars2.Pvp.Games.Score? right) -> bool
static GuildWars2.Pvp.MistChampions.MistChampion.operator !=(GuildWars2.Pvp.MistChampions.MistChampion? left, GuildWars2.Pvp.MistChampions.MistChampion? right) -> bool
static GuildWars2.Pvp.MistChampions.MistChampion.operator ==(GuildWars2.Pvp.MistChampions.MistChampion? left, GuildWars2.Pvp.MistChampions.MistChampion? right) -> bool
static GuildWars2.Pvp.MistChampions.MistChampionSkin.operator !=(GuildWars2.Pvp.MistChampions.MistChampionSkin? left, GuildWars2.Pvp.MistChampions.MistChampionSkin? right) -> bool
static GuildWars2.Pvp.MistChampions.MistChampionSkin.operator ==(GuildWars2.Pvp.MistChampions.MistChampionSkin? left, GuildWars2.Pvp.MistChampions.MistChampionSkin? right) -> bool
static GuildWars2.Pvp.MistChampions.MistChampionStats.operator !=(GuildWars2.Pvp.MistChampions.MistChampionStats? left, GuildWars2.Pvp.MistChampions.MistChampionStats? right) -> bool
static GuildWars2.Pvp.MistChampions.MistChampionStats.operator ==(GuildWars2.Pvp.MistChampions.MistChampionStats? left, GuildWars2.Pvp.MistChampions.MistChampionStats? right) -> bool
static GuildWars2.Pvp.Ranks.Level.operator !=(GuildWars2.Pvp.Ranks.Level? left, GuildWars2.Pvp.Ranks.Level? right) -> bool
static GuildWars2.Pvp.Ranks.Level.operator ==(GuildWars2.Pvp.Ranks.Level? left, GuildWars2.Pvp.Ranks.Level? right) -> bool
static GuildWars2.Pvp.Ranks.Rank.operator !=(GuildWars2.Pvp.Ranks.Rank? left, GuildWars2.Pvp.Ranks.Rank? right) -> bool
static GuildWars2.Pvp.Ranks.Rank.operator ==(GuildWars2.Pvp.Ranks.Rank? left, GuildWars2.Pvp.Ranks.Rank? right) -> bool
static GuildWars2.Pvp.Seasons.Division.operator !=(GuildWars2.Pvp.Seasons.Division? left, GuildWars2.Pvp.Seasons.Division? right) -> bool
static GuildWars2.Pvp.Seasons.Division.operator ==(GuildWars2.Pvp.Seasons.Division? left, GuildWars2.Pvp.Seasons.Division? right) -> bool
static GuildWars2.Pvp.Seasons.DivisionFlags.operator !=(GuildWars2.Pvp.Seasons.DivisionFlags? left, GuildWars2.Pvp.Seasons.DivisionFlags? right) -> bool
static GuildWars2.Pvp.Seasons.DivisionFlags.operator ==(GuildWars2.Pvp.Seasons.DivisionFlags? left, GuildWars2.Pvp.Seasons.DivisionFlags? right) -> bool
static GuildWars2.Pvp.Seasons.DivisionTier.operator !=(GuildWars2.Pvp.Seasons.DivisionTier? left, GuildWars2.Pvp.Seasons.DivisionTier? right) -> bool
static GuildWars2.Pvp.Seasons.DivisionTier.operator ==(GuildWars2.Pvp.Seasons.DivisionTier? left, GuildWars2.Pvp.Seasons.DivisionTier? right) -> bool
static GuildWars2.Pvp.Seasons.Leaderboard.operator !=(GuildWars2.Pvp.Seasons.Leaderboard? left, GuildWars2.Pvp.Seasons.Leaderboard? right) -> bool
static GuildWars2.Pvp.Seasons.Leaderboard.operator ==(GuildWars2.Pvp.Seasons.Leaderboard? left, GuildWars2.Pvp.Seasons.Leaderboard? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardEntry.operator !=(GuildWars2.Pvp.Seasons.LeaderboardEntry? left, GuildWars2.Pvp.Seasons.LeaderboardEntry? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardEntry.operator ==(GuildWars2.Pvp.Seasons.LeaderboardEntry? left, GuildWars2.Pvp.Seasons.LeaderboardEntry? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardGroup.operator !=(GuildWars2.Pvp.Seasons.LeaderboardGroup? left, GuildWars2.Pvp.Seasons.LeaderboardGroup? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardGroup.operator ==(GuildWars2.Pvp.Seasons.LeaderboardGroup? left, GuildWars2.Pvp.Seasons.LeaderboardGroup? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardScoring.operator !=(GuildWars2.Pvp.Seasons.LeaderboardScoring? left, GuildWars2.Pvp.Seasons.LeaderboardScoring? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardScoring.operator ==(GuildWars2.Pvp.Seasons.LeaderboardScoring? left, GuildWars2.Pvp.Seasons.LeaderboardScoring? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardSetting.operator !=(GuildWars2.Pvp.Seasons.LeaderboardSetting? left, GuildWars2.Pvp.Seasons.LeaderboardSetting? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardSetting.operator ==(GuildWars2.Pvp.Seasons.LeaderboardSetting? left, GuildWars2.Pvp.Seasons.LeaderboardSetting? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardTier.operator !=(GuildWars2.Pvp.Seasons.LeaderboardTier? left, GuildWars2.Pvp.Seasons.LeaderboardTier? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardTier.operator ==(GuildWars2.Pvp.Seasons.LeaderboardTier? left, GuildWars2.Pvp.Seasons.LeaderboardTier? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardTierRange.operator !=(GuildWars2.Pvp.Seasons.LeaderboardTierRange? left, GuildWars2.Pvp.Seasons.LeaderboardTierRange? right) -> bool
static GuildWars2.Pvp.Seasons.LeaderboardTierRange.operator ==(GuildWars2.Pvp.Seasons.LeaderboardTierRange? left, GuildWars2.Pvp.Seasons.LeaderboardTierRange? right) -> bool
static GuildWars2.Pvp.Seasons.Score.operator !=(GuildWars2.Pvp.Seasons.Score? left, GuildWars2.Pvp.Seasons.Score? right) -> bool
static GuildWars2.Pvp.Seasons.Score.operator ==(GuildWars2.Pvp.Seasons.Score? left, GuildWars2.Pvp.Seasons.Score? right) -> bool
static GuildWars2.Pvp.Seasons.Season.operator !=(GuildWars2.Pvp.Seasons.Season? left, GuildWars2.Pvp.Seasons.Season? right) -> bool
static GuildWars2.Pvp.Seasons.Season.operator ==(GuildWars2.Pvp.Seasons.Season? left, GuildWars2.Pvp.Seasons.Season? right) -> bool
static GuildWars2.Pvp.Seasons.SkillBadge.operator !=(GuildWars2.Pvp.Seasons.SkillBadge? left, GuildWars2.Pvp.Seasons.SkillBadge? right) -> bool
static GuildWars2.Pvp.Seasons.SkillBadge.operator ==(GuildWars2.Pvp.Seasons.SkillBadge? left, GuildWars2.Pvp.Seasons.SkillBadge? right) -> bool
static GuildWars2.Pvp.Seasons.SkillBadgeTier.operator !=(GuildWars2.Pvp.Seasons.SkillBadgeTier? left, GuildWars2.Pvp.Seasons.SkillBadgeTier? right) -> bool
static GuildWars2.Pvp.Seasons.SkillBadgeTier.operator ==(GuildWars2.Pvp.Seasons.SkillBadgeTier? left, GuildWars2.Pvp.Seasons.SkillBadgeTier? right) -> bool
static GuildWars2.Pvp.Standings.BestStanding.operator !=(GuildWars2.Pvp.Standings.BestStanding? left, GuildWars2.Pvp.Standings.BestStanding? right) -> bool
static GuildWars2.Pvp.Standings.BestStanding.operator ==(GuildWars2.Pvp.Standings.BestStanding? left, GuildWars2.Pvp.Standings.BestStanding? right) -> bool
static GuildWars2.Pvp.Standings.CurrentStanding.operator !=(GuildWars2.Pvp.Standings.CurrentStanding? left, GuildWars2.Pvp.Standings.CurrentStanding? right) -> bool
static GuildWars2.Pvp.Standings.CurrentStanding.operator ==(GuildWars2.Pvp.Standings.CurrentStanding? left, GuildWars2.Pvp.Standings.CurrentStanding? right) -> bool
static GuildWars2.Pvp.Standings.Standing.operator !=(GuildWars2.Pvp.Standings.Standing? left, GuildWars2.Pvp.Standings.Standing? right) -> bool
static GuildWars2.Pvp.Standings.Standing.operator ==(GuildWars2.Pvp.Standings.Standing? left, GuildWars2.Pvp.Standings.Standing? right) -> bool
static GuildWars2.Pvp.Stats.AccountStats.operator !=(GuildWars2.Pvp.Stats.AccountStats? left, GuildWars2.Pvp.Stats.AccountStats? right) -> bool
static GuildWars2.Pvp.Stats.AccountStats.operator ==(GuildWars2.Pvp.Stats.AccountStats? left, GuildWars2.Pvp.Stats.AccountStats? right) -> bool
static GuildWars2.Pvp.Stats.Ladders.operator !=(GuildWars2.Pvp.Stats.Ladders? left, GuildWars2.Pvp.Stats.Ladders? right) -> bool
static GuildWars2.Pvp.Stats.Ladders.operator ==(GuildWars2.Pvp.Stats.Ladders? left, GuildWars2.Pvp.Stats.Ladders? right) -> bool
static GuildWars2.Pvp.Stats.Results.operator !=(GuildWars2.Pvp.Stats.Results? left, GuildWars2.Pvp.Stats.Results? right) -> bool
static GuildWars2.Pvp.Stats.Results.operator ==(GuildWars2.Pvp.Stats.Results? left, GuildWars2.Pvp.Stats.Results? right) -> bool
static GuildWars2.Quaggans.Quaggan.operator !=(GuildWars2.Quaggans.Quaggan? left, GuildWars2.Quaggans.Quaggan? right) -> bool
static GuildWars2.Quaggans.Quaggan.operator ==(GuildWars2.Quaggans.Quaggan? left, GuildWars2.Quaggans.Quaggan? right) -> bool
static GuildWars2.SchemaVersion.implicit operator string!(GuildWars2.SchemaVersion! instance) -> string!
static GuildWars2.WizardsVault.AstralRewards.AstralReward.operator !=(GuildWars2.WizardsVault.AstralRewards.AstralReward? left, GuildWars2.WizardsVault.AstralRewards.AstralReward? right) -> bool
static GuildWars2.WizardsVault.AstralRewards.AstralReward.operator ==(GuildWars2.WizardsVault.AstralRewards.AstralReward? left, GuildWars2.WizardsVault.AstralRewards.AstralReward? right) -> bool
static GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.operator !=(GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward? left, GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward? right) -> bool
static GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward.operator ==(GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward? left, GuildWars2.WizardsVault.AstralRewards.PurchasedAstralReward? right) -> bool
static GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.operator !=(GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress? left, GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress.operator ==(GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress? left, GuildWars2.WizardsVault.Objectives.DailyObjectivesProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.Objective.operator !=(GuildWars2.WizardsVault.Objectives.Objective? left, GuildWars2.WizardsVault.Objectives.Objective? right) -> bool
static GuildWars2.WizardsVault.Objectives.Objective.operator ==(GuildWars2.WizardsVault.Objectives.Objective? left, GuildWars2.WizardsVault.Objectives.Objective? right) -> bool
static GuildWars2.WizardsVault.Objectives.ObjectiveProgress.operator !=(GuildWars2.WizardsVault.Objectives.ObjectiveProgress? left, GuildWars2.WizardsVault.Objectives.ObjectiveProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.ObjectiveProgress.operator ==(GuildWars2.WizardsVault.Objectives.ObjectiveProgress? left, GuildWars2.WizardsVault.Objectives.ObjectiveProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.operator !=(GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress? left, GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress.operator ==(GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress? left, GuildWars2.WizardsVault.Objectives.SpecialObjectivesProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.operator !=(GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress? left, GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress? right) -> bool
static GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress.operator ==(GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress? left, GuildWars2.WizardsVault.Objectives.WeeklyObjectivesProgress? right) -> bool
static GuildWars2.WizardsVault.Seasons.Season.operator !=(GuildWars2.WizardsVault.Seasons.Season? left, GuildWars2.WizardsVault.Seasons.Season? right) -> bool
static GuildWars2.WizardsVault.Seasons.Season.operator ==(GuildWars2.WizardsVault.Seasons.Season? left, GuildWars2.WizardsVault.Seasons.Season? right) -> bool
static GuildWars2.Worlds.World.operator !=(GuildWars2.Worlds.World? left, GuildWars2.Worlds.World? right) -> bool
static GuildWars2.Worlds.World.operator ==(GuildWars2.Worlds.World? left, GuildWars2.Worlds.World? right) -> bool
static GuildWars2.Wvw.Abilities.Ability.operator !=(GuildWars2.Wvw.Abilities.Ability? left, GuildWars2.Wvw.Abilities.Ability? right) -> bool
static GuildWars2.Wvw.Abilities.Ability.operator ==(GuildWars2.Wvw.Abilities.Ability? left, GuildWars2.Wvw.Abilities.Ability? right) -> bool
static GuildWars2.Wvw.Abilities.AbilityRank.operator !=(GuildWars2.Wvw.Abilities.AbilityRank? left, GuildWars2.Wvw.Abilities.AbilityRank? right) -> bool
static GuildWars2.Wvw.Abilities.AbilityRank.operator ==(GuildWars2.Wvw.Abilities.AbilityRank? left, GuildWars2.Wvw.Abilities.AbilityRank? right) -> bool
static GuildWars2.Wvw.Guilds.AccountWvwGuild.operator !=(GuildWars2.Wvw.Guilds.AccountWvwGuild? left, GuildWars2.Wvw.Guilds.AccountWvwGuild? right) -> bool
static GuildWars2.Wvw.Guilds.AccountWvwGuild.operator ==(GuildWars2.Wvw.Guilds.AccountWvwGuild? left, GuildWars2.Wvw.Guilds.AccountWvwGuild? right) -> bool
static GuildWars2.Wvw.Guilds.WvwGuild.operator !=(GuildWars2.Wvw.Guilds.WvwGuild? left, GuildWars2.Wvw.Guilds.WvwGuild? right) -> bool
static GuildWars2.Wvw.Guilds.WvwGuild.operator ==(GuildWars2.Wvw.Guilds.WvwGuild? left, GuildWars2.Wvw.Guilds.WvwGuild? right) -> bool
static GuildWars2.Wvw.Matches.AllWorlds.operator !=(GuildWars2.Wvw.Matches.AllWorlds? left, GuildWars2.Wvw.Matches.AllWorlds? right) -> bool
static GuildWars2.Wvw.Matches.AllWorlds.operator ==(GuildWars2.Wvw.Matches.AllWorlds? left, GuildWars2.Wvw.Matches.AllWorlds? right) -> bool
static GuildWars2.Wvw.Matches.Bonus.operator !=(GuildWars2.Wvw.Matches.Bonus? left, GuildWars2.Wvw.Matches.Bonus? right) -> bool
static GuildWars2.Wvw.Matches.Bonus.operator ==(GuildWars2.Wvw.Matches.Bonus? left, GuildWars2.Wvw.Matches.Bonus? right) -> bool
static GuildWars2.Wvw.Matches.Distribution.operator !=(GuildWars2.Wvw.Matches.Distribution? left, GuildWars2.Wvw.Matches.Distribution? right) -> bool
static GuildWars2.Wvw.Matches.Distribution.operator ==(GuildWars2.Wvw.Matches.Distribution? left, GuildWars2.Wvw.Matches.Distribution? right) -> bool
static GuildWars2.Wvw.Matches.Map.operator !=(GuildWars2.Wvw.Matches.Map? left, GuildWars2.Wvw.Matches.Map? right) -> bool
static GuildWars2.Wvw.Matches.Map.operator ==(GuildWars2.Wvw.Matches.Map? left, GuildWars2.Wvw.Matches.Map? right) -> bool
static GuildWars2.Wvw.Matches.MapScores.operator !=(GuildWars2.Wvw.Matches.MapScores? left, GuildWars2.Wvw.Matches.MapScores? right) -> bool
static GuildWars2.Wvw.Matches.MapScores.operator ==(GuildWars2.Wvw.Matches.MapScores? left, GuildWars2.Wvw.Matches.MapScores? right) -> bool
static GuildWars2.Wvw.Matches.Match.operator !=(GuildWars2.Wvw.Matches.Match? left, GuildWars2.Wvw.Matches.Match? right) -> bool
static GuildWars2.Wvw.Matches.Match.operator ==(GuildWars2.Wvw.Matches.Match? left, GuildWars2.Wvw.Matches.Match? right) -> bool
static GuildWars2.Wvw.Matches.Overview.MatchOverview.operator !=(GuildWars2.Wvw.Matches.Overview.MatchOverview? left, GuildWars2.Wvw.Matches.Overview.MatchOverview? right) -> bool
static GuildWars2.Wvw.Matches.Overview.MatchOverview.operator ==(GuildWars2.Wvw.Matches.Overview.MatchOverview? left, GuildWars2.Wvw.Matches.Overview.MatchOverview? right) -> bool
static GuildWars2.Wvw.Matches.OwnedCamp.operator !=(GuildWars2.Wvw.Matches.OwnedCamp? left, GuildWars2.Wvw.Matches.OwnedCamp? right) -> bool
static GuildWars2.Wvw.Matches.OwnedCamp.operator ==(GuildWars2.Wvw.Matches.OwnedCamp? left, GuildWars2.Wvw.Matches.OwnedCamp? right) -> bool
static GuildWars2.Wvw.Matches.OwnedCastle.operator !=(GuildWars2.Wvw.Matches.OwnedCastle? left, GuildWars2.Wvw.Matches.OwnedCastle? right) -> bool
static GuildWars2.Wvw.Matches.OwnedCastle.operator ==(GuildWars2.Wvw.Matches.OwnedCastle? left, GuildWars2.Wvw.Matches.OwnedCastle? right) -> bool
static GuildWars2.Wvw.Matches.OwnedKeep.operator !=(GuildWars2.Wvw.Matches.OwnedKeep? left, GuildWars2.Wvw.Matches.OwnedKeep? right) -> bool
static GuildWars2.Wvw.Matches.OwnedKeep.operator ==(GuildWars2.Wvw.Matches.OwnedKeep? left, GuildWars2.Wvw.Matches.OwnedKeep? right) -> bool
static GuildWars2.Wvw.Matches.OwnedMercenary.operator !=(GuildWars2.Wvw.Matches.OwnedMercenary? left, GuildWars2.Wvw.Matches.OwnedMercenary? right) -> bool
static GuildWars2.Wvw.Matches.OwnedMercenary.operator ==(GuildWars2.Wvw.Matches.OwnedMercenary? left, GuildWars2.Wvw.Matches.OwnedMercenary? right) -> bool
static GuildWars2.Wvw.Matches.OwnedObjective.operator !=(GuildWars2.Wvw.Matches.OwnedObjective? left, GuildWars2.Wvw.Matches.OwnedObjective? right) -> bool
static GuildWars2.Wvw.Matches.OwnedObjective.operator ==(GuildWars2.Wvw.Matches.OwnedObjective? left, GuildWars2.Wvw.Matches.OwnedObjective? right) -> bool
static GuildWars2.Wvw.Matches.OwnedRuins.operator !=(GuildWars2.Wvw.Matches.OwnedRuins? left, GuildWars2.Wvw.Matches.OwnedRuins? right) -> bool
static GuildWars2.Wvw.Matches.OwnedRuins.operator ==(GuildWars2.Wvw.Matches.OwnedRuins? left, GuildWars2.Wvw.Matches.OwnedRuins? right) -> bool
static GuildWars2.Wvw.Matches.OwnedSpawn.operator !=(GuildWars2.Wvw.Matches.OwnedSpawn? left, GuildWars2.Wvw.Matches.OwnedSpawn? right) -> bool
static GuildWars2.Wvw.Matches.OwnedSpawn.operator ==(GuildWars2.Wvw.Matches.OwnedSpawn? left, GuildWars2.Wvw.Matches.OwnedSpawn? right) -> bool
static GuildWars2.Wvw.Matches.OwnedTower.operator !=(GuildWars2.Wvw.Matches.OwnedTower? left, GuildWars2.Wvw.Matches.OwnedTower? right) -> bool
static GuildWars2.Wvw.Matches.OwnedTower.operator ==(GuildWars2.Wvw.Matches.OwnedTower? left, GuildWars2.Wvw.Matches.OwnedTower? right) -> bool
static GuildWars2.Wvw.Matches.Scores.MapSummary.operator !=(GuildWars2.Wvw.Matches.Scores.MapSummary? left, GuildWars2.Wvw.Matches.Scores.MapSummary? right) -> bool
static GuildWars2.Wvw.Matches.Scores.MapSummary.operator ==(GuildWars2.Wvw.Matches.Scores.MapSummary? left, GuildWars2.Wvw.Matches.Scores.MapSummary? right) -> bool
static GuildWars2.Wvw.Matches.Scores.MatchScores.operator !=(GuildWars2.Wvw.Matches.Scores.MatchScores? left, GuildWars2.Wvw.Matches.Scores.MatchScores? right) -> bool
static GuildWars2.Wvw.Matches.Scores.MatchScores.operator ==(GuildWars2.Wvw.Matches.Scores.MatchScores? left, GuildWars2.Wvw.Matches.Scores.MatchScores? right) -> bool
static GuildWars2.Wvw.Matches.Skirmish.operator !=(GuildWars2.Wvw.Matches.Skirmish? left, GuildWars2.Wvw.Matches.Skirmish? right) -> bool
static GuildWars2.Wvw.Matches.Skirmish.operator ==(GuildWars2.Wvw.Matches.Skirmish? left, GuildWars2.Wvw.Matches.Skirmish? right) -> bool
static GuildWars2.Wvw.Matches.Stats.MapSummary.operator !=(GuildWars2.Wvw.Matches.Stats.MapSummary? left, GuildWars2.Wvw.Matches.Stats.MapSummary? right) -> bool
static GuildWars2.Wvw.Matches.Stats.MapSummary.operator ==(GuildWars2.Wvw.Matches.Stats.MapSummary? left, GuildWars2.Wvw.Matches.Stats.MapSummary? right) -> bool
static GuildWars2.Wvw.Matches.Stats.MatchStats.operator !=(GuildWars2.Wvw.Matches.Stats.MatchStats? left, GuildWars2.Wvw.Matches.Stats.MatchStats? right) -> bool
static GuildWars2.Wvw.Matches.Stats.MatchStats.operator ==(GuildWars2.Wvw.Matches.Stats.MatchStats? left, GuildWars2.Wvw.Matches.Stats.MatchStats? right) -> bool
static GuildWars2.Wvw.Matches.Worlds.operator !=(GuildWars2.Wvw.Matches.Worlds? left, GuildWars2.Wvw.Matches.Worlds? right) -> bool
static GuildWars2.Wvw.Matches.Worlds.operator ==(GuildWars2.Wvw.Matches.Worlds? left, GuildWars2.Wvw.Matches.Worlds? right) -> bool
static GuildWars2.Wvw.Objectives.Camp.operator !=(GuildWars2.Wvw.Objectives.Camp? left, GuildWars2.Wvw.Objectives.Camp? right) -> bool
static GuildWars2.Wvw.Objectives.Camp.operator ==(GuildWars2.Wvw.Objectives.Camp? left, GuildWars2.Wvw.Objectives.Camp? right) -> bool
static GuildWars2.Wvw.Objectives.Castle.operator !=(GuildWars2.Wvw.Objectives.Castle? left, GuildWars2.Wvw.Objectives.Castle? right) -> bool
static GuildWars2.Wvw.Objectives.Castle.operator ==(GuildWars2.Wvw.Objectives.Castle? left, GuildWars2.Wvw.Objectives.Castle? right) -> bool
static GuildWars2.Wvw.Objectives.Keep.operator !=(GuildWars2.Wvw.Objectives.Keep? left, GuildWars2.Wvw.Objectives.Keep? right) -> bool
static GuildWars2.Wvw.Objectives.Keep.operator ==(GuildWars2.Wvw.Objectives.Keep? left, GuildWars2.Wvw.Objectives.Keep? right) -> bool
static GuildWars2.Wvw.Objectives.Mercenary.operator !=(GuildWars2.Wvw.Objectives.Mercenary? left, GuildWars2.Wvw.Objectives.Mercenary? right) -> bool
static GuildWars2.Wvw.Objectives.Mercenary.operator ==(GuildWars2.Wvw.Objectives.Mercenary? left, GuildWars2.Wvw.Objectives.Mercenary? right) -> bool
static GuildWars2.Wvw.Objectives.Objective.operator !=(GuildWars2.Wvw.Objectives.Objective? left, GuildWars2.Wvw.Objectives.Objective? right) -> bool
static GuildWars2.Wvw.Objectives.Objective.operator ==(GuildWars2.Wvw.Objectives.Objective? left, GuildWars2.Wvw.Objectives.Objective? right) -> bool
static GuildWars2.Wvw.Objectives.Resource.operator !=(GuildWars2.Wvw.Objectives.Resource? left, GuildWars2.Wvw.Objectives.Resource? right) -> bool
static GuildWars2.Wvw.Objectives.Resource.operator ==(GuildWars2.Wvw.Objectives.Resource? left, GuildWars2.Wvw.Objectives.Resource? right) -> bool
static GuildWars2.Wvw.Objectives.Ruins.operator !=(GuildWars2.Wvw.Objectives.Ruins? left, GuildWars2.Wvw.Objectives.Ruins? right) -> bool
static GuildWars2.Wvw.Objectives.Ruins.operator ==(GuildWars2.Wvw.Objectives.Ruins? left, GuildWars2.Wvw.Objectives.Ruins? right) -> bool
static GuildWars2.Wvw.Objectives.Spawn.operator !=(GuildWars2.Wvw.Objectives.Spawn? left, GuildWars2.Wvw.Objectives.Spawn? right) -> bool
static GuildWars2.Wvw.Objectives.Spawn.operator ==(GuildWars2.Wvw.Objectives.Spawn? left, GuildWars2.Wvw.Objectives.Spawn? right) -> bool
static GuildWars2.Wvw.Objectives.Tower.operator !=(GuildWars2.Wvw.Objectives.Tower? left, GuildWars2.Wvw.Objectives.Tower? right) -> bool
static GuildWars2.Wvw.Objectives.Tower.operator ==(GuildWars2.Wvw.Objectives.Tower? left, GuildWars2.Wvw.Objectives.Tower? right) -> bool
static GuildWars2.Wvw.Ranks.Rank.operator !=(GuildWars2.Wvw.Ranks.Rank? left, GuildWars2.Wvw.Ranks.Rank? right) -> bool
static GuildWars2.Wvw.Ranks.Rank.operator ==(GuildWars2.Wvw.Ranks.Rank? left, GuildWars2.Wvw.Ranks.Rank? right) -> bool
static GuildWars2.Wvw.Timers.WvwTimer.operator !=(GuildWars2.Wvw.Timers.WvwTimer? left, GuildWars2.Wvw.Timers.WvwTimer? right) -> bool
static GuildWars2.Wvw.Timers.WvwTimer.operator ==(GuildWars2.Wvw.Timers.WvwTimer? left, GuildWars2.Wvw.Timers.WvwTimer? right) -> bool
static GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.operator !=(GuildWars2.Wvw.Upgrades.ObjectiveUpgrade? left, GuildWars2.Wvw.Upgrades.ObjectiveUpgrade? right) -> bool
static GuildWars2.Wvw.Upgrades.ObjectiveUpgrade.operator ==(GuildWars2.Wvw.Upgrades.ObjectiveUpgrade? left, GuildWars2.Wvw.Upgrades.ObjectiveUpgrade? right) -> bool
static GuildWars2.Wvw.Upgrades.Upgrade.operator !=(GuildWars2.Wvw.Upgrades.Upgrade? left, GuildWars2.Wvw.Upgrades.Upgrade? right) -> bool
static GuildWars2.Wvw.Upgrades.Upgrade.operator ==(GuildWars2.Wvw.Upgrades.Upgrade? left, GuildWars2.Wvw.Upgrades.Upgrade? right) -> bool
static GuildWars2.Wvw.Upgrades.UpgradeTier.operator !=(GuildWars2.Wvw.Upgrades.UpgradeTier? left, GuildWars2.Wvw.Upgrades.UpgradeTier? right) -> bool
static GuildWars2.Wvw.Upgrades.UpgradeTier.operator ==(GuildWars2.Wvw.Upgrades.UpgradeTier? left, GuildWars2.Wvw.Upgrades.UpgradeTier? right) -> bool
static readonly GuildWars2.BaseAddress.DefaultUri -> System.Uri!
static readonly GuildWars2.Coin.Zero -> GuildWars2.Coin
static readonly GuildWars2.GameLink.MinimumRefreshInterval -> System.TimeSpan
static readonly GuildWars2.Hero.Accounts.Character.AllBodyTypes -> System.Collections.Generic.IReadOnlyList<GuildWars2.Extensible<GuildWars2.Hero.BodyType>>!
static readonly GuildWars2.Hero.Races.Race.AllRaces -> System.Collections.Generic.IReadOnlyList<GuildWars2.Extensible<GuildWars2.Hero.RaceName>>!
static readonly GuildWars2.Hero.Training.Profession.AllProfessions -> System.Collections.Generic.IReadOnlyList<GuildWars2.Extensible<GuildWars2.Hero.ProfessionName>>!
static readonly GuildWars2.Hyperlink.None -> GuildWars2.Hyperlink
static readonly GuildWars2.Items.RarityColor.Ascended -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Basic -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Exotic -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Fine -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Junk -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Legendary -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Masterwork -> System.Drawing.Color
static readonly GuildWars2.Items.RarityColor.Rare -> System.Drawing.Color
static readonly GuildWars2.Language.Chinese -> GuildWars2.Language!
static readonly GuildWars2.Language.English -> GuildWars2.Language!
static readonly GuildWars2.Language.French -> GuildWars2.Language!
static readonly GuildWars2.Language.German -> GuildWars2.Language!
static readonly GuildWars2.Language.Spanish -> GuildWars2.Language!
static readonly GuildWars2.Markup.MarkupColorName.DefaultColorMap -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
static readonly GuildWars2.SchemaVersion.Recommended -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20190221 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20190322 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20190516 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20190521 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20190522 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20191219 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20201117 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20210406 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20210715 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20220309 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20220323 -> GuildWars2.SchemaVersion!
static readonly GuildWars2.SchemaVersion.V20240720 -> GuildWars2.SchemaVersion!
virtual GuildWars2.Authorization.TokenInfo.<Clone>$() -> GuildWars2.Authorization.TokenInfo!
virtual GuildWars2.Authorization.TokenInfo.EqualityContract.get -> System.Type!
virtual GuildWars2.Authorization.TokenInfo.Equals(GuildWars2.Authorization.TokenInfo? other) -> bool
virtual GuildWars2.Authorization.TokenInfo.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.BulkRequest<TKey, TValue>.Invoke(System.Collections.Generic.IEnumerable<TKey>! keys, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<TValue>!>!
virtual GuildWars2.Chat.Link.EqualityContract.get -> System.Type!
virtual GuildWars2.Chat.Link.Equals(GuildWars2.Chat.Link? other) -> bool
virtual GuildWars2.Chat.Link.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Exploration.PointsOfInterest.PointOfInterest.<Clone>$() -> GuildWars2.Exploration.PointsOfInterest.PointOfInterest!
virtual GuildWars2.Exploration.PointsOfInterest.PointOfInterest.EqualityContract.get -> System.Type!
virtual GuildWars2.Exploration.PointsOfInterest.PointOfInterest.Equals(GuildWars2.Exploration.PointsOfInterest.PointOfInterest? other) -> bool
virtual GuildWars2.Exploration.PointsOfInterest.PointOfInterest.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Flags.EqualityContract.get -> System.Type!
virtual GuildWars2.Flags.Equals(GuildWars2.Flags? other) -> bool
virtual GuildWars2.Flags.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Guilds.Logs.GuildLogEntry.<Clone>$() -> GuildWars2.Guilds.Logs.GuildLogEntry!
virtual GuildWars2.Guilds.Logs.GuildLogEntry.EqualityContract.get -> System.Type!
virtual GuildWars2.Guilds.Logs.GuildLogEntry.Equals(GuildWars2.Guilds.Logs.GuildLogEntry? other) -> bool
virtual GuildWars2.Guilds.Logs.GuildLogEntry.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Guilds.Upgrades.GuildUpgrade.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgrade!
virtual GuildWars2.Guilds.Upgrades.GuildUpgrade.EqualityContract.get -> System.Type!
virtual GuildWars2.Guilds.Upgrades.GuildUpgrade.Equals(GuildWars2.Guilds.Upgrades.GuildUpgrade? other) -> bool
virtual GuildWars2.Guilds.Upgrades.GuildUpgrade.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Guilds.Upgrades.GuildUpgradeCost.<Clone>$() -> GuildWars2.Guilds.Upgrades.GuildUpgradeCost!
virtual GuildWars2.Guilds.Upgrades.GuildUpgradeCost.EqualityContract.get -> System.Type!
virtual GuildWars2.Guilds.Upgrades.GuildUpgradeCost.Equals(GuildWars2.Guilds.Upgrades.GuildUpgradeCost? other) -> bool
virtual GuildWars2.Guilds.Upgrades.GuildUpgradeCost.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Achievements.Achievement.<Clone>$() -> GuildWars2.Hero.Achievements.Achievement!
virtual GuildWars2.Hero.Achievements.Achievement.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Achievements.Achievement.Equals(GuildWars2.Hero.Achievements.Achievement? other) -> bool
virtual GuildWars2.Hero.Achievements.Achievement.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Achievements.AchievementBit.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementBit!
virtual GuildWars2.Hero.Achievements.AchievementBit.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Achievements.AchievementBit.Equals(GuildWars2.Hero.Achievements.AchievementBit? other) -> bool
virtual GuildWars2.Hero.Achievements.AchievementBit.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Achievements.AchievementReward.<Clone>$() -> GuildWars2.Hero.Achievements.AchievementReward!
virtual GuildWars2.Hero.Achievements.AchievementReward.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Achievements.AchievementReward.Equals(GuildWars2.Hero.Achievements.AchievementReward? other) -> bool
virtual GuildWars2.Hero.Achievements.AchievementReward.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Builds.ActionSkill.Equals(GuildWars2.Hero.Builds.ActionSkill? other) -> bool
virtual GuildWars2.Hero.Builds.Fact.<Clone>$() -> GuildWars2.Hero.Builds.Fact!
virtual GuildWars2.Hero.Builds.Fact.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Builds.Fact.Equals(GuildWars2.Hero.Builds.Fact? other) -> bool
virtual GuildWars2.Hero.Builds.Fact.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Builds.Facts.Buff.Equals(GuildWars2.Hero.Builds.Facts.Buff? other) -> bool
virtual GuildWars2.Hero.Builds.Skill.<Clone>$() -> GuildWars2.Hero.Builds.Skill!
virtual GuildWars2.Hero.Builds.Skill.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Builds.Skill.Equals(GuildWars2.Hero.Builds.Skill? other) -> bool
virtual GuildWars2.Hero.Builds.Skill.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Builds.SlotSkill.Equals(GuildWars2.Hero.Builds.SlotSkill? other) -> bool
virtual GuildWars2.Hero.Crafting.Recipes.Recipe.<Clone>$() -> GuildWars2.Hero.Crafting.Recipes.Recipe!
virtual GuildWars2.Hero.Crafting.Recipes.Recipe.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Crafting.Recipes.Recipe.Equals(GuildWars2.Hero.Crafting.Recipes.Recipe? other) -> bool
virtual GuildWars2.Hero.Crafting.Recipes.Recipe.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.ArmorSkin? other) -> bool
virtual GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.<Clone>$() -> GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin!
virtual GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin? other) -> bool
virtual GuildWars2.Hero.Equipment.Wardrobe.EquipmentSkin.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.GatheringToolSkin? other) -> bool
virtual GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin.Equals(GuildWars2.Hero.Equipment.Wardrobe.WeaponSkin? other) -> bool
virtual GuildWars2.Hero.Training.SkillSummary.<Clone>$() -> GuildWars2.Hero.Training.SkillSummary!
virtual GuildWars2.Hero.Training.SkillSummary.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Training.SkillSummary.Equals(GuildWars2.Hero.Training.SkillSummary? other) -> bool
virtual GuildWars2.Hero.Training.SkillSummary.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Hero.Training.TrainingObjective.<Clone>$() -> GuildWars2.Hero.Training.TrainingObjective!
virtual GuildWars2.Hero.Training.TrainingObjective.EqualityContract.get -> System.Type!
virtual GuildWars2.Hero.Training.TrainingObjective.Equals(GuildWars2.Hero.Training.TrainingObjective? other) -> bool
virtual GuildWars2.Hero.Training.TrainingObjective.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Items.Armor.Equals(GuildWars2.Items.Armor? other) -> bool
virtual GuildWars2.Items.Armor.InfusionSlotCount.get -> int
virtual GuildWars2.Items.Armor.UpgradeSlotCount.get -> int
virtual GuildWars2.Items.Consumable.Equals(GuildWars2.Items.Consumable? other) -> bool
virtual GuildWars2.Items.Container.Equals(GuildWars2.Items.Container? other) -> bool
virtual GuildWars2.Items.GatheringTool.Equals(GuildWars2.Items.GatheringTool? other) -> bool
virtual GuildWars2.Items.Gizmo.Equals(GuildWars2.Items.Gizmo? other) -> bool
virtual GuildWars2.Items.Item.<Clone>$() -> GuildWars2.Items.Item!
virtual GuildWars2.Items.Item.EqualityContract.get -> System.Type!
virtual GuildWars2.Items.Item.Equals(GuildWars2.Items.Item? other) -> bool
virtual GuildWars2.Items.Item.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Items.Trinket.Equals(GuildWars2.Items.Trinket? other) -> bool
virtual GuildWars2.Items.Trinket.InfusionSlotCount.get -> int
virtual GuildWars2.Items.Trinket.UpgradeSlotCount.get -> int
virtual GuildWars2.Items.Unlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
virtual GuildWars2.Items.UpgradeComponent.Equals(GuildWars2.Items.UpgradeComponent? other) -> bool
virtual GuildWars2.Items.Weapon.Equals(GuildWars2.Items.Weapon? other) -> bool
virtual GuildWars2.Items.Weapon.InfusionSlotCount.get -> int
virtual GuildWars2.Items.Weapon.TwoHanded.get -> bool
virtual GuildWars2.Items.Weapon.UpgradeSlotCount.get -> int
virtual GuildWars2.Wvw.Matches.OwnedObjective.<Clone>$() -> GuildWars2.Wvw.Matches.OwnedObjective!
virtual GuildWars2.Wvw.Matches.OwnedObjective.EqualityContract.get -> System.Type!
virtual GuildWars2.Wvw.Matches.OwnedObjective.Equals(GuildWars2.Wvw.Matches.OwnedObjective? other) -> bool
virtual GuildWars2.Wvw.Matches.OwnedObjective.PrintMembers(System.Text.StringBuilder! builder) -> bool
virtual GuildWars2.Wvw.Objectives.Objective.<Clone>$() -> GuildWars2.Wvw.Objectives.Objective!
virtual GuildWars2.Wvw.Objectives.Objective.EqualityContract.get -> System.Type!
virtual GuildWars2.Wvw.Objectives.Objective.Equals(GuildWars2.Wvw.Objectives.Objective? other) -> bool
virtual GuildWars2.Wvw.Objectives.Objective.PrintMembers(System.Text.StringBuilder! builder) -> bool
~override GuildWars2.Chat.SkillPalette.Equals(object obj) -> bool
~override GuildWars2.Chat.SkillPalette.ToString() -> string
~override GuildWars2.Chat.Specialization.Equals(object obj) -> bool
~override GuildWars2.Chat.Specialization.ToString() -> string
~override GuildWars2.Coin.Equals(object obj) -> bool
~override GuildWars2.Hyperlink.Equals(object obj) -> bool
~override GuildWars2.Hyperlink.ToString() -> string
~override GuildWars2.Mumble.Context.Equals(object obj) -> bool
~override GuildWars2.Mumble.Context.ToString() -> string
~override GuildWars2.Mumble.GameTick.Equals(object obj) -> bool
~override GuildWars2.Mumble.GameTick.ToString() -> string
GuildWars2.Authorization.Permission.None = 0 -> GuildWars2.Authorization.Permission
GuildWars2.Coin.Add(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Decrement() -> GuildWars2.Coin
GuildWars2.Coin.Divide(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Increment() -> GuildWars2.Coin
GuildWars2.Coin.Multiply(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Negate() -> GuildWars2.Coin
GuildWars2.Coin.Plus() -> GuildWars2.Coin
GuildWars2.Coin.Remainder(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.Subtract(in GuildWars2.Coin other) -> GuildWars2.Coin
GuildWars2.Coin.ToInt32() -> int
GuildWars2.Extensible<TEnum>.Extensible(string! name) -> void
GuildWars2.Guilds.Logs.GuildBankOperationKind.None = 0 -> GuildWars2.Guilds.Logs.GuildBankOperationKind
GuildWars2.Guilds.Logs.GuildMissionState.None = 0 -> GuildWars2.Guilds.Logs.GuildMissionState
GuildWars2.Guilds.Logs.GuildUpgradeAction.None = 0 -> GuildWars2.Guilds.Logs.GuildUpgradeAction
GuildWars2.Guilds.Logs.InfluenceActivityKind.None = 0 -> GuildWars2.Guilds.Logs.InfluenceActivityKind
GuildWars2.Guilds.Teams.GuildTeamRole.None = 0 -> GuildWars2.Guilds.Teams.GuildTeamRole
GuildWars2.Guilds.Teams.GuildTeamState.None = 0 -> GuildWars2.Guilds.Teams.GuildTeamState
GuildWars2.Hero.Attunement.None = 0 -> GuildWars2.Hero.Attunement
GuildWars2.Hero.BodyType.None = 0 -> GuildWars2.Hero.BodyType
GuildWars2.Hero.Builds.Facts.ComboFieldName.None = 0 -> GuildWars2.Hero.Builds.Facts.ComboFieldName
GuildWars2.Hero.Builds.Facts.ComboFinisherName.None = 0 -> GuildWars2.Hero.Builds.Facts.ComboFinisherName
GuildWars2.Hero.Builds.SkillCategoryName.None = 0 -> GuildWars2.Hero.Builds.SkillCategoryName
GuildWars2.Hero.Builds.SkillSlot.None = 0 -> GuildWars2.Hero.Builds.SkillSlot
GuildWars2.Hero.Builds.TraitSlot.None = 0 -> GuildWars2.Hero.Builds.TraitSlot
GuildWars2.Hero.Builds.Transformation.None = 0 -> GuildWars2.Hero.Builds.Transformation
GuildWars2.Hero.Builds.WeaponType.Unknown = 0 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName.None = 0 -> GuildWars2.Hero.Crafting.Disciplines.CraftingDisciplineName
GuildWars2.Hero.Equipment.Material.None = 0 -> GuildWars2.Hero.Equipment.Material
GuildWars2.Hero.Equipment.Mounts.MountName.None = 0 -> GuildWars2.Hero.Equipment.Mounts.MountName
GuildWars2.Hero.Equipment.Novelties.NoveltyKind.None = 0 -> GuildWars2.Hero.Equipment.Novelties.NoveltyKind
GuildWars2.Hero.Equipment.Templates.EquipmentLocation.None = 0 -> GuildWars2.Hero.Equipment.Templates.EquipmentLocation
GuildWars2.Hero.Equipment.Templates.EquipmentSlot.None = 0 -> GuildWars2.Hero.Equipment.Templates.EquipmentSlot
GuildWars2.Hero.ProfessionName.None = 0 -> GuildWars2.Hero.ProfessionName
GuildWars2.Hero.RaceName.None = 0 -> GuildWars2.Hero.RaceName
GuildWars2.Hero.Training.TrainingCategory.None = 0 -> GuildWars2.Hero.Training.TrainingCategory
GuildWars2.Hero.WeightClass.None = 0 -> GuildWars2.Hero.WeightClass
GuildWars2.Http.QueryBuilder.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string!, string!>>!
GuildWars2.Items.GameType.None = 0 -> GuildWars2.Items.GameType
GuildWars2.Items.InfusionSlotUpgradeKind.None = 0 -> GuildWars2.Items.InfusionSlotUpgradeKind
GuildWars2.Items.Rarity.None = 0 -> GuildWars2.Items.Rarity
GuildWars2.Mumble.MapType.AutoRedirect = 0 -> GuildWars2.Mumble.MapType
GuildWars2.Pve.Dungeons.DungeonKind.None = 0 -> GuildWars2.Pve.Dungeons.DungeonKind
GuildWars2.Pve.Home.CollectionBox.None = 0 -> GuildWars2.Pve.Home.CollectionBox
GuildWars2.Pve.Raids.EncounterKind.None = 0 -> GuildWars2.Pve.Raids.EncounterKind
GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode.None = 0 -> GuildWars2.Pve.SuperAdventureBox.SuperAdventureBoxMode
GuildWars2.Pvp.Games.PvpResult.None = 0 -> GuildWars2.Pvp.Games.PvpResult
GuildWars2.Pvp.Games.PvpTeamColor.None = 0 -> GuildWars2.Pvp.Games.PvpTeamColor
GuildWars2.WizardsVault.ObjectiveTrack.None = 0 -> GuildWars2.WizardsVault.ObjectiveTrack
GuildWars2.WizardsVault.RewardKind.None = 0 -> GuildWars2.WizardsVault.RewardKind
GuildWars2.Worlds.WorldPopulation.None = 0 -> GuildWars2.Worlds.WorldPopulation
GuildWars2.Wvw.Matches.BonusKind.None = 0 -> GuildWars2.Wvw.Matches.BonusKind
static GuildWars2.Coin.FromInt32(int quantity) -> GuildWars2.Coin
static GuildWars2.Extensible<TEnum>.FromString(string! name) -> GuildWars2.Extensible<TEnum>
static GuildWars2.Extensible<TEnum>.operator !=(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator !=(in GuildWars2.Extensible<TEnum> left, string! right) -> bool
static GuildWars2.Extensible<TEnum>.operator !=(in GuildWars2.Extensible<TEnum> left, TEnum right) -> bool
static GuildWars2.Extensible<TEnum>.operator <(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator <=(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator ==(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator ==(in GuildWars2.Extensible<TEnum> left, string! right) -> bool
static GuildWars2.Extensible<TEnum>.operator ==(in GuildWars2.Extensible<TEnum> left, TEnum right) -> bool
static GuildWars2.Extensible<TEnum>.operator >(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.operator >=(in GuildWars2.Extensible<TEnum> left, in GuildWars2.Extensible<TEnum> right) -> bool
static GuildWars2.Extensible<TEnum>.ToExtensible(TEnum value) -> GuildWars2.Extensible<TEnum>
static GuildWars2.Hero.Equipment.Mounts.MountNameFormatter.FormatMountName(in GuildWars2.Extensible<GuildWars2.Hero.Equipment.Mounts.MountName> mountName) -> string!
static GuildWars2.Markup.MarkupHtmlConverter.Convert(GuildWars2.Markup.RootNode! root) -> string!
static GuildWars2.Markup.MarkupHtmlConverter.Convert(GuildWars2.Markup.RootNode! root, System.Collections.Generic.IReadOnlyDictionary<string!, string!>? colorMap) -> string!
static GuildWars2.Markup.MarkupLexer.Tokenize(string! input) -> System.Collections.Generic.IEnumerable<GuildWars2.Markup.MarkupToken!>!
static GuildWars2.Markup.MarkupParser.Parse(System.Collections.Generic.IEnumerable<GuildWars2.Markup.MarkupToken!>! input) -> GuildWars2.Markup.RootNode!
static GuildWars2.Markup.MarkupTextConverter.Convert(GuildWars2.Markup.RootNode! root) -> string!
static readonly GuildWars2.Authorization.TokenInfo.AllPermissions -> GuildWars2.Collections.ValueList<GuildWars2.Extensible<GuildWars2.Authorization.Permission>>!
GuildWars2.Hero.Builds.WeaponType.LargeBundle = 21 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Builds.WeaponType.Nothing = 22 -> GuildWars2.Hero.Builds.WeaponType
GuildWars2.Hero.Equipment.Mounts.Mount.UId.get -> System.Guid
GuildWars2.Hero.Equipment.Mounts.Mount.UId.init -> void
GuildWars2.Hero.Equipment.Mounts.MountSkin.MountId.get -> System.Guid
GuildWars2.Hero.Equipment.Mounts.MountSkin.MountId.init -> void
GuildWars2.Items.MagicDoorSkinUnlocker
GuildWars2.Items.MagicDoorSkinUnlocker.Equals(GuildWars2.Items.MagicDoorSkinUnlocker? other) -> bool
GuildWars2.Items.MagicDoorSkinUnlocker.MagicDoorSkinUnlocker() -> void
override GuildWars2.Items.MagicDoorSkinUnlocker.<Clone>$() -> GuildWars2.Items.Item!
override GuildWars2.Items.MagicDoorSkinUnlocker.Equals(object? obj) -> bool
override GuildWars2.Items.MagicDoorSkinUnlocker.GetHashCode() -> int
override GuildWars2.Items.MagicDoorSkinUnlocker.ToString() -> string!
override sealed GuildWars2.Items.MagicDoorSkinUnlocker.Equals(GuildWars2.Items.Unlocker? other) -> bool
static GuildWars2.Items.MagicDoorSkinUnlocker.operator !=(GuildWars2.Items.MagicDoorSkinUnlocker? left, GuildWars2.Items.MagicDoorSkinUnlocker? right) -> bool
static GuildWars2.Items.MagicDoorSkinUnlocker.operator ==(GuildWars2.Items.MagicDoorSkinUnlocker? left, GuildWars2.Items.MagicDoorSkinUnlocker? right) -> bool
static readonly GuildWars2.SchemaVersion.V20250829 -> GuildWars2.SchemaVersion!
