name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    env:
      build-configuration: Release

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-nuget-packages
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.build-configuration }} --no-restore
    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Azure key vault - Get Secrets
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: GW2SDK-Keys
        secrets: ApiKeyBasic, ApiKeyFull
      id: keyvault
    - name: Export keys
      run: |
        echo "::set-env name=ApiKeyBasic::${{ steps.keyvault.outputs.ApiKeyBasic}}"
        echo "::set-env name=ApiKeyFull::${{ steps.keyvault.outputs.ApiKeyFull}}"
    - name: Test
      run: dotnet test --no-restore --settings ${{ github.workspace }}/coverletArgs.runsettings
    - name: Upload coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: "**/coverage.cobertura.xml"
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.7
        
