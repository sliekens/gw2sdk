name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - v*

env:
  SYMBOL_PACKAGE: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sliekens/gw2sdk/devcontainer:latest
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # (no history limit)
          filter: tree:0

      - name: Install dependencies
        run: dotnet restore --locked-mode

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Create packages
        run: dotnet pack src/GW2SDK --configuration Release --no-build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: artifacts/package/release

  deploy-integration:
    name: Deploy to NuGet integration environment
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: nuget-integration
      url: ${{ vars.NUGET_GALLERY_URL}}
    permissions:
      id-token: write   # Required to request OIDC token for trusted publishing
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: package
          path: artifacts/package

      - name: NuGet login
        uses: NuGet/login@v1
        id: login
        with:
          user: ${{ secrets.NUGET_USER }}
          token-service-url: ${{ vars.NUGET_TOKEN_SERVICE_URL }}
          audience: ${{ vars.NUGET_AUDIENCE }}

      - name: Push package
        run: dotnet nuget push artifacts/package/*.nupkg --source ${{ vars.NUGET_API_URL }} --api-key ${{steps.login.outputs.NUGET_API_KEY}}

  deploy:
    name: Deploy to NuGet
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: nuget
      url: ${{ vars.NUGET_GALLERY_URL }}
    permissions:
      id-token: write   # Required to request OIDC token for trusted publishing
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: package
          path: artifacts/package

      - name: NuGet login
        uses: NuGet/login@v1
        id: login
        with:
          user: ${{ secrets.NUGET_USER }}
          token-service-url: ${{ vars.NUGET_TOKEN_SERVICE_URL }}  
          audience: ${{ vars.NUGET_AUDIENCE }}

      - name: Push package
        run: dotnet nuget push artifacts/package/*.nupkg --source ${{ vars.NUGET_API_URL }} --api-key ${{steps.login.outputs.NUGET_API_KEY}}
