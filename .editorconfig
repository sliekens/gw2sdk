root = true

# All files
[*]
indent_style = space

# XML files
[*.{xml,csproj,props,targets}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
tab_width = 4

# New line preferences
insert_final_newline = true

#### .NET Code Actions ####

# Type members
dotnet_hide_advanced_members = false
dotnet_member_insertion_location = with_other_members_of_the_same_kind
dotnet_property_generation_behavior = prefer_throwing_properties

# Symbol search
dotnet_search_reference_assemblies = true

#### .NET Coding Conventions ####
[*.{cs,vb}]

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:hint
dotnet_style_predefined_type_for_member_access = true:hint

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_prefer_system_hash_code = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_collection_expression = when_types_exactly_match:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = true:silent
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent

#### C# Coding Conventions ####
[*.cs]

# var preferences
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion
csharp_style_var_elsewhere = false:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_anonymous_function = true:suggestion
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,file,const,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_namespace_declarations = file_scoped:suggestion
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_top_level_statements = true:silent

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_implicitly_typed_lambda_expression = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_unbound_generic_type_in_nameof = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:silent

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####
[*.{cs,vb}]

# Naming rules

dotnet_naming_rule.types_and_namespaces_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.types_and_namespaces_should_be_pascalcase.symbols = types_and_namespaces
dotnet_naming_rule.types_and_namespaces_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.interfaces_should_be_ipascalcase.severity = suggestion
dotnet_naming_rule.interfaces_should_be_ipascalcase.symbols = interfaces
dotnet_naming_rule.interfaces_should_be_ipascalcase.style = ipascalcase

dotnet_naming_rule.type_parameters_should_be_tpascalcase.severity = suggestion
dotnet_naming_rule.type_parameters_should_be_tpascalcase.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_tpascalcase.style = tpascalcase

dotnet_naming_rule.methods_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.methods_should_be_pascalcase.symbols = methods
dotnet_naming_rule.methods_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.properties_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.properties_should_be_pascalcase.symbols = properties
dotnet_naming_rule.properties_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.events_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.events_should_be_pascalcase.symbols = events
dotnet_naming_rule.events_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.local_variables_should_be_camelcase.severity = suggestion
dotnet_naming_rule.local_variables_should_be_camelcase.symbols = local_variables
dotnet_naming_rule.local_variables_should_be_camelcase.style = camelcase

dotnet_naming_rule.local_constants_should_be_camelcase.severity = suggestion
dotnet_naming_rule.local_constants_should_be_camelcase.symbols = local_constants
dotnet_naming_rule.local_constants_should_be_camelcase.style = camelcase

dotnet_naming_rule.parameters_should_be_camelcase.severity = suggestion
dotnet_naming_rule.parameters_should_be_camelcase.symbols = parameters
dotnet_naming_rule.parameters_should_be_camelcase.style = camelcase

dotnet_naming_rule.public_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.public_fields_should_be_pascalcase.symbols = public_fields
dotnet_naming_rule.public_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_fields_should_be_camelcase.severity = suggestion
dotnet_naming_rule.private_fields_should_be_camelcase.symbols = private_fields
dotnet_naming_rule.private_fields_should_be_camelcase.style = camelcase

dotnet_naming_rule.private_static_fields_should_be_s_camelcase.severity = suggestion
dotnet_naming_rule.private_static_fields_should_be_s_camelcase.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_should_be_s_camelcase.style = s_camelcase

dotnet_naming_rule.public_constant_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.public_constant_fields_should_be_pascalcase.symbols = public_constant_fields
dotnet_naming_rule.public_constant_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_constant_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.private_constant_fields_should_be_pascalcase.symbols = private_constant_fields
dotnet_naming_rule.private_constant_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.symbols = public_static_readonly_fields
dotnet_naming_rule.public_static_readonly_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.enums_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.enums_should_be_pascalcase.symbols = enums
dotnet_naming_rule.enums_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.local_functions_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascalcase.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.non_field_members_should_be_pascalcase.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascalcase.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascalcase.style = pascalcase

# Symbol specifications

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interfaces.required_modifiers = 

dotnet_naming_symbols.enums.applicable_kinds = enum
dotnet_naming_symbols.enums.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enums.required_modifiers = 

dotnet_naming_symbols.events.applicable_kinds = event
dotnet_naming_symbols.events.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.events.required_modifiers = 

dotnet_naming_symbols.methods.applicable_kinds = method
dotnet_naming_symbols.methods.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.methods.required_modifiers = 

dotnet_naming_symbols.properties.applicable_kinds = property
dotnet_naming_symbols.properties.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.properties.required_modifiers = 

dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_fields.required_modifiers = 

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_fields.required_modifiers = 

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_symbols.types_and_namespaces.applicable_kinds = namespace, class, struct, interface, enum
dotnet_naming_symbols.types_and_namespaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types_and_namespaces.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.type_parameters.applicable_kinds = namespace
dotnet_naming_symbols.type_parameters.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.required_modifiers = 

dotnet_naming_symbols.private_constant_fields.applicable_kinds = field
dotnet_naming_symbols.private_constant_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_constant_fields.required_modifiers = const

dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_symbols.local_variables.applicable_accessibilities = local
dotnet_naming_symbols.local_variables.required_modifiers = 

dotnet_naming_symbols.local_constants.applicable_kinds = local
dotnet_naming_symbols.local_constants.applicable_accessibilities = local
dotnet_naming_symbols.local_constants.required_modifiers = const

dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_symbols.parameters.applicable_accessibilities = *
dotnet_naming_symbols.parameters.required_modifiers = 

dotnet_naming_symbols.public_constant_fields.applicable_kinds = field
dotnet_naming_symbols.public_constant_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_constant_fields.required_modifiers = const

dotnet_naming_symbols.public_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.public_static_readonly_fields.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private, protected, protected_internal, private_protected
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_symbols.local_functions.applicable_accessibilities = *
dotnet_naming_symbols.local_functions.required_modifiers = 

# Naming styles

dotnet_naming_style.pascalcase.required_prefix = 
dotnet_naming_style.pascalcase.required_suffix = 
dotnet_naming_style.pascalcase.word_separator = 
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style.ipascalcase.required_prefix = I
dotnet_naming_style.ipascalcase.required_suffix = 
dotnet_naming_style.ipascalcase.word_separator = 
dotnet_naming_style.ipascalcase.capitalization = pascal_case

dotnet_naming_style.tpascalcase.required_prefix = T
dotnet_naming_style.tpascalcase.required_suffix = 
dotnet_naming_style.tpascalcase.word_separator = 
dotnet_naming_style.tpascalcase.capitalization = pascal_case

dotnet_naming_style._camelcase.required_prefix = _
dotnet_naming_style._camelcase.required_suffix = 
dotnet_naming_style._camelcase.word_separator = 
dotnet_naming_style._camelcase.capitalization = camel_case

dotnet_naming_style.camelcase.required_prefix = 
dotnet_naming_style.camelcase.required_suffix = 
dotnet_naming_style.camelcase.word_separator = 
dotnet_naming_style.camelcase.capitalization = camel_case

dotnet_naming_style.s_camelcase.required_prefix = s_
dotnet_naming_style.s_camelcase.required_suffix = 
dotnet_naming_style.s_camelcase.word_separator = 
dotnet_naming_style.s_camelcase.capitalization = camel_case

# ReSharper properties
resharper_align_multiline_binary_expressions_chain = false
resharper_align_multiline_statement_conditions = false
resharper_blank_lines_around_single_line_auto_property = 1
resharper_blank_lines_around_single_line_property = 1
resharper_blank_lines_before_single_line_comment = 1
resharper_csharp_blank_lines_around_single_line_field = 1
resharper_csharp_blank_lines_around_single_line_invocable = 1
resharper_csharp_int_align_fix_in_adjacent = false
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_max_line_length = 100
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_before_invocation_lpar = false
resharper_csharp_wrap_chained_method_calls = chop_if_long
resharper_csharp_wrap_extends_list_style = chop_if_long
resharper_csharp_wrap_multiple_declaration_style = chop_if_long
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_indent_invocation_pars = inside
resharper_int_align_comments = true
resharper_keep_existing_arrangement = false
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_initializer_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = false
resharper_keep_existing_linebreaks = false
resharper_max_array_initializer_elements_on_line = 2
resharper_max_enum_members_on_line = 1
resharper_max_formal_parameters_on_line = 10000
resharper_max_initializer_elements_on_line = 1
resharper_method_or_operator_body = expression_body
resharper_nested_ternary_style = expanded
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_accessor_attribute_on_same_line = true
resharper_place_constructor_initializer_on_same_line = false
resharper_place_field_attribute_on_same_line = false
resharper_place_linq_into_on_new_line = false
resharper_place_simple_accessor_on_single_line = false
resharper_place_simple_anonymousmethod_on_single_line = false
resharper_place_simple_initializer_on_single_line = true
resharper_wrap_array_initializer_style = chop_if_long
resharper_wrap_before_declaration_rpar = true
resharper_wrap_before_first_type_parameter_constraint = true
resharper_wrap_before_invocation_lpar = false
resharper_wrap_before_invocation_rpar = true
resharper_wrap_before_linq_expression = true
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_chained_binary_patterns = chop_if_long
resharper_wrap_linq_expressions = chop_always
resharper_wrap_multiple_declaration_style = chop_if_long
resharper_xmldoc_indent_text = RemoveIndent
resharper_xmldoc_keep_user_linebreaks = false
resharper_xmldoc_linebreaks_inside_tags_for_elements_with_child_elements = false
resharper_xmldoc_linebreaks_inside_tags_for_multiline_elements = false
resharper_space_before_self_closing = true

# ReSharper inspection severities
resharper_arrange_method_or_operator_body_highlighting = hint
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_is_expression_always_true_highlighting = none
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = warning
resharper_suggest_var_or_type_elsewhere_highlighting = warning
resharper_suggest_var_or_type_simple_types_highlighting = warning

# Roslynator diagnostics options
roslynator_accessibility_modifiers = explicit # explicit|implicit
# Applicable to: rcs1018

roslynator_accessor_braces_style = multi_line # multi_line|single_line_when_expression_is_on_single_line
# Default: multi_line
# Applicable to: rcs0020

roslynator_array_creation_type_style = implicit # explicit|implicit|implicit_when_type_is_obvious
# Applicable to: rcs1014

roslynator_arrow_token_new_line = after # after|before
# Applicable to: rcs0032, rcs0062, rcs1016

roslynator_binary_operator_new_line = after # after|before
# Applicable to: rcs0027

roslynator_blank_line_after_file_scoped_namespace_declaration = true # true|false
# Applicable to: rcs0060

roslynator_blank_line_between_closing_brace_and_switch_section = true # true|false
# Applicable to: rcs0014, rcs0063, rcs1036

roslynator_blank_line_between_single_line_accessors = true # true|false
# Applicable to: rcs0011

roslynator_blank_line_between_switch_sections = include # include|omit|omit_after_block
# Applicable to: rcs0061

roslynator_blank_line_between_using_directives = never # never|separate_groups
# Applicable to: rcs0015

roslynator_block_braces_style = multi_line # multi_line|single_line_when_empty
# Default: multi_line
# Applicable to: rcs0021

roslynator_body_style = expression # block|expression
# Applicable to: rcs1016

roslynator_conditional_operator_condition_parentheses_style = omit # include|omit|omit_when_condition_is_single_token
# Applicable to: rcs1051

roslynator_conditional_operator_new_line = after # after|before
# Applicable to: rcs0028

roslynator_configure_await = true # true|false
# Applicable to: rcs1090

roslynator_doc_comment_summary_style = single_line # multi_line|single_line
# Applicable to: rcs1253

roslynator_empty_string_style = literal # field|literal
# Applicable to: rcs1078

roslynator_enum_flag_value_style = decimal_number # decimal_number|shift_operator
# Applicable to: rcs1254

roslynator_enum_has_flag_style = method # method|operator
# Applicable to: rcs1096

roslynator_equals_token_new_line = after # after|before
# Applicable to: rcs0052

roslynator_infinite_loop_style = for # for|while
# Applicable to: rcs1252

roslynator_max_line_length = 100
# Default: 140
# Applicable to: rcs0056

roslynator_new_line_at_end_of_file = true # true|false
# Applicable to: rcs0058

roslynator_new_line_before_while_in_do_statement = true # true|false
# Applicable to: rcs0051

roslynator_null_check_style = pattern_matching # equality_operator|pattern_matching
# Applicable to: rcs1248

roslynator_null_conditional_operator_new_line = after # after|before
# Applicable to: rcs0059

roslynator_object_creation_parentheses_style = omit # include|omit
# Applicable to: rcs1050

roslynator_object_creation_type_style = implicit_when_type_is_obvious # explicit|implicit|implicit_when_type_is_obvious
# Applicable to: rcs1250

roslynator_prefix_field_identifier_with_underscore = true # true|false

roslynator_tab_length = 4
# Default: 4
# Applicable to: rcs0056

roslynator_trailing_comma_style = omit #include|omit|omit_when_single_line
# Applicable to: rcs1260

roslynator_unity_code_analysis.enabled = true # true|false
# Applicable to: rcs1169, rcs1213

roslynator_use_anonymous_function_or_method_group = method_group # anonymous_function|method_group
# Applicable to: rcs1207

roslynator_use_block_body_when_declaration_spans_over_multiple_lines = true # true|false
# Applicable to: rcs1016

roslynator_use_block_body_when_expression_spans_over_multiple_lines = true # true|false
# Applicable to: rcs1016

roslynator_use_collection_expression = true # true|false
# Applicable to: rcs1014, rcs1250

roslynator_use_var = never # always|never|when_type_is_obvious
# Applicable to: rcs1264

roslynator_use_var_instead_of_implicit_object_creation = false # true|false
# Applicable to: rcs1250


# Analyzers
# dotnet_analyzer_diagnostic.category-roslynator.severity = warning

# Add blank line after embedded statement
dotnet_diagnostic.rcs0001.severity = warning

# Add blank line after #region
dotnet_diagnostic.rcs0002.severity = warning

# Add blank line after using directive list
dotnet_diagnostic.rcs0003.severity = warning

# Add blank line before #endregion
dotnet_diagnostic.rcs0005.severity = warning

# Add blank line before using directive list
dotnet_diagnostic.rcs0006.severity = warning

# Add blank line between accessors
dotnet_diagnostic.rcs0007.severity = warning

# Add blank line between closing brace and next statement
dotnet_diagnostic.rcs0008.severity = warning

# Add blank line between declaration and documentation comment
dotnet_diagnostic.rcs0009.severity = warning

# Add blank line between declarations
dotnet_diagnostic.rcs0010.severity = warning

# Add/remove blank line between single-line accessors
dotnet_diagnostic.rcs0011.severity = warning
# Options: roslynator_blank_line_between_single_line_accessors

# Add blank line between single-line declarations
dotnet_diagnostic.rcs0012.severity = warning

# Add blank line between single-line declarations of different kind
dotnet_diagnostic.rcs0013.severity = warning

# Add/remove blank line between using directives
dotnet_diagnostic.rcs0015.severity = warning
# Options: roslynator_blank_line_between_using_directives

# Put attribute list on its own line
dotnet_diagnostic.rcs0016.severity = warning

# Format accessor's braces on a single line or multiple lines
dotnet_diagnostic.rcs0020.severity = warning
# Options: roslynator_accessor_braces_style

# Format block's braces on a single line or multiple lines
dotnet_diagnostic.rcs0021.severity = warning
# Options: roslynator_block_braces_style

# Format type declaration's braces
dotnet_diagnostic.rcs0023.severity = warning

# Add new line after switch label
dotnet_diagnostic.rcs0024.severity = warning

# Put full accessor on its own line
dotnet_diagnostic.rcs0025.severity = warning

# Place new line after/before binary operator
dotnet_diagnostic.rcs0027.severity = warning
# Options: roslynator_binary_operator_new_line

# Place new line after/before '?:' operator
dotnet_diagnostic.rcs0028.severity = warning
# Options: roslynator_conditional_operator_new_line

# Put constructor initializer on its own line
dotnet_diagnostic.rcs0029.severity = warning

# Put embedded statement on its own line
dotnet_diagnostic.rcs0030.severity = warning

# Put enum member on its own line
dotnet_diagnostic.rcs0031.severity = warning

# Place new line after/before arrow token
dotnet_diagnostic.rcs0032.severity = warning
# Options: roslynator_arrow_token_new_line

# Put statement on its own line
dotnet_diagnostic.rcs0033.severity = warning

# Put type parameter constraint on its own line
dotnet_diagnostic.rcs0034.severity = warning

# Remove blank line between single-line declarations of same kind
dotnet_diagnostic.rcs0036.severity = warning

# Remove new line before base list
dotnet_diagnostic.rcs0039.severity = warning

# Remove new line between 'if' keyword and 'else' keyword
dotnet_diagnostic.rcs0041.severity = warning

# Put auto-accessors on a single line
dotnet_diagnostic.rcs0042.severity = warning

# Use carriage return + linefeed as new line
dotnet_diagnostic.rcs0044.severity = warning

# Use linefeed as new line
dotnet_diagnostic.rcs0045.severity = warning

# Use spaces instead of tab
dotnet_diagnostic.rcs0046.severity = warning

# Put initializer on a single line
dotnet_diagnostic.rcs0048.severity = warning

# Add blank line after top comment
dotnet_diagnostic.rcs0049.severity = warning

# Add blank line before top declaration
dotnet_diagnostic.rcs0050.severity = warning

# Add/remove new line before 'while' in 'do' statement
dotnet_diagnostic.rcs0051.severity = warning
# Options: roslynator_new_line_before_while_in_do_statement

# Place new line after/before equals token
dotnet_diagnostic.rcs0052.severity = warning
# Options: roslynator_equals_token_new_line

# Fix formatting of a list
dotnet_diagnostic.rcs0053.severity = warning

# Fix formatting of a call chain
dotnet_diagnostic.rcs0054.severity = warning

# Fix formatting of a binary expression chain
dotnet_diagnostic.rcs0055.severity = warning

# A line is too long
dotnet_diagnostic.rcs0056.severity = warning
# Options: roslynator_max_line_length, roslynator_tab_length

# Normalize whitespace at the beginning of a file
dotnet_diagnostic.rcs0057.severity = warning

# Normalize whitespace at the end of a file
dotnet_diagnostic.rcs0058.severity = warning
# Options: roslynator_new_line_at_end_of_file

# Place new line after/before null-conditional operator
dotnet_diagnostic.rcs0059.severity = warning
# Options: roslynator_null_conditional_operator_new_line

# Add/remove line after file scoped namespace declaration
dotnet_diagnostic.rcs0060.severity = warning
# Options: roslynator_blank_line_after_file_scoped_namespace_declaration

# Add/remove blank line between switch sections
dotnet_diagnostic.rcs0061.severity = warning
# Options: roslynator_blank_line_between_switch_sections

# Put expression body on its own line
dotnet_diagnostic.rcs0062.severity = warning
# Options: roslynator_arrow_token_new_line

# Remove unnecessary blank line
dotnet_diagnostic.rcs0063.severity = warning
# Options: roslynator_blank_line_between_closing_brace_and_switch_section

# Add braces (when expression spans over multiple lines)
dotnet_diagnostic.rcs1001.severity = warning

# Remove braces
# Disabled: prefer braces
dotnet_diagnostic.rcs1002.severity = none

# Add braces to if-else (when expression spans over multiple lines)
dotnet_diagnostic.rcs1003.severity = warning

# Remove braces from if-else
# Disabled: prefer braces
dotnet_diagnostic.rcs1004.severity = none

# Simplify nested using statement
dotnet_diagnostic.rcs1005.severity = warning

# Merge 'else' with nested 'if'
dotnet_diagnostic.rcs1006.severity = warning

# Add braces
dotnet_diagnostic.rcs1007.severity = warning

# Use predefined type
dotnet_diagnostic.rcs1013.severity = warning

# Use explicitly/implicitly typed array
dotnet_diagnostic.rcs1014.severity = warning
# Options: roslynator_array_creation_type_style, roslynator_use_collection_expression

# Use nameof operator
dotnet_diagnostic.rcs1015.severity = warning

# Use block body or expression body
# Disabled: prefer block body for methods, expression body for properties, indexers, and accessors
#   but this is not supported by rcs1016
dotnet_diagnostic.rcs1016.severity = none
# Options: roslynator_arrow_token_new_line, roslynator_body_style, roslynator_use_block_body_when_declaration_spans_over_multiple_lines, roslynator_use_block_body_when_expression_spans_over_multiple_lines

# Add/remove accessibility modifiers
dotnet_diagnostic.rcs1018.severity = warning
# Options: roslynator_accessibility_modifiers

# Order modifiers
# Disabled: handled by IDE0036
dotnet_diagnostic.rcs1019.severity = none

# Simplify Nullable<T> to T?
dotnet_diagnostic.rcs1020.severity = warning

# Convert lambda expression body to expression body
dotnet_diagnostic.rcs1021.severity = warning

# Remove unnecessary braces in switch section
dotnet_diagnostic.rcs1031.severity = warning

# Remove redundant parentheses
dotnet_diagnostic.rcs1032.severity = warning

# Remove redundant boolean literal
dotnet_diagnostic.rcs1033.severity = warning

# Remove redundant 'sealed' modifier
dotnet_diagnostic.rcs1034.severity = warning

# Remove trailing white-space
dotnet_diagnostic.rcs1037.severity = warning

# Remove argument list from attribute
dotnet_diagnostic.rcs1039.severity = warning

# Remove enum default underlying type
dotnet_diagnostic.rcs1042.severity = warning

# Remove 'partial' modifier from type with a single part
dotnet_diagnostic.rcs1043.severity = warning

# Remove original exception from throw statement
dotnet_diagnostic.rcs1044.severity = warning

# Asynchronous method name should end with 'Async'
# Disabled: 'Async' is just used to indicate the method returns 'Task', so why not end with 'Task' instead?
# Because we don't put the return type in the method name anywhere else, no exception should be made for 'Async' or 'Task'
dotnet_diagnostic.rcs1046.severity = none

# Non-asynchronous method name should not end with 'Async'
dotnet_diagnostic.rcs1047.severity = warning

# Use lambda expression instead of anonymous method
dotnet_diagnostic.rcs1048.severity = warning

# Simplify boolean comparison
dotnet_diagnostic.rcs1049.severity = warning

# Include/omit parentheses when creating new object
dotnet_diagnostic.rcs1050.severity = warning
# Options: roslynator_object_creation_parentheses_style

# Add/remove parentheses from condition in conditional operator
dotnet_diagnostic.rcs1051.severity = warning
# Options: roslynator_conditional_operator_condition_parentheses_style

# Declare each attribute separately
dotnet_diagnostic.rcs1052.severity = warning

# Unnecessary semicolon at the end of declaration
dotnet_diagnostic.rcs1055.severity = warning

# Avoid usage of using alias directive
dotnet_diagnostic.rcs1056.severity = warning

# Use compound assignment
dotnet_diagnostic.rcs1058.severity = warning

# Avoid locking on publicly accessible instance
dotnet_diagnostic.rcs1059.severity = warning

# Declare each type in separate file
dotnet_diagnostic.rcs1060.severity = warning

# Merge 'if' with nested 'if'
dotnet_diagnostic.rcs1061.severity = warning

# Simplify logical negation
dotnet_diagnostic.rcs1068.severity = warning

# Remove unnecessary case label
dotnet_diagnostic.rcs1069.severity = warning

# Remove redundant default switch section
dotnet_diagnostic.rcs1070.severity = warning

# Remove redundant base constructor call
dotnet_diagnostic.rcs1071.severity = warning

# Convert 'if' to 'return' statement
dotnet_diagnostic.rcs1073.severity = warning

# Remove redundant constructor
dotnet_diagnostic.rcs1074.severity = warning

# Avoid empty catch clause that catches System.Exception
dotnet_diagnostic.rcs1075.severity = warning

# Optimize LINQ method call
dotnet_diagnostic.rcs1077.severity = warning

# Use "" or 'string.Empty'
dotnet_diagnostic.rcs1078.severity = warning
# Options: roslynator_empty_string_style

# Throwing of new NotImplementedException
dotnet_diagnostic.rcs1079.severity = warning

# Use 'Count/Length' property instead of 'Any' method
dotnet_diagnostic.rcs1080.severity = warning

# Split variable declaration
# Disabled: don't warn against valid use of language features
dotnet_diagnostic.rcs1081.severity = none

# Use coalesce expression instead of conditional expression
dotnet_diagnostic.rcs1084.severity = warning

# Use auto-implemented property
dotnet_diagnostic.rcs1085.severity = warning

# Use --/++ operator instead of assignment
dotnet_diagnostic.rcs1089.severity = warning

# Add/remove 'ConfigureAwait(false)' call
dotnet_diagnostic.rcs1090.severity = warning
# Options: roslynator_configure_await

# File contains no code
dotnet_diagnostic.rcs1093.severity = warning

# Declare using directive on top level
dotnet_diagnostic.rcs1094.severity = warning

# Use 'HasFlag' method or bitwise operator
dotnet_diagnostic.rcs1096.severity = warning
# Options: roslynator_enum_has_flag_style

# Remove redundant 'ToString' call
dotnet_diagnostic.rcs1097.severity = warning

# Constant values should be placed on right side of comparisons
dotnet_diagnostic.rcs1098.severity = warning

# Default label should be the last label in a switch section
dotnet_diagnostic.rcs1099.severity = warning

# Make class static
dotnet_diagnostic.rcs1102.severity = warning

# Convert 'if' to assignment
dotnet_diagnostic.rcs1103.severity = warning

# Simplify conditional expression
dotnet_diagnostic.rcs1104.severity = warning

# Unnecessary interpolation
dotnet_diagnostic.rcs1105.severity = warning

# Remove redundant 'ToCharArray' call
dotnet_diagnostic.rcs1107.severity = warning

# Add 'static' modifier to all partial class declarations
dotnet_diagnostic.rcs1108.severity = warning

# Declare type inside namespace
dotnet_diagnostic.rcs1110.severity = warning

# Add braces to switch section with multiple statements
# Disabled: don't use block bodies for switch sections unless you need a scoped variable
dotnet_diagnostic.rcs1111.severity = none

# Combine 'Enumerable.Where' method chain
dotnet_diagnostic.rcs1112.severity = warning

# Use 'string.IsNullOrEmpty' method
dotnet_diagnostic.rcs1113.severity = warning

# Remove redundant delegate creation
dotnet_diagnostic.rcs1114.severity = warning

# Mark local variable as const
dotnet_diagnostic.rcs1118.severity = warning

# Add parentheses when necessary
dotnet_diagnostic.rcs1123.severity = warning

# Inline local variable
dotnet_diagnostic.rcs1124.severity = warning

# Add braces to if-else
dotnet_diagnostic.rcs1126.severity = warning

# Use coalesce expression
dotnet_diagnostic.rcs1128.severity = warning

# Remove redundant field initialization
dotnet_diagnostic.rcs1129.severity = warning

# Bitwise operation on enum without Flags attribute
dotnet_diagnostic.rcs1130.severity = warning

# Remove redundant overriding member
dotnet_diagnostic.rcs1132.severity = warning

# Remove redundant Dispose/Close call
dotnet_diagnostic.rcs1133.severity = warning

# Remove redundant statement
dotnet_diagnostic.rcs1134.severity = warning

# Declare enum member with zero value (when enum has FlagsAttribute)
dotnet_diagnostic.rcs1135.severity = warning

# Merge switch sections with equivalent content
dotnet_diagnostic.rcs1136.severity = warning

# Add summary to documentation comment
dotnet_diagnostic.rcs1138.severity = warning

# Add summary element to documentation comment
dotnet_diagnostic.rcs1139.severity = warning

# Add exception to documentation comment
dotnet_diagnostic.rcs1140.severity = warning

# Add 'param' element to documentation comment
dotnet_diagnostic.rcs1141.severity = warning

# Add 'typeparam' element to documentation comment
dotnet_diagnostic.rcs1142.severity = warning

# Simplify coalesce expression
dotnet_diagnostic.rcs1143.severity = warning

# Remove redundant 'as' operator
dotnet_diagnostic.rcs1145.severity = warning

# Use conditional access
dotnet_diagnostic.rcs1146.severity = warning

# Remove redundant cast
dotnet_diagnostic.rcs1151.severity = warning

# Sort enum members
dotnet_diagnostic.rcs1154.severity = warning

# Use StringComparison when comparing strings
dotnet_diagnostic.rcs1155.severity = warning

# Use string.Length instead of comparison with empty string
dotnet_diagnostic.rcs1156.severity = warning

# Composite enum value contains undefined flag
dotnet_diagnostic.rcs1157.severity = warning

# Static member in generic type should use a type parameter
dotnet_diagnostic.rcs1158.severity = warning

# Use EventHandler<T>
dotnet_diagnostic.rcs1159.severity = warning

# Abstract type should not have public constructors
dotnet_diagnostic.rcs1160.severity = warning

# Enum should declare explicit values
# Disabled: disagree, pretend enum members don't have values, only ever use the name
dotnet_diagnostic.rcs1161.severity = none

# Avoid chain of assignments
dotnet_diagnostic.rcs1162.severity = suggestion

# Unused parameter
dotnet_diagnostic.rcs1163.severity = suggestion

# Unused type parameter
dotnet_diagnostic.rcs1164.severity = suggestion

# Unconstrained type parameter checked for null
dotnet_diagnostic.rcs1165.severity = warning

# Value type object is never equal to null
dotnet_diagnostic.rcs1166.severity = warning

# Parameter name differs from base name
dotnet_diagnostic.rcs1168.severity = warning

# Make field read-only
dotnet_diagnostic.rcs1169.severity = warning
# Options: roslynator_unity_code_analysis.enabled

# Use read-only auto-implemented property
dotnet_diagnostic.rcs1170.severity = warning

# Simplify lazy initialization
dotnet_diagnostic.rcs1171.severity = warning

# Use 'is' operator instead of 'as' operator
dotnet_diagnostic.rcs1172.severity = warning

# Use coalesce expression instead of 'if'
dotnet_diagnostic.rcs1173.severity = warning

# Remove redundant async/await
dotnet_diagnostic.rcs1174.severity = warning

# Unused 'this' parameter
dotnet_diagnostic.rcs1175.severity = warning

# Unnecessary assignment
dotnet_diagnostic.rcs1179.severity = warning

# Inline lazy initialization
dotnet_diagnostic.rcs1180.severity = warning

# Convert comment to documentation comment
dotnet_diagnostic.rcs1181.severity = warning

# Remove redundant base interface
dotnet_diagnostic.rcs1182.severity = warning

# Use Regex instance instead of static method
dotnet_diagnostic.rcs1186.severity = warning

# Use constant instead of field
dotnet_diagnostic.rcs1187.severity = warning

# Remove redundant auto-property initialization
dotnet_diagnostic.rcs1188.severity = warning

# Add or remove region name
dotnet_diagnostic.rcs1189.severity = warning

# Join string expressions
dotnet_diagnostic.rcs1190.severity = warning

# Declare enum value as combination of names
dotnet_diagnostic.rcs1191.severity = warning

# Unnecessary usage of verbatim string literal
dotnet_diagnostic.rcs1192.severity = warning

# Overriding member should not change 'params' modifier
dotnet_diagnostic.rcs1193.severity = warning

# Implement exception constructors
dotnet_diagnostic.rcs1194.severity = warning

# Use ^ operator
dotnet_diagnostic.rcs1195.severity = warning

# Call extension method as instance method
dotnet_diagnostic.rcs1196.severity = warning

# Optimize StringBuilder.Append/AppendLine call
dotnet_diagnostic.rcs1197.severity = warning

# Avoid unnecessary boxing of value type
# Disabled: complains about usage of value types in string interpolation
dotnet_diagnostic.rcs1198.severity = none

# Unnecessary null check
dotnet_diagnostic.rcs1199.severity = warning

# Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'
dotnet_diagnostic.rcs1200.severity = warning

# Use method chaining
dotnet_diagnostic.rcs1201.severity = warning

# Avoid NullReferenceException
dotnet_diagnostic.rcs1202.severity = warning

# Use AttributeUsageAttribute
dotnet_diagnostic.rcs1203.severity = warning

# Use EventArgs.Empty
dotnet_diagnostic.rcs1204.severity = warning

# Order named arguments according to the order of parameters
dotnet_diagnostic.rcs1205.severity = warning

# Use conditional access instead of conditional expression
dotnet_diagnostic.rcs1206.severity = warning

# Use anonymous function or method group
dotnet_diagnostic.rcs1207.severity = warning
# Options: roslynator_use_anonymous_function_or_method_group

# Reduce 'if' nesting
# Disabled: makes conditions more complex
dotnet_diagnostic.rcs1208.severity = none

# Order type parameter constraints
dotnet_diagnostic.rcs1209.severity = warning

# Return completed task instead of returning null
dotnet_diagnostic.rcs1210.severity = warning

# Remove unnecessary 'else'
dotnet_diagnostic.rcs1211.severity = warning

# Remove redundant assignment
dotnet_diagnostic.rcs1212.severity = warning

# Remove unused member declaration
dotnet_diagnostic.rcs1213.severity = warning
# Options: roslynator_unity_code_analysis.enabled

# Unnecessary interpolated string
dotnet_diagnostic.rcs1214.severity = warning

# Expression is always equal to true/false
dotnet_diagnostic.rcs1215.severity = warning

# Unnecessary unsafe context
dotnet_diagnostic.rcs1216.severity = warning

# Convert interpolated string to concatenation
dotnet_diagnostic.rcs1217.severity = warning

# Simplify code branching
dotnet_diagnostic.rcs1218.severity = warning

# Use pattern matching instead of combination of 'is' operator and cast operator
dotnet_diagnostic.rcs1220.severity = warning

# Use pattern matching instead of combination of 'as' operator and null check
dotnet_diagnostic.rcs1221.severity = warning

# Merge preprocessor directives
dotnet_diagnostic.rcs1222.severity = warning

# Mark publicly visible type with DebuggerDisplay attribute
# Disabled: imagine spending time adding DebuggerDisplay attributes to all public types
dotnet_diagnostic.rcs1223.severity = none

# Make method an extension method
dotnet_diagnostic.rcs1224.severity = warning

# Make class sealed
dotnet_diagnostic.rcs1225.severity = warning

# Add paragraph to documentation comment
dotnet_diagnostic.rcs1226.severity = warning

# Validate arguments correctly
dotnet_diagnostic.rcs1227.severity = warning

# Unused element in a documentation comment
dotnet_diagnostic.rcs1228.severity = warning

# Use async/await when necessary
dotnet_diagnostic.rcs1229.severity = warning

# Unnecessary explicit use of enumerator
dotnet_diagnostic.rcs1230.severity = warning

# Make parameter ref read-only
dotnet_diagnostic.rcs1231.severity = warning

# Order elements in documentation comment
dotnet_diagnostic.rcs1232.severity = warning

# Use short-circuiting operator
dotnet_diagnostic.rcs1233.severity = warning

# Duplicate enum value
dotnet_diagnostic.rcs1234.severity = warning

# Optimize method call
dotnet_diagnostic.rcs1235.severity = warning

# Use exception filter
dotnet_diagnostic.rcs1236.severity = warning

# Avoid nested ?: operators
dotnet_diagnostic.rcs1238.severity = warning

# Use 'for' statement instead of 'while' statement
dotnet_diagnostic.rcs1239.severity = warning

# Operator is unnecessary
dotnet_diagnostic.rcs1240.severity = warning

# Implement non-generic counterpart
dotnet_diagnostic.rcs1241.severity = warning

# Do not pass non-read-only struct by read-only reference
# Disabled: raises false positives in some cases like CancellationToken and TimeSpan
dotnet_diagnostic.rcs1242.severity = none

# Duplicate word in a comment
dotnet_diagnostic.rcs1243.severity = warning

# Simplify 'default' expression
dotnet_diagnostic.rcs1244.severity = warning

# Use element access
dotnet_diagnostic.rcs1246.severity = warning

# Fix documentation comment tag
dotnet_diagnostic.rcs1247.severity = warning

# Normalize null check
dotnet_diagnostic.rcs1248.severity = warning
# Options: roslynator_null_check_style

# Unnecessary null-forgiving operator
dotnet_diagnostic.rcs1249.severity = warning

# Use implicit/explicit object creation
# Disabled: conflicts with IDE0028, this rule is too strict about collection expresions when type is not obvious
dotnet_diagnostic.rcs1250.severity = none
# Options: roslynator_object_creation_type_style, roslynator_use_collection_expression, roslynator_use_var_instead_of_implicit_object_creation

# Remove unnecessary braces from record declaration
dotnet_diagnostic.rcs1251.severity = warning

# Normalize usage of infinite loop
dotnet_diagnostic.rcs1252.severity = warning
# Options: roslynator_infinite_loop_style

# Format documentation comment summary
dotnet_diagnostic.rcs1253.severity = warning
# Options: roslynator_doc_comment_summary_style

# Normalize format of enum flag value
# Disabled:doesn't allow binary numbers like 0b0001, 0b0010, etc.
dotnet_diagnostic.rcs1254.severity = none
# Options: roslynator_enum_flag_value_style

# Simplify argument null check
dotnet_diagnostic.rcs1255.severity = warning

# Invalid argument null check
dotnet_diagnostic.rcs1256.severity = warning

# Use enum field explicitly
dotnet_diagnostic.rcs1257.severity = warning

# Unnecessary enum flag
dotnet_diagnostic.rcs1258.severity = warning

# Remove empty syntax
dotnet_diagnostic.rcs1259.severity = warning

# Add/remove trailing comma
dotnet_diagnostic.rcs1260.severity = warning
# Options: roslynator_trailing_comma_style

# Resource can be disposed asynchronously
dotnet_diagnostic.rcs1261.severity = warning

# Unnecessary raw string literal
dotnet_diagnostic.rcs1262.severity = warning

# Invalid reference in a documentation comment
dotnet_diagnostic.rcs1263.severity = warning

# Use 'var' or explicit type
# Disabled: already handled by ide0007, ide0008
dotnet_diagnostic.rcs1264.severity = none
# Options: roslynator_use_var

# Remove redundant catch block
dotnet_diagnostic.rcs1265.severity = warning

# Use raw string literal
dotnet_diagnostic.rcs1266.severity = warning

# Use string interpolation instead of 'string.Concat'
dotnet_diagnostic.rcs1267.severity = warning

# Simplify numeric comparison
dotnet_diagnostic.rcs1268.severity = warning

# Use pattern matching
dotnet_diagnostic.rcs9001.severity = warning

# Use property SyntaxNode.SpanStart
dotnet_diagnostic.rcs9002.severity = warning

# Unnecessary conditional access
dotnet_diagnostic.rcs9003.severity = warning

# Call 'Any' instead of accessing 'Count'
dotnet_diagnostic.rcs9004.severity = warning

# Unnecessary null check
dotnet_diagnostic.rcs9005.severity = warning

# Use element access
dotnet_diagnostic.rcs9006.severity = warning

# Use return value
dotnet_diagnostic.rcs9007.severity = warning

# Call 'Last' instead of using []
dotnet_diagnostic.rcs9008.severity = warning

# Unknown language name
dotnet_diagnostic.rcs9009.severity = warning

# Specify ExportCodeRefactoringProviderAttribute.Name
dotnet_diagnostic.rcs9010.severity = warning

# Specify ExportCodeFixProviderAttribute.Name
dotnet_diagnostic.rcs9011.severity = warning

# Avoid uninstantiated internal classes
dotnet_diagnostic.ca1812.severity = none

# Use conditional expression for return
dotnet_diagnostic.ide0046.severity = suggestion

# Use expression body for lambdas
dotnet_diagnostic.ide0053.severity = suggestion

# Namespace does not match folder structure
dotnet_diagnostic.ide0130.severity = none
