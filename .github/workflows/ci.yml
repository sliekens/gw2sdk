name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build-and-deploy:
    name: Build and deploy
    env:
      build-configuration: Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        source-url: https://nuget.pkg.github.com/StevenLiekens/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     - name: Cache dependencies
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-nuget-packages
#       with:
#         path: ~/.nuget/packages
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/packages.lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
    - name: Install dependencies
      run: dotnet restore
    - name: Test
      run: dotnet test --no-restore --settings ${{ github.workspace }}/coverletArgs.runsettings
      env:
        ApiKeyBasic: ${{ secrets.API_TOKEN_BASIC }}
        ApiKeyFull: ${{ secrets.API_TOKEN_FULL }}
    - name: Upload coverage
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: "**/coverage.cobertura.xml"
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.7
    - name: Build
      run: dotnet build --configuration ${{ env.build-configuration }} --no-restore
    - name: Pack artifacts
      run: dotnet pack --configuration ${{ env.build-configuration }} --no-build --output artifacts --version-suffix CI-$(date --utc '+%Y%m%d-%H%M%S')
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: artifacts
    - name: Upload packages to GitHub Packages
      run: dotnet nuget push artifacts/*.nupkg
